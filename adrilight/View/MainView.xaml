<hc:Window x:Class="adrilight.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:adrilight.View"
        xmlns:vm="clr-namespace:adrilight.ViewModel"
         xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:converters="clr-namespace:adrilight.Converter"
         d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
        Background="{DynamicResource RegionBrush}"
        
       
        mc:Ignorable="d" Top="20"
        WindowStartupLocation="CenterScreen"            
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"         
       
        
       AllowDrop="True" AllowsTransparency="False"
         MinHeight="480"  MinWidth="640" MouseLeftButtonDown="Window_MouseLeftButtonDown"  Closing="Window_Closing">
   
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Button" x:Key="sideBtn" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="Height" Value="46"></Setter>
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource MainContentForegroundBrush}"></Setter>
                <Setter Property="FontWeight" Value="Regular"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="9" Background="{TemplateBinding Background}" BorderThickness="0">
                                <StackPanel Orientation="Horizontal" Margin="10,0,10,0">
                                    <Image Width="24" Height="24"  Name="verticalMenuImage"></Image>

                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>

                                <DataTrigger Binding="{Binding Text}" Value="Dashboard">
                                    <Setter Property="Source" TargetName="verticalMenuImage" Value="{StaticResource svgDashboard}"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="Dashboard">
                                    <Setter Property="ToolTip" TargetName="verticalMenuImage" Value="Dashboard"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="Device Settings">
                                    <Setter Property="Source" TargetName="verticalMenuImage" Value="{StaticResource svgDevice}"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="Device Settings">
                                    <Setter Property="ToolTip" TargetName="verticalMenuImage" Value="Cài đặt thiết bị"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="Canvas Lighting">
                                    <Setter Property="Source" TargetName="verticalMenuImage" Value="{ StaticResource canvasLighting }"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="Canvas Lighting">
                                    <Setter Property="ToolTip" TargetName="verticalMenuImage" Value="Canvas Lighting"></Setter>
                                </DataTrigger>
                             
                                <DataTrigger Binding="{Binding Text}" Value="App Settings">
                                    <Setter Property="Source" TargetName="verticalMenuImage" Value="{StaticResource svgSetting}"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text}" Value="App Settings">
                                    <Setter Property="ToolTip" TargetName="verticalMenuImage" Value="Cài đặt App"></Setter>
                                </DataTrigger>
                            
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"></Setter>
                                    <Setter Property="Foreground" Value="{DynamicResource RegionBrush}"></Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                    <Setter Property="Height" Value="0"></Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style x:Key="DemoGroupItemStyle" TargetType="GroupItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GroupItem">
                            <hc:SimpleStackPanel>
                                <hc:Divider Content="{Binding Name}" LineStrokeDashArray="2, 2" Padding="16,0" Margin="0,16,0,10"/>
                                <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                            </hc:SimpleStackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListBoxItemTransparent" BasedOn="{hc:StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
                <Setter Property="Visibility" Value="{Binding IsVisible,Converter={StaticResource boolToVisibilityConvert}}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>

            <Style x:Key="ListBoxTransparent" BasedOn="{hc:StaticResource ListBoxBaseStyle}" TargetType="ListBox">
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource ListBoxItemTransparent}"/>
            </Style>
            <DataTemplate x:Key="dashboardTemplate">
                <local:AllDeviceView/>
            </DataTemplate>
            <DataTemplate x:Key="lightingTemplate">
                <local:DeviceLightingControl/>
            </DataTemplate>
            <!--<DataTemplate x:Key="groupLightingTemplate">
                <local:GroupLighting/>
            </DataTemplate>-->
            <!--<DataTemplate x:Key="deviceSettingTemplate">
                --><!--<local:NewDeviceSettingsView/>--><!--
            </DataTemplate>-->
            <!--<DataTemplate x:Key="appSettingTemplate">
                <local:NewAppSettingsView/>
            </DataTemplate>-->
            <!--<DataTemplate x:Key="canvasLightingTemplate">
                <local:CanvasLightingView/>
            </DataTemplate>-->
            <!--<DataTemplate x:Key="faqTemplate">
                <local:FAQ/>
            </DataTemplate>-->
            <Style x:Key="selectableContentStyle" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=DashboardLeftMenu, Path=SelectedItem}" Value="Dashboard">
                        <Setter Property="ContentTemplate" Value="{StaticResource dashboardTemplate}" />
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding ElementName=DashboardLeftMenu, Path=SelectedItem}" Value="Settings">
                        <Setter Property="ContentTemplate" Value="{StaticResource deviceSettingTemplate}" />
                    </DataTrigger>-->
                    <!--<DataTrigger Binding="{Binding Path=SelectedVerticalMenuItem.Text}" Value="App Settings">
                        <Setter Property="ContentTemplate" Value="{StaticResource appSettingTemplate}" />
                    </DataTrigger>-->
                    <!--<DataTrigger Binding="{Binding Path=SelectedVerticalMenuItem.Text}" Value="Canvas Lighting">
                        <Setter Property="ContentTemplate" Value="{StaticResource canvasLightingTemplate}" />
                    </DataTrigger>-->
                    <DataTrigger Binding="{Binding Path=SelectedVerticalMenuItem.Text}" Value="Lighting">
                        <Setter Property="ContentTemplate" Value="{StaticResource lightingTemplate}" />
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding Path=SelectedVerticalMenuItem.Text}" Value="Group Lighting">
                        <Setter Property="ContentTemplate" Value="{StaticResource groupLightingTemplate}" />
                    </DataTrigger>-->
                     
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <hc:DialogContainer
                 >

            <Grid>

                <hc:NotifyIcon Click="OpenDashboard" x:Name="noticon" Token="Ambinity"  Text="Ambinity" >
                    <hc:NotifyIcon.ContextMenu>
                        <ContextMenu>
                            <MenuItem  Click="OpenDashboard" Header="Dashboard">
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource dashboard}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>

                            </MenuItem>
                            <MenuItem x:Name="ShortcutMenu" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Shortcut">
                                <!--<MenuItem.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding PlacementTarget.Tag.AvailableAutomations,RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                        <TextBlock Text="{Binding Name}"></TextBlock>
                                    </HierarchicalDataTemplate>
                                </MenuItem.ItemTemplate>-->
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource auto}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Command="hc:ControlCommands.ShutdownApp" Header="Exit">
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource exit}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </hc:NotifyIcon.ContextMenu>

                </hc:NotifyIcon>
                <Grid Margin="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                
                    <Grid Visibility="Collapsed" >


                        <hc:TransitioningContentControl TransitionMode="Right2LeftWithFade" >


                            <StackPanel  Margin="0,7,0,0">

                            <DockPanel>
                                <Button Style="{StaticResource ButtonBaseStyle}" Command="{Binding BackCommand}" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Margin="10,10,10,4" Content="Dashboard" BorderThickness="0" Background="{DynamicResource SecondaryRegionBrush}"/>


                                <Grid Margin="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <ListBox  Name="ListBoxDemo" ScrollViewer.CanContentScroll="False" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" VirtualizingStackPanel.IsVirtualizing="True" SelectedItem="{Binding CurrentDevice}" ItemsSource="{Binding AvailableDevices}" BorderThickness="0" SelectionMode="Single" Style="{DynamicResource ListBoxTransparent}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="16" Height="16" Source="/Resources/Image/screen.png" />
                                                    <hc:HighlightTextBlock Margin="6,0,0,0" SourceText="{Binding DeviceName}" QueriesText="{Binding QueriesText}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource DemoGroupItemStyle}"/>
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                             
                                
                            </DockPanel>

                        </StackPanel>
                    </hc:TransitioningContentControl>
                    </Grid>
                    <Grid Visibility="Collapsed">
                        
                    
                    <hc:TransitioningContentControl  TransitionMode="Right2LeftWithFade">


                        <StackPanel  Margin="0,7,0,0">

                            <DockPanel>
                                


                                <Grid Margin="10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                   

                                    <ListBox SelectedIndex="0"  Name="DashboardLeftMenu" ScrollViewer.CanContentScroll="False" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" VirtualizingStackPanel.IsVirtualizing="True"  ItemsSource="{Binding AvailableMenu}" BorderThickness="0" SelectionMode="Single" Style="{DynamicResource ListBoxTransparent}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="16" Height="16" Source="/Resources/Image/screen.png" />
                                                    <hc:HighlightTextBlock Margin="6,0,0,0" SourceText="{Binding .}"/>
                                                   
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource DemoGroupItemStyle}"/>
                                        </ListBox.GroupStyle>
                                    </ListBox>
                                </Grid>
                                <hc:Interaction.Triggers>
                                    <!--<hc:EventTrigger EventName="SelectionChanged">
                                        <hc:EventToCommand Command="{Binding SwitchDemoCmd}" PassEventArgsToCommand="True" />
                                    </hc:EventTrigger>-->
                                </hc:Interaction.Triggers>

                            </DockPanel>

                        </StackPanel>
                    </hc:TransitioningContentControl>
                    </Grid>
                    <Grid Grid.Column="1">
                        
                    
                    <hc:TransitioningContentControl Grid.Column="1" TransitionMode="Right2LeftWithFade">
                        
                    
                    <ContentControl Content="{Binding .,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource selectableContentStyle}"  >

                    </ContentControl>
                    </hc:TransitioningContentControl>
                    </Grid>
                </Grid>
            </Grid>

        </hc:DialogContainer>
    </Grid>

</hc:Window>