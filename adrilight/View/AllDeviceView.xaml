<UserControl x:Class="adrilight.View.AllDeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:settings="clr-namespace:adrilight"
             Background="{StaticResource RegionBrush}"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:converters="clr-namespace:adrilight.Converter"
             mc:Ignorable="d" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             
        TextElement.FontWeight="Regular"
        
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"         
             Name="alldevice"
       
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
            <converters:Inverseboolvisibility x:Key="InverseBoolToVisConverter"/>
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Gold"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="BlueViolet" Opacity="25"/>

            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">

                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="Background" Value="{StaticResource RegionBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <!--<Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu >
                            <MenuItem  Header="Share">
                            </MenuItem>
                            <MenuItem  Header="Delete" Command="{Binding PlacementTarget.Tag.LaunchDeleteSelectedDeviceWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>

                    </Setter.Value>
                </Setter>-->



                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    Margin="2" CornerRadius="9" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="true">
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="4"/>-->
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource DarkMaskBrush}"/>
                                </MultiTrigger>


                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="6"/>-->
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="_deviceCardListViewTemplate" DataType="{x:Type settings:DeviceSettings}">
                <Grid>
                    <Border Width="{Binding DashboardWidth}" 
                            Height="{Binding DashboardHeight}"
                            CornerRadius="7" 
                            Background="{StaticResource DarkOpacityBrush}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                            Command="{Binding Path=DataContext.SelectCardCommand, RelativeSource={RelativeSource AncestorType={x:Type local:AllDeviceView}}}"
                                            CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <hc:RunningBlock 
                                                Margin="15,10,0,0"
                                                BorderThickness="0" 
                                                Padding="0"  
                                                Duration="0:0:9" 
                                                Height="32" 
                                                HorizontalAlignment="Left" 
                                                AutoRun="True"  Width="150" 
                                                Runaway="False" 
                                                VerticalAlignment="Stretch" >
                                        <hc:RunningBlock.Content>
                                            <TextBlock Text="{Binding DeviceName}" 
                                                   FlowDirection="RightToLeft"
                                                   FontWeight="SemiBold"
                                                   Style="{StaticResource TextBlockTitle}"/>
                                        </hc:RunningBlock.Content>
                                    </hc:RunningBlock>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="15,0,0,10" HorizontalAlignment="Left" Text="{Binding HardwareVersion}" Style="{DynamicResource TextBlockDefaultPrimary}"/>

                                    </StackPanel>
                                    
                                </StackPanel>
                                <ToggleButton Grid.Column="1"
                                        IsChecked="{Binding IsEnabled}" 
                                        BorderThickness="0"                                     
                                        Margin="15" 
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"                                      
                                        Grid.Row="0"
                                        Style="{DynamicResource ToggleButtonSwitchSmallerElipse}">
                                </ToggleButton>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Image Margin="10" HorizontalAlignment="Center" Source="{Binding DeviceThumbnail}" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Margin="10" Grid.Row="1">

                                    <TextBlock Margin="0,0,5,0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding OutputPort}" >
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Path Width="25" Height="25" Margin="5,5" Data="{DynamicResource connection}" Stretch="Uniform" >
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill" Value="{StaticResource PrimaryBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}" Value="False">
                                                        <Setter Property="Fill" Value="{DynamicResource SecondaryTextBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid Margin="10,10,10,10" >


        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Grid  Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>



        </Grid>



        <Grid Width="auto" x:Name="parrentGrid" Grid.Row="1" >


            <hc:RelativePanel Margin="0">
                <Grid x:Name="Header" hc:RelativePanel.AlignLeftWithPanel="True" hc:RelativePanel.AlignTopWithPanel="True" >

                    <TextBlock
                    Margin="15,10,10,20" 
                    Grid.Row="0" 
                    Grid.Column="0" 
                    Text="DASHBOARD"  
                    
                    VerticalAlignment="Center" 
                    FontWeight="SemiBold"
                    Style="{StaticResource TextBlockSubTitle}"
                    HorizontalAlignment="Left"/>
                    <!--<hc:ButtonGroup Grid.Column="1" Margin="50,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <RadioButton x:Name ="allDevices"  Content="All Devices" IsChecked="True"/>
                    <RadioButton x:Name="allGroups" Content="Groups"/>

                </hc:ButtonGroup>-->
                </Grid>




                <Grid x:Name="AllDevicesPanel" hc:RelativePanel.AlignLeftWithPanel="True"  hc:RelativePanel.Below="{Binding ElementName=Header}">

                    <!-- all devices-->
                    <ListView  Margin="0" 
                       
                       Name="itm" 
                       SelectionMode="Multiple"
                       ItemsSource="{Binding AvailableDevices,UpdateSourceTrigger=PropertyChanged}"                        
                       IsTabStop="False"
                       ItemTemplate="{DynamicResource _deviceCardListViewTemplate}"
                       BorderThickness="0" 
                       Tag="{Binding}"
                       HorizontalAlignment="Left">

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewContainerStyle}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.Template>
                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                <Border Margin="0" 
                            SnapsToDevicePixels="False">
                                    <hc:ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter />
                                    </hc:ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>



                        <!--<ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>-->
                    </ListView>
                </Grid>
            </hc:RelativePanel>

        </Grid>

    </Grid>

</UserControl>
