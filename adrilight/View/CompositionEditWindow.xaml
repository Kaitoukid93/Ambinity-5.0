<hc:Window x:Class="adrilight.View.CompositionEditWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           mc:Ignorable="d"
           xmlns:ut="clr-namespace:adrilight.Util"
           xmlns:tt="clr-namespace:TimeLineTool;assembly=TimeLineTool"
           xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
           Background="{StaticResource RegionBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="CanResize"
           Height="800" 
           Width="1000" 
           xmlns:converters="clr-namespace:adrilight.Converter" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           WindowStartupLocation="CenterOwner">


    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Color R="255"
               G="255"
               B="255"
               A="255"
               x:Key="BgColor" />
            <SolidColorBrush Color="{StaticResource BgColor}"
                         x:Key="BgBrush" />
            <Style TargetType="{x:Type tt:TimeLineItemControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tt:TimeLineItemControl}">
                            <Grid>
                                <Border Background="Green"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Opacity="0" />
                                <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_ContentHostPART_ContentHost" />
                                <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_LeftIndicator">
                                    <ContentPresenter.Content>
                                        <Button Cursor="SizeWE" Background="{DynamicResource DarkMaskBrush}" Height="100" hc:BorderElement.CornerRadius="0" Width="10" />
                                    </ContentPresenter.Content>

                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Right"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_RightIndicator">
                                    <ContentPresenter.Content>
                                        <Button Cursor="SizeWE" Background="{DynamicResource DarkMaskBrush}" hc:BorderElement.CornerRadius="0" Height="100" Width="10" />
                                    </ContentPresenter.Content>

                                </ContentPresenter>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate  DataType="{x:Type tt:TempDataType}">
                <Border BorderThickness="1"
                    BorderBrush="Blue"
                    CornerRadius="3"
                    Height="30">
                    <TextBlock Text="{Binding Path=Name}" />
                </Border>
            </DataTemplate>

            <DataTemplate  DataType="{x:Type tt:TempDataType}"
                       x:Key="UsedTemplateProperty">
                <Border  BorderThickness="1"
                    BorderBrush="Transparent"
                    CornerRadius="0"
                    Margin="0"
                    Height="100"
                    
                    Background="{Binding Color,Converter={StaticResource ColorToBrushConverter},Mode=TwoWay}">

                    
                    <Border.ToolTip>
                        <Grid>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="2" Style="{DynamicResource TextBlockDefault}" Text="StartFrame: "/>
                                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{Binding StartFrame}"/>
                                    
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="2" Style="{DynamicResource TextBlockDefault}" Text="EndFrame: "/>
                                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{Binding EndFrame}"/>

                                </StackPanel>
                              
                            </StackPanel>
                            



                            </Grid>
                    </Border.ToolTip>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction 
                                             Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SetSelectedMotionCommand}"
                       CommandParameter="{Binding .}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Border.Style>
                        <Style TargetType="Border">
                            
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu >
                                        <MenuItem  Header="Cut" 
                                                   CommandParameter="{Binding .}" 
                                                   Command="{Binding PlacementTarget.Tag.CutSelectedMotionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                                          >
                                            <MenuItem.Icon>
                                                <Path   Data="{DynamicResource selected}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem  Header="Delete" 
                                                   CommandParameter="{Binding .}" 
                                                   Command="{Binding PlacementTarget.Tag.OpenColorSelectForMotionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                                          >
                                            <MenuItem.Icon>
                                                <Path   Data="{DynamicResource delete}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>

                                    </ContextMenu>

                                </Setter.Value>
                            </Setter>
                            <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border HorizontalAlignment="Left" Margin="0" Background="{DynamicResource DarkOpacityBrush}">
                        
                  
                    <StackPanel  Orientation="Horizontal" >
                        <TextBlock Margin="2" Foreground="White" Text="{Binding Path=Name,Mode=TwoWay}" />

                        <Grid>
                            <TextBlock Margin="2" TextWrapping="Wrap" Foreground="White">
                                    <TextBlock.Text>
                                    <MultiBinding StringFormat="{}: {0:F0} : {1:F0}">
                                        <Binding Path="StartFrame" Mode="TwoWay" />
                                        <Binding Path="EndFrame" Mode="TwoWay" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>



                        </Grid>

                    </StackPanel>
                    </Border>
                </Border>

            </DataTemplate>
            <Style x:Key="_ListBoxCardsCollectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="7" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="{StaticResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>



                                    <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu >
                            <MenuItem  Header="Set All Output" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.SetActivePaletteAllOutputsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource selected}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Set All Device" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.SetActivePaletteAllDevicesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource setall}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Edit"
                                          Command="{Binding PlacementTarget.Tag.EditSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="overwrite"
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource edit}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Share" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.ExportCurrentSelectedPaletteToFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource export}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Delete" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>

                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenuService.Placement" Value="Bottom">

                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Border CornerRadius="7" Margin="10" Background="{DynamicResource DarkOpacityBrush}">
                <Viewbox  HorizontalAlignment="Center" VerticalAlignment="Center"  Name="PreviewBox">

                    <ItemsControl
                          Name="PreviewGird"  
                          BorderThickness="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" 
                          ItemsSource="{Binding CurrentOutput.OutputLEDSetup.Spots}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Name="PreviewCanvas"
                               
                                Margin="0" 
                                Width="{Binding CurrentOutput.OutputLEDSetup.Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                Height="{Binding CurrentOutput.OutputLEDSetup.Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>

                                    <Path RenderTransformOrigin="0.5,0.5" Data="{Binding Shape,Converter={converters:StaticResourceConverter}}"
                                                ToolTip="{Binding id}" 
                                                Stroke="OrangeRed" 
                                                Stretch="Fill"
                                                StrokeThickness="{Binding BorderThickness}" 
                                                Width="{Binding Width,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                Height="{Binding Height,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                        <Path.Fill>
                                            <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                        </Path.Fill>
                                        <Path.Style>
                                            <Style TargetType="{x:Type Path}">

                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity"  Value="0.5"/>

                                                    </Trigger>
                                                </Style.Triggers>
                                                <Setter Property="RenderTransform" >
                                                    <Setter.Value>
                                                        <TransformGroup >
                                                            <ScaleTransform/>
                                                            <TranslateTransform  />
                                                            <RotateTransform Angle="{Binding Angle}" />
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Path.Style>

                                        <!--<i:Interaction.Triggers>
                                                    -->
                                        <!--<i:EventTrigger EventName="MouseDown" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetNextSpotVIDCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" />
                                                    </i:EventTrigger>-->
                                        <!--
                                                   
                                                </i:Interaction.Triggers>-->

                                    </Path>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Viewbox>
            </Border>

        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--Motion ListView-->
            <Grid MinWidth="400" Grid.Column="0">



                <Border Margin="10" CornerRadius="7" Background="{DynamicResource DarkOpacityBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">

                        </Grid>
                        <Grid Grid.Row="1">
                            <hc:TransitioningContentControl >
                                <ListBox dd:DragDrop.IsDragSource="True" Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{StaticResource _ListBoxCardsCollectionStyle}" 
                                                  
                                         
                                                  Margin="0,10,0,10"
                                                  BorderThickness="0"
                                            
                                                   
                                                  Style="{StaticResource WrapPanelHorizontalListBox}" 
                                                  ItemsPanel="{StaticResource WrapPanelHorizontalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding AvailableMotions}">


                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <hc:Card BorderBrush="Transparent" ToolTip="{Binding Description}" hc:BorderElement.CornerRadius="2"  MaxWidth="120"  Effect="{StaticResource EffectShadow2}"  Footer="{Binding Name}">
                                                <!--<Border CornerRadius="2,2,2,2" Style="{StaticResource BorderClip}">
                                        <ItemsControl ItemsSource="{Binding Colors}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal">

                                                    </StackPanel>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Rectangle  Fill="{Binding ., Converter={StaticResource ColorToBrushConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="20" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </Border>-->

                                                <hc:Card.FooterTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" Margin="10">
                                                            <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource TextBlockDefault}" Text="{Binding DataContext.Name,RelativeSource={RelativeSource AncestorType=hc:Card}}" HorizontalAlignment="Left"/>

                                                        </StackPanel>
                                                    </DataTemplate>
                                                </hc:Card.FooterTemplate>


                                            </hc:Card>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>
                            </hc:TransitioningContentControl>
                        </Grid>
                    </Grid>

                </Border>

            </Grid>
            <!--TimeLineControl-->
            <Grid Grid.Column="1">
                <Border MaxHeight="400"  Margin="10" CornerRadius="7" Background="{DynamicResource DarkOpacityBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Row="0" Grid.Column="0">
                            <StackPanel Orientation="Horizontal">

                                <Border MinWidth="350" Margin="7" CornerRadius="4" Background="{DynamicResource RegionBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="1">
                                            <TextBlock Margin="15,10"  VerticalAlignment="Center" Text="{Binding CurrentCompositionFrame,StringFormat={}{0:0}}" Foreground="{DynamicResource WarningBrush}" Style="{DynamicResource TextBlockLargeBold}"/>
                                        </Grid>
                                        <!--CompostionPlayer-->
                                        <Grid>
                                            <StackPanel Orientation="Horizontal">
                                                <Button VerticalAlignment="Center" Command="{Binding CompositionFrameStartOverCommand}" CommandParameter="startOver" ToolTip="Start over" Margin="8,0,15,0" Padding="9" Width="35" Height="35" hc:IconElement.Geometry="{DynamicResource startFrameOVer}" BorderThickness="0" />
                                                <Button VerticalAlignment="Center" Command="{Binding ToggleCompositionPlayingStateCommand}" CommandParameter="startOver" ToolTip="Play Composition" Margin="15,0,15,0" Padding="9" Width="35" Height="35"  BorderThickness="0" >
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                                                            <Setter Property="hc:IconElement.Geometry" Value="{DynamicResource playComposition}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding CurrentCompositionPlayingState,Mode=TwoWay}" Value="true">
                                                                    <Setter Property="hc:IconElement.Geometry" Value="{DynamicResource pauseComposition}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding CurrentCompositionPlayingState,Mode=TwoWay}" Value="false">
                                                                    <Setter Property="hc:IconElement.Geometry" Value="{DynamicResource playComposition}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button VerticalAlignment="Center" Command="{Binding CompositionPreviousFrameCommand}" CommandParameter="previous" ToolTip="Next Frame" Margin="15,0" Padding="9" Width="35" Height="35" hc:IconElement.Geometry="{DynamicResource previousFrame}" BorderThickness="0" />
                                                <Button VerticalAlignment="Center" Command="{Binding CompositionNextFrameCommand}" CommandParameter="next"  ToolTip="Previous Frame" Margin="15,0" Padding="9" Width="35" Height="35" hc:IconElement.Geometry="{DynamicResource nextFrame}" BorderThickness="0"/>

                                            </StackPanel>

                                        </Grid>
                                    </Grid>

                                </Border>
                                <ToolBarTray  Margin="10" IsLocked="True" VerticalAlignment="Center">
                                    <ToolBar Background="Transparent"  Padding="6" Header="View">
                                        <Separator Margin="10,0" MaxHeight="25"/>
                                        <CheckBox IsChecked="{Binding ShowAllOutputPID}" Content="Hiện màu"  Margin="10,0,0,0"/>
                                        <CheckBox IsChecked="{Binding ShowAllDevicePID}" Content="Hiện frame"  Margin="10,0,5,0"/>

                                        <hc:NumericUpDown Value="{Binding TimeLineHeight}" ShowClearButton="False" Minimum="20" Maximum="100" Margin="5,0" Style="{DynamicResource NumericUpDownPlus}" x:Name="height" DecimalPlaces="0" hc:InfoElement.TitleWidth="auto"  hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Height"  hc:InfoElement.Necessary="False"/>
                                    </ToolBar>
                                    <ToolBar Background="Transparent" Padding="6" Header="Composition">
                                        <Separator Margin="10,0" MaxHeight="25"/>
                                        <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource export}" Command="{Binding OpenTutorialCommand}" CommandParameter="ResetVID" ToolTip="Hướng dẫn sử dụng VID Editor" Content="Export"/>
                                        <Button Foreground="{DynamicResource PrimaryBrush}" Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource renderComposition}" Command="{Binding OpenTutorialCommand}" CommandParameter="ResetVID" ToolTip="Hướng dẫn sử dụng VID Editor" Content="Render">
                                            <Button.Background>
                                                <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.15"/>
                                            </Button.Background>
                                        </Button>

                                        <Separator Margin="10,0" MaxHeight="25"/>
                                        <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource info}" Command="{Binding OpenTutorialCommand}" CommandParameter="ResetVID" ToolTip="Hướng dẫn sử dụng VID Editor" Content="Hướng dẫn"/>
                                    </ToolBar>

                                </ToolBarTray>
                            </StackPanel>
                        </Grid>

                        <StackPanel Grid.Column="0" MinHeight="200" Margin="7,0,10,10" Grid.Row="1" Orientation="Vertical">
                            <ScrollViewer HorizontalAlignment="Stretch"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      VerticalAlignment="Stretch"
                                      x:Name="FoundMe">
                                <WrapPanel Orientation="Vertical">
                                    <!--You can bind to many properties including Items.  So long as the collection bound contains
                                    implementations of the ITimelineDataItem, the control will manage it perfectly.
                                    
                                    If you implement the ITimelineManager class, then you can use that manager to disable or enable the timelines.
                                    
                                    If your timelines are within an items control then SynchedWithSiblings is a property that will keep all sibling timelines the same width
                                    -->
                                    <ItemsControl ItemsSource="{Binding CurrentSelectedComposition.Layers}">

                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type ut:MotionLayer}">
                                                <tt:TimeLineControl 
                                                        ItemTemplate="{StaticResource UsedTemplateProperty}"
                                                        HorizontalAlignment="Left"
                                                        StartFrame="0"
                                                        Height="{Binding Path=DataContext.TimeLineHeight, RelativeSource={RelativeSource AncestorType=ItemsControl},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        UnitSize="{Binding Path=DataContext.UnitSize, RelativeSource={RelativeSource AncestorType=ItemsControl},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        CurrentTimePoint="{Binding Path=DataContext.CurrentCompositionFrame, RelativeSource={RelativeSource AncestorType=ItemsControl},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        Items="{Binding Motions,Mode=TwoWay}"
                                                        MinimumUnitWidth="20"
                                                        Background="{DynamicResource SecondaryRegionBrush}"
                                                        DrawTimeGrid="True"
                                                        MinWidth="50"
                                                        ViewLevel="Frame"
                                                        SynchedWithSiblings="True" >

                                                </tt:TimeLineControl>

                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>



                                    </ItemsControl>
                                </WrapPanel>
                            </ScrollViewer>

                        </StackPanel>
                        <!--Scale slider-->
                        <Grid Grid.Row="2">
                            <StackPanel>
                                
                             
                                
                           
                            <Slider Width="200" Margin="5,10" Minimum="1" Maximum="10" TickFrequency="0.1" IsSnapToTickEnabled="true" Value="{Binding UnitSize,Mode=TwoWay}" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="0"  Grid.RowSpan="3" Grid.Column="1">
                            <hc:Divider Margin="10,20,10,20" Style="{DynamicResource DividerBaseStyle}" VerticalAlignment="Stretch"  LineStroke="{DynamicResource RegionBrush}" Orientation="Vertical"/>
                        </Grid>

                        <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Margin="10,0,10,10" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock VerticalAlignment="Top" Margin="20,20,20,20"  Text="{Binding CurrentSelectedMotion.Name}" Style="{DynamicResource TextBlockTitle}">

                            </TextBlock>
                            <hc:ScrollViewer Grid.Row="1"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                <Grid>

                                    <StackPanel Grid.Row="1">
                                        <Grid Name="FillColor">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox   VerticalAlignment="Center"   hc:TitleElement.TitleWidth="150" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontWeight="SemiBold" Text="FILL COLOR"/>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Button Command="{Binding AddNewSolidColorCommand}" CommandParameter="motion" BorderBrush="Transparent" hc:BorderElement.CornerRadius="7" Width="32" Height="32" HorizontalAlignment="Right" Background="{Binding CurrentSelectedMotion.Color,Converter={StaticResource ColorToBrushConverter},Mode=TwoWay}"  Style="{StaticResource ButtonDefault}">

                                                </Button>


                                            </GroupBox>
                                            <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Đổi màu của chuyển động được chọn"/>
                                        </Grid>

                                        <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                        </hc:Divider>
                                        <Grid Name="StartFrame">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox   VerticalAlignment="Center"  Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontWeight="SemiBold" Text="START FRAME"/>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <!--<Path Stretch="Uniform" Margin="0" Data="{StaticResource vumetter}" 
                                      Width="20" 
                                      Height="20" 
                                      Fill="{StaticResource PrimaryTextBrush}"/>-->
                                                <Grid  HorizontalAlignment="Right" Margin="0,0,0,0">
                                                    <hc:NumericUpDown Style="{DynamicResource NumericUpDownPlus}" ShowClearButton="True" Minimum="0"/>

                                                </Grid>



                                            </GroupBox>
                                            <TextBlock  Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Chọn thời điểm bắt đầu cho chuyển động"/>

                                        </Grid>
                                        <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                        </hc:Divider>
                                        <Grid Name="Opacity">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox   VerticalAlignment="Center"  Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontWeight="SemiBold" Text="OPACITY"/>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <!--<Path Stretch="Uniform" Margin="0" Data="{StaticResource vumetter}" 
                                      Width="20" 
                                      Height="20" 
                                      Fill="{StaticResource PrimaryTextBrush}"/>-->
                                                <Grid  HorizontalAlignment="Right" Margin="0,10,0,0">
                                                    <Slider Width="100" Minimum="0" Maximum="100"/>

                                                </Grid>



                                            </GroupBox>
                                            <TextBlock  Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Độ đậm nhạt của chuyển động"/>

                                        </Grid>

                                        <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                        </hc:Divider>
                                        <Grid Name="speed">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox   VerticalAlignment="Center"  Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontWeight="SemiBold" Text="SPEED"/>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <!--<Path Stretch="Uniform" Margin="0" Data="{StaticResource vumetter}" 
                                      Width="20" 
                                      Height="20" 
                                      Fill="{StaticResource PrimaryTextBrush}"/>-->
                                                <Grid  HorizontalAlignment="Right" Margin="0,0,10,0">
                                                    <ItemsControl ItemsSource="{Binding AvailableMotionSpeed}" Height="0" Margin="15,0"/>
                                                    <ComboBox  ItemContainerStyle="{StaticResource _ComboboxItemStyle}"  HorizontalAlignment="Stretch"   ItemsSource="{Binding AvailableMotionSpeed}"  Style="{StaticResource ComboBoxBaseStyle}"/>

                                                </Grid>


                                            </GroupBox>
                                            <TextBlock  Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Thay đổi độ nhanh chậm của chuyển động"/>

                                        </Grid>
                                        <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                        </hc:Divider>
                                        <Grid Name="dirrection">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox   VerticalAlignment="Center"  Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontWeight="SemiBold" Text="DIRRECTION"/>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <!--<Path Stretch="Uniform" Margin="0" Data="{StaticResource vumetter}" 
                                      Width="20" 
                                      Height="20" 
                                      Fill="{StaticResource PrimaryTextBrush}"/>-->
                                                <Grid  HorizontalAlignment="Right" Margin="0,0,10,0">
                                                    <ItemsControl ItemsSource="{Binding AvailableMotionDirrection}" Height="0" Margin="15,0"/>
                                                    <ComboBox  ItemContainerStyle="{StaticResource _ComboboxItemStyle}"  HorizontalAlignment="Stretch"   ItemsSource="{Binding AvailableMotionDirrection}"  Style="{StaticResource ComboBoxBaseStyle}"/>

                                                </Grid>


                                            </GroupBox>
                                            <TextBlock  Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Thay đổi chiều của chuyển động"/>

                                        </Grid>
                                    </StackPanel>

                                </Grid>
                            </hc:ScrollViewer>
                        </Grid>

                    </Grid>
                </Border>
            </Grid>

        </Grid>
    </Grid>





</hc:Window>