<UserControl x:Class="adrilight.View.AllDeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:device="clr-namespace:adrilight_shared.Models.Device;assembly=adrilight_shared"
             xmlns:lighting="clr-namespace:adrilight_shared.Models.Lighting;assembly=adrilight_shared"
             xmlns:automation ="clr-namespace:adrilight_shared.Models.Automation;assembly=adrilight_shared"
             Background="{StaticResource RegionBrush}"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             mc:Ignorable="d"
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel"
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             TextElement.FontWeight="Regular"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Name="alldevice"
             d:DesignHeight="800"
             d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
            <converters:Inverseboolvisibility x:Key="InverseBoolToVisConverter" />
            <SolidColorBrush x:Key="primaryBackgroundBrush"
                             Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                             Opacity="0.15" />
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow"
                              BlurRadius="20"
                              RenderingBias="Quality"
                              ShadowDepth="1"
                              Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow"
                              BlurRadius="20"
                              RenderingBias="Quality"
                              ShadowDepth="1"
                              Color="{Binding Color, Source={StaticResource DarkMaskBrush}}" />
            <Style x:Key="ListViewContainerStyle"
                   TargetType="{x:Type ListViewItem}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="Background"
                        Value="{DynamicResource MainContentBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="4" />
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Width"
                        Value="auto" />
                <Setter Property="Height"
                        Value="auto" />
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="Tag"
                        Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Margin="2"
                                    CornerRadius="9"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    Effect="{DynamicResource EffectShadow1}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{DynamicResource HoverBrush}" />
                                </MultiTrigger>


                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="BorderBrush"
                                            TargetName="Bd"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="6"/>-->
                                    <Setter Property="BorderBrush"
                                            TargetName="Bd"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="TextElement.Foreground"
                                            TargetName="Bd"
                                            Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="_automationDashboardTemplate"
                          DataType="{x:Type automation:AutomationSettings}">
                <Button Width="300"
                        Height="60"
                        Padding="0"
                        Margin="5"
                        hc:BorderElement.CornerRadius="7"
                        Style="{DynamicResource _mediumProfileDefaultButton}"
                        BorderThickness="0"
                        Background="{DynamicResource MainContentBackgroundBrush}"
                        HorizontalContentAlignment="Stretch"
                        Command="{Binding Path=DataContext.ExecuteAutomationFromManagerCommand, RelativeSource={RelativeSource AncestorType={x:Type local:AllDeviceView}}}"
                        CommandParameter="{Binding .}"
                        VerticalContentAlignment="Stretch">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Width="50"
                                CornerRadius="4"
                                Margin="5"
                                Background="{DynamicResource SecondaryRegionBrush}">
                            <Path Fill="{DynamicResource PrimaryBrush}"
                                  Width="25"
                                  Height="25"
                                  Margin="10,10"
                                  Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                  Stretch="Uniform">

                            </Path>

                        </Border>
                        <Grid Grid.Column="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock HorizontalAlignment="Left"
                                                   Text="{Binding Name}"
                                                   Grid.Column="1"
                                                   Margin="5"
                                                   Style="{DynamicResource TextBlockSubTitle}"
                                                   FontWeight="SemiBold"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="5,5,0,5">
                                        <TextBlock Text="{Binding ControlMode.BasedOn}"
                                                   HorizontalAlignment="Left"
                                                   Margin="0,0,0,5"
                                                   Style="{DynamicResource TextBlockDefaultSecLight}"
                                                   FontWeight="SemiBold" />
                                    </StackPanel>

                                </StackPanel>
                                <Grid Grid.Row="1">
                                    <Grid>
                                        <Button Width="25"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Height="25"
                                                Background="Transparent"
                                                ToolTip="Unpin"
                                                hc:IconElement.Width="15"
                                                hc:IconElement.Height="15"
                                                Style="{DynamicResource ButtonDashed}"
                                                BorderBrush="Transparent"
                                                hc:IconElement.Geometry="{DynamicResource unpin}"
                                                Command="{Binding Path=DataContext.UnpinAutomationFromDashboardCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding .}"
                                                Padding="0"
                                                Margin="5">
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>

                    </Grid>
                </Button>
            </DataTemplate>
            <DataTemplate x:Key="_horizontalCardItemTemplate"
                          DataType="{x:Type lighting:LightingProfile}">
                <Button Width="300"
                        Height="100"
                        Padding="0"
                        Margin="5"
                        hc:BorderElement.CornerRadius="7"
                        Style="{DynamicResource _mediumProfileDefaultButton}"
                        BorderThickness="0"
                        Background="{DynamicResource MainContentBackgroundBrush}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Command="{Binding Path=DataContext.ActivateCurrentLightingProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type local:AllDeviceView}}}"
                        CommandParameter="{Binding .}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Width="90"
                                CornerRadius="4"
                                Margin="5"
                                Background="{DynamicResource SecondaryRegionBrush}">
                            <hc:Gravatar Id="{Binding Name}">

                            </hc:Gravatar>

                        </Border>
                        <Grid Grid.Column="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <Path HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Stretch="Fill"
                                              Margin="5"
                                              Data="{Binding ControlMode.Geometry,Converter={converters:StaticResourceConverter}}"
                                              Width="20"
                                              Height="20"
                                              Fill="{DynamicResource PrimaryTextBrush}" />
                                        <TextBlock HorizontalAlignment="Left"
                                                   Text="{Binding Name}"
                                                   Grid.Column="1"
                                                   Margin="5"
                                                   Style="{DynamicResource TextBlockSubTitle}"
                                                   FontWeight="SemiBold"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="5,5,0,5">
                                        <TextBlock Text="Engine: "
                                                   HorizontalAlignment="Left"
                                                   Margin="0,0,0,5"
                                                   Style="{DynamicResource TextBlockDefaultSecLight}"
                                                   FontWeight="SemiBold" />
                                        <TextBlock Text="{Binding ControlMode.BasedOn}"
                                                   HorizontalAlignment="Left"
                                                   Margin="0,0,0,5"
                                                   Style="{DynamicResource TextBlockDefaultSecLight}"
                                                   FontWeight="SemiBold" />
                                    </StackPanel>

                                </StackPanel>
                                <Grid Grid.Row="1">
                                    <Grid>
                                        <Button Width="25"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Height="25"
                                                Background="Transparent"
                                                ToolTip="Activate"
                                                Command="{Binding Path=DataContext.DeleteSelectedLightingProfileCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding .}"
                                                hc:IconElement.Width="15"
                                                hc:IconElement.Height="15"
                                                Style="{DynamicResource ButtonDashed}"
                                                BorderBrush="Transparent"
                                                hc:IconElement.Geometry="{DynamicResource delete}"
                                                Padding="0"
                                                Margin="5">
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>

                    </Grid>
                </Button>
            </DataTemplate>
            <Style x:Key="_listBoxGeneralModeSelectionStyle"
                   TargetType="ListViewItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border CornerRadius="4"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="5,5,5,0"
                                    Effect="{DynamicResource EffectShadow1}"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource ButtonHoverBrush }" />



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource ButtonHoverBrush }" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource ButtonHoverBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground"
                        Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <DataTemplate x:Key="_deviceCardListViewTemplate"
                          DataType="{x:Type device:DeviceSettings}">
                <Grid>
                    <Border Width="{Binding DashboardWidth}"
                            Height="{Binding DashboardHeight}"
                            Background="Transparent"
                            CornerRadius="7">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectCardCommand, RelativeSource={RelativeSource AncestorType={x:Type local:AllDeviceView}}}"
                                                       CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="20,10,0,20"
                                           HorizontalAlignment="Left"
                                           Text="{Binding DeviceName}"
                                           FontWeight="SemiBold"
                                           TextTrimming="CharacterEllipsis"
                                           Style="{StaticResource TextBlockTitle}" />
                                <ToggleButton Grid.Column="1"
                                              IsChecked="{Binding IsEnabled}"
                                              BorderThickness="0"
                                              Margin="15"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Top"
                                              Grid.Row="0"
                                              Style="{DynamicResource ToggleButtonSwitchSmallerElipse}">
                                </ToggleButton>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Image Margin="10"
                                       Source="{Binding DeviceThumbnail}"
                                       RenderOptions.BitmapScalingMode="HighQuality"
                                       Stretch="Uniform" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal"
                                            Grid.Column="1"
                                            HorizontalAlignment="Right"
                                            Margin="10"
                                            Grid.Row="1">
                                    <TextBlock Margin="5,0,5,0"
                                               MaxWidth="200"
                                               FlowDirection="LeftToRight"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding OutputPort}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground"
                                                        Value="{DynamicResource PrimaryBrush}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}"
                                                                 Value="False">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource SecondaryTextBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Path Width="25"
                                          Height="25"
                                          Margin="5,5"
                                          Data="{Binding DeviceType.ConnectionGeometry,Converter={converters:StaticResourceConverter}}"
                                          Stretch="Uniform">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill"
                                                        Value="{DynamicResource PrimaryBrush}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}"
                                                                 Value="False">
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource SecondaryTextBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Border Background="{DynamicResource DarkOpacityBrush}"
                    Visibility="{Binding SearchingForDevices,Mode=TwoWay,Converter={StaticResource Boolean2VisibilityConverter}}">
            </Border>

        </Grid>
        <Grid>
            <hc:ScrollViewer IsInertiaEnabled="True">
                <StackPanel>
                    <Grid x:Name="parrentGrid">
                        <Grid Margin="0,100,0,50">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AvailableDevices.Count}"
                                                     Value="0">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel VerticalAlignment="Center">
                                <Path HorizontalAlignment="Center"
                                      VerticalAlignment="Bottom"
                                      Data="{StaticResource noDevice}"
                                      Margin="20"
                                      Width="55"
                                      Fill="#707070"
                                      Stretch="Uniform" />
                                <TextBlock VerticalAlignment="Center"
                                           FontSize="15"
                                           HorizontalAlignment="Center"
                                           Grid.Row="1"
                                           Style="{DynamicResource TextBlockDefaultSecLight}"
                                           Text="Không tìm thấy thiết bị nào được hỗ trợ, mở cài đặt để thêm thiết bị theo cách thủ công" />
                                <Button FontSize="15"
                                        Command="{Binding OpenAppSettingsWindowCommand}"
                                        CommandParameter="openAppSettings"
                                        Padding="0"
                                        Background="Transparent"
                                        BorderThickness="0">
                                    <TextBlock Margin="5,2"
                                               HorizontalAlignment="Center"
                                               TextWrapping="Wrap"
                                               Style="{DynamicResource TextBlockDefaultPrimary}"
                                               Text="Mở cài đặt App" />
                                </Button>
                            </StackPanel>

                        </Grid>
                        <StackPanel>
                            <Grid Margin="0"
                                  x:Name="Header">
                                <StackPanel>
                                    <Grid Margin="0">
                                        <TextBlock Margin="15,10,10,5"
                                                   Text="DEVICES"
                                                   VerticalAlignment="Top"
                                                   FontWeight="SemiBold"
                                                   Style="{DynamicResource TextBlockSubTitle}"
                                                   HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="15,0,0,20"
                                                       Text="Tất cả các thiết bị sẽ tự động được dò ra và hiển thị ở đây."
                                                       VerticalAlignment="Top"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}"
                                                       HorizontalAlignment="Left" />
                                            <Button Command="{Binding RequestingRescanDevicesCommand}"
                                                    CommandParameter="Lighting"
                                                    IsEnabled="{Binding IsRescanningDevices, Converter={StaticResource Boolean2BooleanReConverter}}"
                                                    ToolTip="Dò lại các thiết bị nếu trình tự động không tìm ra"
                                                    VerticalAlignment="Top"
                                                    Padding="0"
                                                    Height="15"
                                                    Margin="5,0,5,0"
                                                    Background="Transparent"
                                                    BorderThickness="0">
                                                <TextBlock Margin="0,0"
                                                           VerticalAlignment="Top"
                                                           HorizontalAlignment="Center"
                                                           TextWrapping="Wrap"
                                                           Style="{DynamicResource TextBlockDefaultPrimary}"
                                                           Text="Rescan devices" />
                                            </Button>
                                            <ProgressBar Visibility="{Binding IsRescanningDevices,Converter={StaticResource boolToVisibilityConvert}}"
                                                         hc:BorderElement.CornerRadius="2"
                                                         VerticalAlignment="Top"
                                                         IsIndeterminate="True"
                                                         Margin="5,8,0,0"
                                                         Width="100"
                                                         Height="4" />
                                        </StackPanel>
                                        
                                    </Grid>
                                </StackPanel>
                            </Grid>
                            <Grid x:Name="AllDevicesPanel">
                                <!-- all devices-->
                                <ListView  Margin="10,0,10,10"
                                           hc:ScrollViewerAttach.IsDisabled="True"
                                           Name="itm"
                                           SelectionMode="Multiple"
                                           ItemsSource="{Binding AvailableDevices,UpdateSourceTrigger=PropertyChanged}"
                                           IsTabStop="False"
                                           ItemTemplate="{DynamicResource _deviceCardListViewTemplate}"
                                           BorderThickness="0"
                                           Tag="{Binding}"
                                           HorizontalAlignment="Left">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}"
                                               BasedOn="{StaticResource ListViewContainerStyle}">
                                            <Setter Property="IsSelected"
                                                    Value="{Binding IsSelected, Mode=TwoWay}" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.Template>
                                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                                            <Border Margin="0"
                                                    SnapsToDevicePixels="False">
                                                <hc:ScrollViewer hc:ScrollViewerAttach.IsDisabled="True"
                                                                 HorizontalScrollBarVisibility="Disabled">
                                                    <ItemsPresenter />
                                                </hc:ScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </ListView.Template>
                                </ListView>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <Grid Margin="0">
                                <TextBlock Margin="15,10,10,5"
                                           Text="LIGHTING PROFILE"
                                           VerticalAlignment="Top"
                                           FontWeight="SemiBold"
                                           Style="{DynamicResource TextBlockSubTitle}"
                                           HorizontalAlignment="Left" />
                            </Grid>
                            <Grid Margin="0">
                                <StackPanel Orientation="Horizontal"
                                            Margin="15,0,10,20">


                                    <TextBlock Margin="0,0"
                                               Text="Khi được kích hoạt, tất cả các thiết bị sẽ đồng bộ với nhau trừ những thiết bị đã bị tắt"
                                               VerticalAlignment="Top"
                                               Style="{DynamicResource TextBlockDefaultSecLight}"
                                               HorizontalAlignment="Left" />
                                    <Button Command="{Binding OpenAmbinoStoreWindowCommand}"
                                            CommandParameter="Lighting"
                                            Height="15"
                                            Padding="0"
                                            Margin="5,0,5,0"
                                            Background="Transparent"
                                            BorderThickness="0">
                                        <TextBlock Margin="0,0"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   Style="{DynamicResource TextBlockDefaultPrimary}"
                                                   Text="Truy cập Adrilight Store" />
                                    </Button>
                                    <TextBlock Margin="0,0"
                                               Text="để tải thêm nhiều Profile"
                                               VerticalAlignment="Top"
                                               Style="{DynamicResource TextBlockDefaultSecLight}"
                                               HorizontalAlignment="Left" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Row="1">
                            <ItemsControl Margin="10,0,10,10"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          ItemTemplate="{DynamicResource _horizontalCardItemTemplate}"
                                          ItemsSource="{Binding AvailableLightingProfiles}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <Grid Margin="0">
                                <TextBlock Margin="15,10,10,5"
                                           Text="AUTOMATIONS"
                                           VerticalAlignment="Top"
                                           FontWeight="SemiBold"
                                           Style="{DynamicResource TextBlockSubTitle}"
                                           HorizontalAlignment="Left" />
                            </Grid>
                            <Grid Margin="0">
                                <StackPanel Orientation="Horizontal"
                                            Margin="15,0,10,20">


                                    <TextBlock Margin="0,0"
                                               Text="Khi được kích hoạt, các hành động đã được thêm trong automation sẽ lần lượt được thực hiện. Để chỉnh sửa các hành động, hãy truy cập"
                                               VerticalAlignment="Top"
                                               Style="{DynamicResource TextBlockDefaultSecLight}"
                                               HorizontalAlignment="Left" />
                                    <Button Command="{Binding OpenAutomationManagerWindowCommand}"
                                            CommandParameter="Lighting"
                                            Height="15"
                                            Padding="0"
                                            Margin="5,0,5,0"
                                            Background="Transparent"
                                            BorderThickness="0">
                                        <TextBlock Margin="0,0"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   Style="{DynamicResource TextBlockDefaultPrimary}"
                                                   Text="Automation" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Row="1">
                            <ItemsControl Margin="10,0,10,10"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          ItemTemplate="{DynamicResource _automationDashboardTemplate}"
                                          ItemsSource="{Binding DashboardPinnedAutomation}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                </StackPanel>
            </hc:ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
