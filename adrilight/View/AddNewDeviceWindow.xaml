<hc:Window x:Class="adrilight.View.AddNewDeviceWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter"
           xmlns:settings="clr-namespace:adrilight.Settings"
           mc:Ignorable="d"
           Closing="Window_Closing"
           Background="{DynamicResource RegionBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="NoResize"
            
           Height="600" 
           Width="600" 
           WindowStartupLocation="CenterOwner" 
           Left="0" Top="0">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:Inverseboolvisibility x:Key="InverseBooltoVisibilityConvert"/>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Style x:Key="_ListBoxDeviceCollectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="7" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="{DynamicResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>



                                    <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="auto" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <TextBlock Text="Thêm thiết bị mới" Style="{DynamicResource TextBlockLarge}">

        </TextBlock>
        <Grid Grid.Row="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <TabControl x:Name="grouptab" SelectionChanged="Tab_Changed" TabStripPlacement="Top" Margin="16">
                <TabItem Header="Wired Devices">
                    <Grid>
                        <StackPanel Visibility="Visible" x:Name="autowired">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <Button Command="{Binding ScanSerialDeviceCommand}" CommandParameter="scan" x:Name="ScanButton" Click="ScanWiredDevice" Margin="10" Content="Scan now" Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Style="{DynamicResource ButtonDefault}"/>
                                        <Button  x:Name="AddManual" Click="AddManually" Margin="10" Content="Add manually" Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Style="{DynamicResource ButtonDefault}"/>
                                    </StackPanel>

                                </Grid>
                                <Grid Grid.Row="1">
                                    <hc:LoadingLine Visibility="Collapsed" x:Name="wiredLoadingLine" Margin="10"/>
                                </Grid>





                            </Grid>
                            <Grid>
                                <ListBox HorizontalAlignment="Left" Margin="5" x:Name="WiredDeviceList"  
                              ItemsSource="{Binding AvailableSerialDevices}"
                              
                              VerticalAlignment="Top"
                              
                              SelectionMode="Multiple"
                              Background="Transparent"
                              BorderThickness="0"
                              Style="{DynamicResource WrapPanelVerticalListBox}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource _listBoxModeSelectionStyle}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid  HorizontalAlignment="Stretch"  Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding DeviceConnectionGeometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding DeviceName}" Style="{DynamicResource TextBlockDefault}"/>
                                                <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="2" Text="{Binding DeviceSerial}" Style="{DynamicResource TextBlockDefault}"/>
                                                <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="3" Text="{Binding FirmwareVersion}" Style="{DynamicResource TextBlockDefault}"/>
                                                <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="4" Text="{Binding HardwareVersion}" Style="{DynamicResource TextBlockDefault}"/>
                                                <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="5" Text="{Binding OutputPort}" Style="{DynamicResource TextBlockDefault}"/>
                                                <Grid Margin="10,0,0,0" HorizontalAlignment="Left" Grid.Column="6">
                                                    <ItemsControl ItemsSource="{Binding DataContext.AvailableOutputForSelectedDevice, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Height="0" Margin="15,0">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Path Stretch="Uniform" Margin="0,0,15,0" Data="{Binding Geometry ,Converter={converters:StaticResourceConverter}}" 
                                                                          Width="20" 
                                                                          Height="20" 
                                                                          Fill="{DynamicResource PrimaryTextBrush}"/>
                                                                    <TextBlock Grid.Column="1" Text="{Binding OutputName}"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                    <ComboBox Visibility="{Binding IsSizeNeedUserDefine,Converter={StaticResource boolToVisibilityConvert}}" SelectedItem="{Binding AvailableOutputs[0]}" ItemsSource="{Binding DataContext.AvailableOutputForSelectedDevice, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" hc:InfoElement.Placeholder="Chọn kích thước" ItemContainerStyle="{DynamicResource _ComboboxItemStyle}"  HorizontalAlignment="Stretch" Style="{DynamicResource ComboBoxExtend}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="auto"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Path Stretch="Uniform" Margin="0,0,15,0" Data="{Binding Geometry ,Converter={converters:StaticResourceConverter}}" 
                                                                          Width="20" 
                                                                          Height="20" 
                                                                          Fill="{DynamicResource PrimaryTextBrush}"/>
                                                                    <TextBlock Grid.Column="1" Text="{Binding OutputName}"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>

                                                </Grid>
                                            </Grid>

                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>


                            </Grid>
                        </StackPanel>
                        <Grid Visibility="Collapsed" x:Name="manualwired">

                            <hc:TransitioningContentControl Grid.Row="1">
                                <ListBox Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{DynamicResource _ListBoxDeviceCollectionStyle}" 
                                                  SelectedItem="{Binding CurrentSelectedCatergoryToAdd}"
                                                  x:Name="AvailableDeviceCatergoryToAdd"
                                                  Margin="0,10,0,10"
                                                  BorderThickness="0" 
                                                  SelectedIndex="0"
                                                  Style="{DynamicResource WrapPanelHorizontalListBox}" 
                                                  ItemsPanel="{DynamicResource WrapPanelHorizontalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding AvailableDeviceCatergoryToAdd}">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Border CornerRadius="7" Width="150" Height="150" Background="{DynamicResource DarkMaskBrush}">
                                                <Grid>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Path  Grid.Row="0" Margin="5" Data="{Binding Geometry, Converter={converters:StaticResourceConverter}}" Width="70" Height="70" Fill="{StaticResource PrimaryBrush}" Stretch="Uniform" />
                                                    <TextBlock Margin="10" Grid.Row="1" Text="{Binding Name }" FontWeight="SemiBold" Style="{DynamicResource TextBlockSubTitle}"/>
                                                </Grid>
                                            </Border>

                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>
                            </hc:TransitioningContentControl>
                        </Grid>

                    </Grid>

                </TabItem>
                <TabItem Header="Wireless Devices">
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Button x:Name="RefreshButton" Click="Refresh" Margin="10"  Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Style="{DynamicResource ButtonDefault}"  Content="Refresh"/>
                            </Grid>
                            <Grid Grid.Row="1">
                                <hc:LoadingLine Visibility="Collapsed" x:Name="LoadingLine" Margin="10"/>
                            </Grid>





                        </Grid>
                        <Grid>
                            <ListBox HorizontalAlignment="Left" Margin="5" x:Name="WirelessDeviceList"  
                              ItemsSource="{Binding AvailableWLEDDevices}"
                              
                              VerticalAlignment="Top"
                              
                              SelectionMode="Multiple"
                              Background="Transparent"
                              BorderThickness="0"
                              Style="{DynamicResource WrapPanelVerticalListBox}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource _listBoxModeSelectionStyle}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid  HorizontalAlignment="Stretch"  Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{DynamicResource TextBlockDefault}"/>
                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="2" Text="{Binding NetworkAddress}" Style="{DynamicResource TextBlockDefault}"/>
                                        </Grid>

                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>


                        </Grid>
                    </StackPanel>

                </TabItem>
                <TabItem Header="OpenRGB Devices">
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Button x:Name="ScanOpenRGBButton" Command="{Binding ScanOpenRGBDeviceCommand}" Margin="10"  Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Style="{DynamicResource ButtonDefault}"  Content="Scan OpenRGB Devices"/>
                            </Grid>
                            <Grid Grid.Row="1">
                                <hc:LoadingLine Visibility="Collapsed" x:Name="OpenRGBLoadingLine" Margin="10"/>
                            </Grid>

                        </Grid>
                        <Grid>
                            <ListBox HorizontalAlignment="Left" Margin="5" x:Name="OpenRGBDeviceList"  
                              ItemsSource="{Binding AvailableOpenRGBDevices}"
                              
                              VerticalAlignment="Top"
                              
                              SelectionMode="Multiple"
                              Background="Transparent"
                              BorderThickness="0"
                              Style="{DynamicResource WrapPanelVerticalListBox}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource _listBoxModeSelectionStyle}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid  HorizontalAlignment="Stretch"  Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{DynamicResource orgb}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{DynamicResource TextBlockDefault}"/>
                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="2" Text="OpenRGB" Style="{DynamicResource TextBlockDefault}"/>
                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="4" Text="{Binding Type}" Style="{DynamicResource TextBlockDefault}"/>
                                        </Grid>

                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>


                        </Grid>
                    </StackPanel>

                </TabItem>
            </TabControl>

        </Grid>
        <Grid  Grid.Row="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="1">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <hc:TransitioningContentControl Grid.Row="1">
                <ListBox Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{DynamicResource _ListBoxDeviceCollectionStyle}" 
                                                  SelectedItem="{Binding CurrentSelectedDeviceToAdd}"
                                                  x:Name="AvailableDeviceToAdd"
                                                  Margin="0,10,0,10"
                                                  BorderThickness="0"   
                                               
                                                  Style="{DynamicResource WrapPanelHorizontalListBox}" 
                                                  ItemsPanel="{DynamicResource WrapPanelHorizontalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding CurrentSelectedCatergoryToAdd.Devices}">

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="7" Width="150" Height="150" Background="{DynamicResource DarkMaskBrush}">
                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Path  Grid.Row="0" Margin="5" Data="{Binding Geometry, Converter={converters:StaticResourceConverter}}" Width="70" Height="70" Fill="{StaticResource PrimaryBrush}" Stretch="Uniform" />
                                    <TextBlock Margin="10" Grid.Row="1" Text="{Binding DeviceName }" FontWeight="SemiBold" Style="{DynamicResource TextBlockDefault}"/>
                                </Grid>
                            </Border>

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
            </hc:TransitioningContentControl>
        </Grid>
        <Grid  Grid.Row="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="2">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel>


                <TextBox Text="{Binding CurrentSelectedDeviceToAdd.DeviceName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxLength="100" Margin="10" hc:InfoElement.Placeholder="Ví dụ : LED Màn hình" hc:InfoElement.Title="TÊN THIẾT BỊ" Style="{DynamicResource TextBoxExtend}" hc:InfoElement.Necessary="True" />
                <ComboBox ItemsSource="{Binding AvailableComPorts}" Margin="10" Style="{DynamicResource ComboBoxExtend}" hc:InfoElement.Title="CHỌN CỔNG COM" SelectedItem="{Binding CurrentSelectedDeviceToAdd.OutputPort}" hc:InfoElement.Necessary="True"/>




            </StackPanel>



        </Grid>

        <Grid x:Name="AddManuallyGrid" Visibility="Collapsed" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button  Margin="10"  Grid.Column="2" Content="Next" CommandParameter="next">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Setter Property="Command" Value="{Binding JumpToNextAddDeviceWizardStateCommand}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="1">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </Button.Style>
            </Button>
            <Button Click="Cancel_Button_Click" Command="{Binding AddCurrentSelectedDeviceToDashboard}" Margin="10"  Grid.Column="2" Content="Done" CommandParameter="done">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="2">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>


                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>


            <Button Click="Cancel_Button_Click" Background="Transparent" Margin="10" Grid.Column="1" Content="Cancel">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Command="{Binding BackToPreviousAddDeviceWizardStateCommand}" CommandParameter="back" Background="Transparent" Margin="10"  Grid.Column="1" Content="Back">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="1">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="2">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="AddAllButton"  Margin="10"  Grid.Column="2" Content="Add Selected" CommandParameter="AddSelected">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Setter Property="Command" Value="{Binding AddSelectedWLEDDevicesCommand}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentAddDeviceWizardState}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </Button.Style>
            </Button>





        </Grid>




    </Grid>
</hc:Window>