<UserControl x:Class="adrilight.View.PlayListCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:properties="clr-namespace:adrilight_shared.Properties;assembly=adrilight_shared"
             xmlns:lighting="clr-namespace:adrilight_shared.Models.Lighting;assembly=adrilight_shared"
             mc:Ignorable="d"
             d:DataContext="{Binding Source={StaticResource Locator}, Path=LightingProfileCollectionViewModel}"
             DataContext="{Binding Source={StaticResource Locator}, Path=LightingProfileCollectionViewModel}"
             Background="{StaticResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <DataTemplate x:Key="_lightingProfilePlayListTemplate"
                                  DataType="{x:Type lighting:LightingProfilePlaylist}">
                        <Button Width="150"
                                Height="200"
                                Padding="0"
                                Margin="5"
                                Command="{Binding Path=DataContext.PlaylistClickCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                CommandParameter="{Binding .}"
                                hc:BorderElement.CornerRadius="7"
                                Style="{DynamicResource _mediumProfileDefaultButton}"
                                BorderThickness="0"
                                Background="{DynamicResource MainContentBackgroundBrush}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Border CornerRadius="4"
                                            Margin="5"
                                            Background="{DynamicResource MainContentBackgroundBrush}">
                                        <Grid>
                                            <ItemsControl HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          ItemsSource="{Binding CollectionName}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <hc:Gravatar Width="60"
                                                                     Height="60"
                                                                     Background="Transparent"
                                                                     Id="{Binding .}">
                                                        </hc:Gravatar>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>

                                        </Grid>
                                    </Border>
                                </Grid>
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Button hc:BorderElement.CornerRadius="5"
                                            Command="{Binding Path=DataContext.PlaylistPlayButtonClickCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                            CommandParameter="{Binding .}"
                                            ToolTip="Play"
                                            BorderThickness="1"
                                            Background="Black"
                                            Opacity="0.8"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            Margin="10"
                                            hc:IconElement.Geometry="{DynamicResource playComposition}" />
                                </Grid>
                                <CheckBox IsChecked="{Binding IsChecked}"
                                          Margin="5"
                                          BorderBrush="{DynamicResource SecondaryTextBrush}"
                                          BorderThickness="1"
                                          Grid.Column="1"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox"
                                               BasedOn="{StaticResource CheckBoxBaseStyle}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding IsChecked}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                    <Setter Property="Background"
                                                            Value="{DynamicResource PrimaryBrush}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                                <Grid Grid.Row="1">
                                    <StackPanel>
                                        <TextBlock HorizontalAlignment="Left"
                                                   Margin="10,5,5,5"
                                                   Text="{Binding Name}"
                                                   FontWeight="SemiBold"
                                                   Style="{DynamicResource TextBlockSubTitle}" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="10,0,0,10"
                                                       Text="{Binding LightingProfiles.Count}"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}" />
                                            <TextBlock Margin="5,0,0,10"
                                                       Text="profiles"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <ToggleButton Background="Transparent"
                                                  IsChecked="{Binding IsPinned}"
                                                  hc:IconElement.Width="15"
                                                  hc:IconElement.Height="15"
                                                  Padding="0"
                                                  BorderThickness="0"
                                                  Width="25"
                                                  Height="25"
                                                  Margin="5"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Bottom"
                                                  hc:IconSwitchElement.Geometry="{DynamicResource pin}"
                                                  hc:IconSwitchElement.GeometrySelected="{DynamicResource pinned}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton"
                                                   BasedOn="{StaticResource ToggleButtonIcon}">
                                                <Setter Property="Foreground"
                                                        Value="White" />
                                                <Setter Property="ToolTip"
                                                        Value="Pin to Dashboard" />
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsPinned}"
                                                                 Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource PrimaryBrush}" />
                                                        <Setter Property="ToolTip"
                                                                Value="Unpin from Dashboard" />
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                       Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility"
                                                                Value="Visible" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                            </Grid>
                        </Button>
                    </DataTemplate>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border  Margin="15,10"
                         Visibility="{Binding ShowToolBar,Converter={StaticResource Boolean2VisibilityReConverter}}"
                         Height="50"
                         CornerRadius="7"
                         Background="Transparent">
                    <Grid>

                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                            <Button BorderThickness="0"
                                    Height="32"
                                    Foreground="{DynamicResource RegionBrush}"
                                    Command="{Binding OpenCreateNewPlaylistCommand}"
                                    CommandParameter=""
                                    Style="{DynamicResource ButtonPrimary}"
                                    hc:IconElement.Geometry="{DynamicResource addTo}"
                                    Margin="0"
                                    hc:IconElement.Height="20"
                                    Content="{x:Static properties:Resources.PlayListCollectionView_NewPlaylist_Button_Content}" />
                        </StackPanel>
                    </Grid>
                </Border>
                <hc:TransitioningContentControl Visibility="{Binding ShowToolBar,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                TransitionMode="Top2BottomWithFade">
                    <Border  Margin="15,10"
                             Height="50"
                             CornerRadius="7"
                             Effect="{DynamicResource EffectShadow1}"
                             Background="{DynamicResource MainContentBackgroundBrush}">

                        <Grid>
                            <ItemsControl ItemsSource="{Binding AvailableTools}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    HorizontalAlignment="Right" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button BorderThickness="0"
                                                Background="{DynamicResource SecondaryRegionBrush}"
                                                hc:IconElement.Geometry="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                                Margin="10,5"
                                                Height="32"
                                                Command="{Binding Command}"
                                                CommandParameter="{Binding CommandParameter}"
                                                hc:IconElement.Height="15"
                                                Content="Remove" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>


                        </Grid>
                    </Border>
                </hc:TransitioningContentControl>
                <hc:ScrollViewer Grid.Row="1"
                                 IsInertiaEnabled="True">
                    <ItemsControl Margin="10,10,10,10"
                                  ItemTemplate="{DynamicResource _lightingProfilePlayListTemplate}"
                                  ItemsSource="{Binding AvailableLightingProfilesPlaylists}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </hc:ScrollViewer>
            </Grid>
        </hc:TransitioningContentControl>
    </Grid>
</UserControl>