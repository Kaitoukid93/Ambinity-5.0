<UserControl x:Class="adrilight.View.DeviceIDEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:helpers="clr-namespace:adrilight.Helpers"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:adorners="clr-namespace:adrilight.View.DeviceCanvas.Adorners"
             xmlns:slaveDevices="clr-namespace:adrilight_shared.Models.Device.SlaveDevice;assembly=adrilight_shared"
             xmlns:zone="clr-namespace:adrilight_shared.Models.Device.Zone;assembly=adrilight_shared"
             xmlns:dataVisualizer="clr-namespace:adrilight_shared.Models.DataVisualizer;assembly=adrilight_shared"
             xmlns:drawable="clr-namespace:adrilight_shared.Models.Drawable;assembly=adrilight_shared"
             xmlns:properties="clr-namespace:adrilight_shared.Properties;assembly=adrilight_shared"
             xmlns:view="clr-namespace:adrilight.View"
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             mc:Ignorable="d"
             x:Name="window"
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <converters:StaticResourceConverter x:Key="staticResourceConverter" />
                    <SolidColorBrush x:Key="primaryBackgroundBrush"
                                     Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                                     Opacity="0.15" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource DarkMaskBrush}}" />
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv" />
                    <GeometryDrawing x:Key="GridStyle"
                                     Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                                     Brush="{DynamicResource SecondaryBorderBrush}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <richCanvas:RichItemsControl x:Name="liveViewCanvas"
                                     ItemsSource="{Binding LiveViewItems}"
                                     GridStyle="{StaticResource GridStyle}"
                                     EnableSnapping="False"
                                     MinScale="0.1"
                                     MaxScale="100"
                                     GridSpacing="24"
                                     DisableCache="true"
                                     EnableGrid="False"
                                     Scrolling="OnScrolling"
                                     CanSelectMultipleItems="{Binding IsInIDEditStage,Converter={StaticResource Boolean2BooleanReConverter}}"
                                     RealTimeDraggingEnabled="False"
                                     RealTimeSelectionEnabled="False"
                                     DisableAutoPanning="True"
                                     Background="Transparent"
                                     DisableScroll="True"
                                     UseLayoutRounding="False"
                                     ZoomKey="LeftCtrl"
                                     TranslateOffset="{Binding CurrentLiveViewOffset,Mode=TwoWay}"
                                     Scale="{Binding CanvasScale,Mode=TwoWay}"
                                     MousePosition="{Binding MousePosition, Mode=OneWayToSource}">
            <richCanvas:RichItemsControl.SelectionRectangleStyle>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill"
                            Value="Transparent" />
                    <Setter Property="Stroke"
                            Value="{DynamicResource PrimaryBrush}" />
                    <Setter Property="StrokeDashArray"
                            Value="2" />
                    <Setter Property="StrokeThickness"
                            Value="{Binding DataContext.SelectionRectangleStrokeThickness,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceLiveView}}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.IsInIDEditStage,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceLiveView}}}"
                                     Value="True">
                            <Setter Property="Opacity"
                                    Value="0.1" />
                            <Setter Property="Fill"
                                    Value="Transparent" />
                            <Setter Property="Stroke"
                                    Value="Transparent" />
                            <Setter Property="StrokeThickness"
                                    Value="3" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </richCanvas:RichItemsControl.SelectionRectangleStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DataContext.UnselectAllLiveiewItemCommand,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceLiveView}}}"
                                           CommandParameter="unselect" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding DataContext.LiveViewMouseButtonUpCommand,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceLiveView}}}"
                                           CommandParameter="mouseup" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <richCanvas:RichItemsControl.Resources>
                <DataTemplate x:Key="SelectedAdornerTemplate">
                    <Border BorderBrush="{DynamicResource PrimaryBrush}"
                            BorderThickness="1"
                            CornerRadius="0"
                            Background="{DynamicResource PrimaryBrush}">
                        <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} : {1}">
                                    <Binding Path="Left" />
                                    <Binding Path="Top" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Border>
                </DataTemplate>

                <DataTemplate x:Key="HoverAdornerTemplate">
                    <Grid>
                        <Border BorderBrush="{DynamicResource PrimaryBrush}"
                                BorderThickness="1">
                        </Border>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type drawable:ScreenBound}">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="20,10,5,5"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Text="Screen"
                                       Style="{DynamicResource TextBlockLarge}" />
                            <TextBlock Margin="5,10"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Text="at"
                                       Style="{DynamicResource TextBlockLarge}" />
                            <TextBlock Margin="5,10"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Style="{DynamicResource TextBlockLarge}">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} x {1}">
                                        <Binding Path="Width" />
                                        <Binding Path="Height" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>

                        <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                                   StrokeThickness="5"
                                   Fill="Transparent"
                                   StrokeDashArray="2"
                                   IsHitTestVisible="{Binding IsSelectable}">
                        </Rectangle>
                    </Grid>
                </DataTemplate>
            </richCanvas:RichItemsControl.Resources>

            <richCanvas:RichItemsControl.ItemContainerStyle>
                <Style TargetType="richCanvas:RichItemContainer">
                    <Setter Property="helpers:EventToCommand.Event"
                            Value="LeftChanged, TopChanged" />
                    <Setter Property="helpers:EventToCommand.Command">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource CommandsToListConverter}">
                                <Binding Path="LeftChangedCommand" />
                                <Binding Path="TopChangedCommand" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin"
                            Value="0.5,0.5" />
                    <Setter Property="helpers:EventToCommand.CanExecute"
                            Value="{Binding IsSelected}" />
                    <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                    <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />
                    <Setter Property="adorners:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsSelected}" />
                    <Setter Property="Top"
                            Value="{Binding GetRect.Top}" />

                    <Setter Property="Left"
                            Value="{Binding GetRect.Left}" />

                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                    <Setter Property="Width"
                            Value="{Binding Width, Mode=TwoWay}" />

                    <Setter Property="Height"
                            Value="{Binding Height, Mode=TwoWay}" />

                    <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                    <Setter Property="IsDraggable"
                            Value="False" />

                    <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                    <Setter Property="ShouldBringIntoView"
                            Value="False" />
                    <Setter Property="Cursor"
                            Value="Arrow" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.IsInIDEditStage,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceLiveView}}}"
                                     Value="True">
                            <Setter Property="IsSelectable"
                                    Value="True" />
                            <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                                    Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataType}"
                                     Value="{x:Type drawable:PathGuide}">
                            <Setter Property="Top"
                                    Value="{Binding Top,Mode=TwoWay}" />
                            <Setter Property="Left"
                                    Value="{Binding Left,Mode=TwoWay}" />
                            <Setter Property="IsSelectable"
                                    Value="False" />
                            <Setter Property="Cursor"
                                    Value="None" />
                            <Setter Property="IsDraggable"
                                    Value="False" />
                            <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                                    Value="False" />
                            <Setter Property="adorners:AttachedAdorner.ShowResizeAdorner"
                                    Value="False" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataType}"
                                     Value="{x:Type drawable:ImageVisual}">
                            <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                                    Value="False" />
                            <Setter Property="IsSelectable"
                                    Value="False" />
                            <Setter Property="IsDraggable"
                                    Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataType}"
                                     Value="{x:Type slaveDevices:ARGBLEDSlaveDevice}">
                            <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                                    Value="False" />
                            <Setter Property="IsSelectable"
                                    Value="False" />
                            <Setter Property="IsDraggable"
                                    Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </richCanvas:RichItemsControl.ItemContainerStyle>
        </richCanvas:RichItemsControl>
        <Grid>
            <hc:TransitioningContentControl>
                <StackPanel HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowSelectedItemToolbar,Mode=TwoWay}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Border Effect="{DynamicResource EffectShadow2}"
                                VerticalAlignment="Top"
                                CornerRadius="7"
                                Margin="10,0"
                                HorizontalAlignment="Right"
                                Background="{DynamicResource MainContentBackgroundBrush}">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInIsolateMode,Mode=TwoWay}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <hc:TransitioningContentControl>

                                        <Button Style="{DynamicResource _lowProfileDefaultButton}"
                                                Margin="5"
                                                ToolTip="{x:Static properties:Resources.DeviceLiveView_Isolate_tooltip}"
                                                Command="{Binding IsolateSelectedItemsCommand}"
                                                CommandParameter="isolate"
                                                Content="{x:Static properties:Resources.DeviceLiveView_Isolate}" />
                                    </hc:TransitioningContentControl>
                                </Grid>
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding CanGroup,Mode=TwoWay}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding IsInIDEditStage,Mode=TwoWay}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <hc:TransitioningContentControl>

                                        <Button Style="{DynamicResource _lowProfileDefaultButton}"
                                                Margin="5"
                                                ToolTip="{x:Static properties:Resources.DeviceLiveView_NhómCácĐốiTượngĐượcChọn}"
                                                Command="{Binding GroupSelectedZoneForMaskedControlCommand}"
                                                CommandParameter="group"
                                                Content="{x:Static properties:Resources.DeviceLiveView_Group}">
                                        </Button>
                                    </hc:TransitioningContentControl>
                                </Grid>
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding CanUnGroup,Mode=TwoWay}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding IsInIDEditStage,Mode=TwoWay}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <hc:TransitioningContentControl>
                                        <Button Style="{DynamicResource _lowProfileDefaultButton}"
                                                Margin="5"
                                                ToolTip="{x:Static properties:Resources.DeviceLiveView_Ungroup_tooltip}"
                                                Command="{Binding UnGroupZoneCommand}"
                                                CommandParameter="group"
                                                Content="{x:Static properties:Resources.DeviceLiveView_Ungroup}">
                                        </Button>
                                    </hc:TransitioningContentControl>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Grid  Visibility="{Binding IsInIsolateMode,Mode=TwoWay,Converter={StaticResource Boolean2VisibilityConverter}}">
                        <hc:TransitioningContentControl>
                            <Border  Margin="10,0,10,0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Background="{DynamicResource MainContentBackgroundBrush}"
                                     CornerRadius="4">
                                <Button Content="{x:Static properties:Resources.DeviceLiveView_ShowAll_content}"
                                        Style="{DynamicResource _lowProfileDefaultButton}"
                                        ToolTip="{x:Static properties:Resources.DeviceLiveView_ShowAll_tooltip}"
                                        Command="{Binding ExitIsolateModeCommand}"
                                        Margin="5"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left" />
                            </Border>
                        </hc:TransitioningContentControl>
                    </Grid>
                </StackPanel>
            </hc:TransitioningContentControl>
        </Grid>
        <StackPanel Orientation="Horizontal">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsInIDEditStage,Mode=TwoWay}"
                                               Value="True" />
                                    <Condition Binding="{Binding IdEditMode,Mode=TwoWay}"
                                               Value="0" />
                                    <Condition Binding="{Binding SelectedToolIndex,Mode=TwoWay}"
                                               Value="1" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsInIDEditStage,Mode=TwoWay}"
                                               Value="True" />
                                    <Condition Binding="{Binding IdEditMode,Mode=TwoWay}"
                                               Value="0" />
                                    <Condition Binding="{Binding SelectedToolIndex,Mode=TwoWay}"
                                               Value="2" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <hc:TransitioningContentControl TransitionMode="Left2Right">
                    <Border Effect="{DynamicResource EffectShadow3}"
                            Margin="0,0,10,10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="{DynamicResource MainContentBackgroundBrush}"
                            CornerRadius="4">
                        <StackPanel>
                            <Grid ToolTip="Brush size">
                                <StackPanel>
                                    <Grid>
                                        <GroupBox Margin="10"
                                                  HorizontalContentAlignment="Left"
                                                  Style="{StaticResource GroupBoxOriginal}"
                                                  hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock HorizontalAlignment="Left"
                                                                       FontWeight="SemiBold"
                                                                       Text="{x:Static properties:Resources.DeviceLiveView_BRUSHSIZE}" />
                                                            <Button ToolTip="Tìm hiểu thêm"
                                                                    Grid.Column="1"
                                                                    HorizontalAlignment="Left"
                                                                    Background="Transparent"
                                                                    Margin="10,0,0,0"
                                                                    hc:IconElement.Geometry="{DynamicResource infoCircle}"
                                                                    Style="{DynamicResource _defaultIconButtonSmall}" />
                                                        </Grid>
                                                        <TextBlock Margin="0,5,0,0"
                                                                   TextWrapping="Wrap"
                                                                   HorizontalAlignment="Left"
                                                                   Style="{StaticResource TextBlockDefaultSecLight}"
                                                                   Grid.Row="1"
                                                                   Text="{x:Static properties:Resources.DeviceLiveView_BrushSize_info}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>

                                            <hc:PreviewSlider Value="{Binding BrushSize,Mode=TwoWay}"
                                                              HorizontalAlignment="Right"
                                                              Width="200"
                                                              Minimum="20"
                                                              Maximum="1000">
                                                <hc:PreviewSlider.PreviewContent>
                                                    <Label Style="{StaticResource LabelPrimary}"
                                                           Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}"
                                                           ContentStringFormat="#0" />
                                                </hc:PreviewSlider.PreviewContent>
                                            </hc:PreviewSlider>
                                        </GroupBox>
                                    </Grid>
                                    <hc:Divider Margin="0"
                                                LineStroke="{DynamicResource RegionBrush}">
                                    </hc:Divider>
                                    <Grid>
                                        <GroupBox Margin="10"
                                                  HorizontalContentAlignment="Left"
                                                  Style="{DynamicResource GroupBoxOriginal}"
                                                  hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock HorizontalAlignment="Left"
                                                                       FontWeight="SemiBold"
                                                                       Text="{x:Static properties:Resources.DeviceLiveView_BRUSHINTENSITY}" />
                                                            <Button ToolTip="Tìm hiểu thêm"
                                                                    Grid.Column="1"
                                                                    HorizontalAlignment="Left"
                                                                    Background="Transparent"
                                                                    Margin="10,0,0,0"
                                                                    hc:IconElement.Geometry="{DynamicResource infoCircle}"
                                                                    Style="{DynamicResource _defaultIconButtonSmall}" />
                                                        </Grid>

                                                        <TextBlock Margin="0,5,0,0"
                                                                   TextWrapping="Wrap"
                                                                   HorizontalAlignment="Left"
                                                                   Style="{StaticResource TextBlockDefaultSecLight}"
                                                                   Grid.Row="1"
                                                                   Text="{x:Static properties:Resources.DeviceLiveView_BrushIntensity_info}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>

                                            <hc:NumericUpDown VerticalAlignment="Center"
                                                              HorizontalAlignment="Right"
                                                              Minimum="1"
                                                              Maximum="100"
                                                              Value="{Binding BrushIntensity, Mode=TwoWay}">
                                            </hc:NumericUpDown>
                                        </GroupBox>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                </hc:TransitioningContentControl>
            </Grid>
        </StackPanel>
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsInIsolateMode,Mode=TwoWay}"
                                           Value="False" />
                                <Condition Binding="{Binding IsInIDEditStage,Mode=TwoWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</UserControl>