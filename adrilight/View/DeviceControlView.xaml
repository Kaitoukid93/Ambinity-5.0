<UserControl x:Class="adrilight.View.DeviceControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:adrilight.View"
             mc:Ignorable="d" 
             xmlns:hlprs ="clr-namespace:adrilight.Helpers"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight.Converter" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             Background="{StaticResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Margin="5,2" Padding="3" CornerRadius="4" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="Left" Width="15" Height="15"  Content="{TemplateBinding Icon}" Margin="5,5" />
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Content="{TemplateBinding Header}" Margin="5,5" />
                                </Grid>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background"  Value="{StaticResource SecondaryRegionBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PrimaryTextColor}"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="CapturingControlPanel">
                <local:ScreenCapturingControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="ColorPaletteControlPanel">
                <local:ColorPaletteControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="StaticColorControlPanel">
                <local:StaticColorControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="MusicControlPanel">
                <local:MusicControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="GifxelationControlPanel">
                <local:GifxelationControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="CompositionControlPanel">
                <local:CompositionControl Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="CapturingSidePanel">
                <local:ScreenCapturingSidePanel Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="ColorPaletteSidePanel">
                <local:ColorPaletteSidePanel Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="StaticColorSidePanel">
                <local:StaticColorSidePanel Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="MusicSidePanel">
                <local:MusicSidePanel Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="GifxelationSidePanel">
                <local:GifxelationSidePanel Margin="4"/>
            </DataTemplate>
            <DataTemplate x:Key="CompositionSidePanel">
                <local:CompositionSidePanel Margin="4"/>
            </DataTemplate>


            <Style x:Key="controlPanelStyle" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="0">
                        <Setter Property="ContentTemplate" Value="{StaticResource CapturingControlPanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="1">
                        <Setter Property="ContentTemplate" Value="{StaticResource ColorPaletteControlPanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="2">
                        <Setter Property="ContentTemplate" Value="{StaticResource MusicControlPanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="3">
                        <Setter Property="ContentTemplate" Value="{StaticResource StaticColorControlPanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="4">
                        <Setter Property="ContentTemplate" Value="{StaticResource GifxelationControlPanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="5">
                        <Setter Property="ContentTemplate" Value="{StaticResource CompositionControlPanel}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="sidePanelStyle" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="0">
                        <Setter Property="ContentTemplate" Value="{StaticResource CapturingSidePanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="1">
                        <Setter Property="ContentTemplate" Value="{StaticResource ColorPaletteSidePanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="2">
                        <Setter Property="ContentTemplate" Value="{StaticResource MusicSidePanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="3">
                        <Setter Property="ContentTemplate" Value="{StaticResource StaticColorSidePanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="4">
                        <Setter Property="ContentTemplate" Value="{StaticResource GifxelationSidePanel}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DataContext.CurrentOutput.OutputSelectedMode, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="5">
                        <Setter Property="ContentTemplate" Value="{StaticResource CompositionSidePanel}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels"
          Value="True" />
                <Setter Property="OverridesDefaultStyle"
          Value="True" />
                <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
                <Setter Property="HasDropShadow"
          Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Margin="10" Effect="{StaticResource EffectShadow3}" Padding="0"  x:Name="Border"
                Background="{StaticResource RegionBrush}"
                BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.BorderBrush>
                                <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow"
                   Value="true">
                                    <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                                    <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>


                </Setter>
            </Style>


            <Style x:Key="_ListBoxOutputsCollectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource DarkOpacityBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource DarkOpacityBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource RegionBrush}"/>
                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>

                            <MenuItem Command="{Binding PlacementTarget.Tag.LaunchPositionEditWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="position"  Header="Layout">
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource WindowRestoreGeometry}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>


                            </MenuItem>
                            <MenuItem Command="{Binding PlacementTarget.Tag.ImportPIDCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"  Header="Import LED Setup" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource import}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Command="{Binding PlacementTarget.Tag.ExportPIDCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Export LED Setup" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource export}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding PlacementTarget.Tag.ShowNameEditWindow, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="rename"  Header="Rename" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource editname}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>

                            <MenuItem CommandParameter="advance" Command="{Binding PlacementTarget.Tag.OpenAdvanceSettingWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Advance Settings" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource advancesettings}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>

                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenuService.Placement" Value="Right">

                </Setter>
                <Setter Property="ContextMenuService.VerticalOffset" Value="0">

                </Setter>
                <Setter Property="ContextMenuService.HorizontalOffset" Value="5">

                </Setter>
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="_listBoxControlPropertyStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Width="50" Height="50" CornerRadius="0" Name="_Border"
                                Padding="0"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="_content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource PrimaryBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource SecondaryRegionBrush}"/>
                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>-->
                                </MultiTrigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="_listBoxOutputCollection" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Width="100" Height="50" CornerRadius="0" Name="_Border"
                                Padding="0"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="_content" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource PrimaryBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource SecondaryRegionBrush}"/>
                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>-->
                                </MultiTrigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="_listBoxGeneralModeSelectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="5"
                                Background="Transparent"   
                                BorderBrush="{StaticResource DarkMaskBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource SecondaryRegionBrush}"/>



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource SecondaryRegionBrush}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource DarkMaskBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="_listBoxProfileSelectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="5"
                                Background="Transparent"   
                                BorderBrush="{StaticResource DarkMaskBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background" TargetName="_Border" Value="{StaticResource DarkMaskBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid   Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--device info and hardware control-->

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>


            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="10" CornerRadius="7">
                    <Border.Background>
                        <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                    </Border.Background>
                    <Path Margin="10" Data="{Binding CurrentDevice.Geometry, Converter={converters:StaticResourceConverter}}" Width="70" Height="70" Fill="{StaticResource PrimaryBrush}" Stretch="Uniform" />
                </Border>

                <StackPanel Margin="10,5" Grid.Column="1">
                    <hc:RunningBlock 
                                                Margin="0,0,10,0"
                                                BorderThickness="0" 
                                                Padding="0"  
                                                Duration="0:0:9" 
                                                Height="32" 
                                                HorizontalAlignment="Left" 
                                                AutoRun="True"  Width="150" 
                                                Runaway="False" 
                                                VerticalAlignment="Stretch" >
                        <hc:RunningBlock.Content>
                            <TextBlock  Text="{Binding CurrentDevice.DeviceName}" 
                                                                FlowDirection="RightToLeft"
                                                                FontWeight="SemiBold"
                                                                Style="{StaticResource TextBlockTitle}"
                                                                />
                        </hc:RunningBlock.Content>

                    </hc:RunningBlock>
                    <!--<TextBlock FontSize="13" HorizontalAlignment="Left" Margin="2" Style="{StaticResource TextBlockDefault}" Text="{Binding CurrentDevice.DeviceDescription}" />-->

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Foreground="{DynamicResource PrimaryBrush}" Content="Rename"   x:Name="ButtonRename"  Height="auto" Width="auto" VerticalAlignment="Top" hc:BorderElement.CornerRadius="6" Margin="5" FontSize="15" FontWeight="SemiBold" Click="RenameButtonClick"  Padding="5,3" HorizontalAlignment="Left"    Style="{StaticResource ButtonDefault}" BorderBrush="Transparent">

                            <Button.Background>
                                <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                            </Button.Background>
                        </Button>
                        <!--<Button Height="20"  Margin="10,0,10,0" Grid.Column="1" x:Name="ButtonRemove"  HorizontalAlignment="Left" Padding="0" Command="{Binding LaunchDeleteSelectedDeviceWindowCommand}"  Style="{StaticResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent">
                            <Button.Content>
                                <TextBlock FontSize="13" Text="Remove" Style="{StaticResource TextBlockDefaultDanger}"/>
                            </Button.Content>
                        </Button>-->
                    </Grid>

                    <Popup AllowsTransparency="True"  PlacementTarget="{Binding ElementName=ButtonRename}" HorizontalOffset="30" x:Name="RenamePopup" VerticalOffset="0" StaysOpen="False">
                        <hc:TransitioningContentControl Effect="{StaticResource EffectShadow3}" TransitionMode="Top2Bottom">
                            <Border Background="{StaticResource SecondaryRegionBrush}" CornerRadius="7" Margin="0,2,15,15"  Effect="{StaticResource EffectShadow3}">
                                <StackPanel Orientation="Vertical">
                                    <TextBox x:Name="RenameTextBox" >

                                    </TextBox>

                                    <Button HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Click="ChangeCurrentDeviceName"   BorderBrush="Transparent"   Margin="5" Content="Rename" Style="{StaticResource ButtonPrimary}"/>
                                </StackPanel>

                            </Border>
                        </hc:TransitioningContentControl>

                    </Popup>

                </StackPanel>
            </Grid>
            <Grid Margin="0,0,50,0" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <hc:Badge  BadgeMargin="8,17,0,10" Status="{Binding IsSettingsUnsaved}"  Margin="0,0,0,0" Style="{StaticResource BadgeDanger}">


                    <Button Click="ButtonProfile_OnClick" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent" Style="{StaticResource ButtonDefault}" >

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Path Width="30" Height="30" Margin="5,10" Data="{StaticResource profile}" Stretch="Uniform" >
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="{StaticResource PrimaryBrush}"/>
                                    </Style>
                                </Path.Style>

                            </Path>


                            <Popup Effect="{StaticResource EffectShadow3}"  AllowsTransparency="True" Grid.Column="2" Grid.ColumnSpan="2"  HorizontalOffset="15" Name="profile_selection" VerticalOffset="6" StaysOpen="False">
                                <hc:TransitioningContentControl Effect="{StaticResource EffectShadow3}" TransitionMode="Top2Bottom">
                                    <Border  Margin="15,0,15,15" Background="{StaticResource RegionBrush}" CornerRadius="7" BorderThickness="1">
                                        <StackPanel>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <TextBlock VerticalAlignment="Center" Margin="10,5" HorizontalAlignment="Left" Text="PROFILES"/>
                                                </Grid>

                                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                    <Button Background="Transparent" ToolTip="Import Profile" Command="{Binding ImportProfileCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{StaticResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource import}" Padding="6" Margin="20,2,2,2"/>
                                                    <Button Background="Transparent" ToolTip="Create New Profile" Command="{Binding OpenProfileCreateCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{StaticResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource newfile}" Padding="6" Margin="2"/>
                                                    <Button Background="Transparent" ToolTip="Save all" Command="{Binding SaveCurrentProfileCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{StaticResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource save}" Padding="6" Margin="2"/>

                                                </StackPanel>
                                            </Grid>

                                            <hc:Divider LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,5,5,5">

                                            </hc:Divider>
                                            <ListBox IsSynchronizedWithCurrentItem="False"
                                                     SelectedItem="{Binding CurrentSelectedProfile,Mode=TwoWay}"
                                                 ItemContainerStyle="{StaticResource _listBoxModeSelectionStyle}"  
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 ItemsSource="{Binding AvailableProfilesForCurrentDevice}"
                                                 Style="{StaticResource StackPanelVerticalListBox}">

                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel>

                                                        </StackPanel>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{StaticResource TextBlockDefault}"/>
                                                            <Grid Grid.Column="2">
                                                                <StackPanel Orientation="Horizontal">

                                                                    <Button Background="Transparent" ToolTip="Export Profile" CommandParameter="{Binding .}" Command="{Binding Path=DataContext.ExportCurrentProfileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{StaticResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource export}" Padding="6" Margin="2"/>

                                                                    <Button Background="Transparent" ToolTip="Delete" CommandParameter="{Binding .}" Command="{Binding Path=DataContext.DeleteAttachedProfileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{StaticResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource delete}" Padding="6" Margin="2"/>

                                                                </StackPanel>
                                                            </Grid>

                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>

                                            </ListBox>
                                        </StackPanel>

                                    </Border>
                                </hc:TransitioningContentControl>

                            </Popup>

                            <Grid HorizontalAlignment="Left" Grid.Column="1">
                                <StackPanel HorizontalAlignment="Left">
                                    <TextBlock HorizontalAlignment="Left" Text="{Binding CurrentSelectedProfile.Name,Mode=TwoWay}" Style="{StaticResource TextBlockSubTitle}" FontWeight="SemiBold" Margin="5,2"/>
                                    <TextBlock Text="{Binding CurrentSelectedProfile.Owner, Mode=TwoWay}" Style="{StaticResource TextBlockDefaultPrimary}"  Margin="5,2" HorizontalAlignment="Left"/>
                                </StackPanel>
                            </Grid>
                        </Grid>

                    </Button>
                </hc:Badge>
            </Grid>
            <Grid Margin="0,0,50,0" Grid.Column="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Command="{Binding OpenDeviceFirmwareSettingsWindowCommand}" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentDevice.DeviceConnectionType}" Value="OpenRGB">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentDevice.DeviceConnectionType}" Value="wireless">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Path Width="30" Height="30" Margin="5,10" Data="{StaticResource hardware}" Stretch="Uniform" >
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{StaticResource PrimaryBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                            <Setter Property="Fill" Value="{StaticResource SecondaryTextBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Path.Style>

                        </Path>

                        <Grid HorizontalAlignment="Left" Grid.Column="1">
                            <StackPanel HorizontalAlignment="Left">
                                <TextBlock HorizontalAlignment="Left" Text="{Binding CurrentDevice.DeviceType}" Style="{StaticResource TextBlockSubTitle}" FontWeight="SemiBold" Margin="5,2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding CurrentDevice.FirmwareVersion}" Style="{StaticResource TextBlockDefaultPrimary}"  Margin="5,2" HorizontalAlignment="Left"/>
                                    <TextBlock Grid.Column="1" Text="{Binding CurrentDevice.HardwareVersion}" Style="{StaticResource TextBlockDefaultPrimary}"  Margin="5,2" HorizontalAlignment="Left"/>
                                </Grid>




                            </StackPanel>
                        </Grid>
                    </Grid>
                </Button>
            </Grid>
            <Grid Margin="0,0,50,0" Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding OpenDeviceConnectionSettingsWindowCommand}" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentDevice.DeviceConnectionType}" Value="OpenRGB">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentDevice.DeviceConnectionType}" Value="wireless">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Path Width="30" Height="30" Margin="5,10" Data="{Binding CurrentDevice.DeviceConnectionGeometry, Converter={converters:StaticResourceConverter}}" Stretch="Uniform" >
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{StaticResource PrimaryBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                            <Setter Property="Fill" Value="{DynamicResource SecondaryTextBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Path.Style>

                        </Path>

                        <Grid HorizontalAlignment="Left" Grid.Column="1">
                            <StackPanel HorizontalAlignment="Left">
                                <hc:RunningBlock 
                                                Margin="5,0,5,0"
                                                BorderThickness="0" 
                                                Padding="0"  
                                                Duration="0:0:9" 
                                                
                                                HorizontalAlignment="Left" 
                                                AutoRun="True"  MaxWidth="100"
                                                Runaway="False" 
                                                VerticalAlignment="Stretch" >
                                    <hc:RunningBlock.Content>
                                        <TextBlock  Text="{Binding CurrentDevice.OutputPort}" 
                                                                FlowDirection="RightToLeft"
                                                                 FontWeight="SemiBold"
                                                                Style="{StaticResource TextBlockSubTitle}"/>
                                    </hc:RunningBlock.Content>

                                </hc:RunningBlock>
                                <TextBlock Text="Connected" Style="{StaticResource TextBlockDefaultPrimary}" Visibility="{Binding CurrentDevice.IsTransferActive,Converter={StaticResource boolToVisibilityConvert}}" Margin="5,5" HorizontalAlignment="Left"/>
                                <TextBlock Text="Disconnected"  Margin="5,5" HorizontalAlignment="Left">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefaultDanger }">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>

                                        </Style>

                                    </TextBlock.Style>
                                </TextBlock>


                            </StackPanel>
                        </Grid>
                    </Grid>
                </Button>
            </Grid>
            <Grid Grid.Column="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel VerticalAlignment="Center">
                    <Button Command="{Binding BackCommand}" Width="32" Height="32" Margin="10,10,10,10"  VerticalAlignment="Center" BorderThickness="2" HorizontalAlignment="Right" hc:IconElement.Geometry="{StaticResource esc}" Style="{StaticResource ButtonIconCircular}" Foreground="{StaticResource SecondaryTextBrush}"/>

                </StackPanel>

            </Grid>
        </Grid>
        <!--<Grid Margin="0,10,0,0"  Grid.Row="1">
            <GroupBox VerticalAlignment="Top" hc:TitleElement.TitleWidth="auto"  Style="{DynamicResource  GroupBoxOriginal}" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Top">
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock FontWeight="SemiBold" Style="{DynamicResource TextBlockDefaultSecLight}" Text="CÁC ĐẦU RA CỦA THIẾT BỊ"/>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>

                <Border  HorizontalAlignment="Left" VerticalAlignment="Top" ClipToBounds="True" CornerRadius="4" Width="auto" Height="50" Margin="10,5">
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=clipMask2}" Stretch="None" />
                        </Grid.OpacityMask>
                        <Border x:Name="clipMask2" Background="{DynamicResource RegionBrush}" CornerRadius="4" />

                        <ListBox  HorizontalAlignment="Left" ItemsSource="{Binding CurrentDevice.AvailableOutputs,Mode=TwoWay}" SelectedItem="{Binding CurrentOutput}"  Margin="0" VerticalAlignment="Top" ItemContainerStyle="{DynamicResource _listBoxOutputCollection}" Background="Transparent" BorderThickness="0" Style="{DynamicResource WrapPanelHorizontalListBox}">
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ScrollViewer>
                                        <ItemsPresenter></ItemsPresenter>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Path Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                                      Stretch="Uniform" 
                                                      Margin="5" 
                                                      Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                                      Width="25" 
                                                      Height="25" >
                                                </Path>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <TextBlock Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}" Margin="5,0,5,5" Text="{Binding OutputName}" Style="{DynamicResource TextBlockDefault}"/>
                                            </Grid>

                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>

                </Border>
            </GroupBox>
        </Grid>-->
        <Grid Margin="0,10,0,0" Grid.Row="1">

            <GroupBox VerticalAlignment="Stretch" hc:TitleElement.TitleWidth="auto"  Style="{DynamicResource  GroupBoxOriginal}" HorizontalContentAlignment="Stretch" hc:TitleElement.TitlePlacement="Top">
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock FontWeight="SemiBold" Style="{DynamicResource TextBlockDefaultSecLight}" Text="ĐIỀU CHỈNH HIỆU ỨNG VÀ CÀI ĐẶT"/>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--device LightingControl-->

                    <!--OutputControlViewSelector-->
                    <Grid Grid.Column="0">
                        <Border ClipToBounds="True" CornerRadius="4" VerticalAlignment="Top" Height="auto" Margin="10,10,10,10" Background="{DynamicResource MainContentBackgroundBrush}"  Width="50">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=clipMask}" Stretch="None" />
                                </Grid.OpacityMask>
                                <Border x:Name="clipMask" Background="{DynamicResource MainContentBackgroundBrush}" CornerRadius="4" />

                                <ListBox ItemsSource="{Binding CurrentDevice.AvailableControllers,Mode=TwoWay}" SelectedIndex="{Binding CurrentDevice.CurrentActiveControlerIndex}"   Margin="0" VerticalAlignment="Top" ItemContainerStyle="{DynamicResource _listBoxControlPropertyStyle}" Background="Transparent" BorderThickness="0" Style="{DynamicResource WrapPanelVerticalListBox}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                         
                                            <Path Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                      Width="20" 
                                      Height="20" >
                                            </Path>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>

                        </Border>
                    </Grid>
                    <!--ControlView-->
                    <Grid Margin="0,10,10,10" Grid.Column="1">
                        <!--ControlView-->
                        <Border Width="400" CornerRadius="4" Background="{DynamicResource MainContentBackgroundBrush}">

                            <local:OutputControlView >

                            </local:OutputControlView>
                        </Border>
                    </Grid>




                    <!--device  Preview-->
                    <Grid  Grid.Column="2"  hlprs:perSizeBindingHelper.Active="True"
                           hlprs:perSizeBindingHelper.BoundActualHeight="{Binding CurrentLiveViewHeight, Mode=OneWayToSource}"
                           hlprs:perSizeBindingHelper.BoundActualWidth="{Binding CurrentLiveViewWidth, Mode=OneWayToSource}">
                        
                        <Border Margin="10" CornerRadius="4"  Background="{DynamicResource MainContentBackgroundBrush}">


                            <local:DeviceLiveView>

                        </local:DeviceLiveView>
                        </Border>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>





    </Grid>










</UserControl>