<hc:Window x:Class="adrilight.View.PositionEditWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:local="clr-namespace:adrilight.View"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter"
           mc:Ignorable="d"
           Effect="{DynamicResource EffectShadow4}"
           Background="{DynamicResource MainContentBackgroundBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
          
           Title="Edit Current Output Position" 
           Height="420" 
           Width="880" 
           WindowStartupLocation="CenterOwner" >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DragDropResize" TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <local:MoveThumb Cursor="SizeAll">
                                    <local:MoveThumb.Style>
                                        <Style TargetType="{x:Type local:MoveThumb}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type local:MoveThumb}">
                                                        <Rectangle Fill="Transparent" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </local:MoveThumb.Style>
                                </local:MoveThumb>
                                <Control x:Name="resizer">
                                    <Control.Style>
                                        <Style TargetType="{x:Type Control}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Control}">
                                                        <Grid>
                                                            <Grid Opacity="0" Margin="-3">
                                                                <local:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                                                                <local:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                                                                <local:ResizeThumb Width="3" Cursor="SizeWE" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                                                                <local:ResizeThumb Height="3" Cursor="SizeNS" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                                                                <local:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNWSE" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                                                <local:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNESW" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                                                <local:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNESW" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                                                                <local:ResizeThumb Width="7" Height="7" Margin="-2" Cursor="SizeNWSE" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                                                            </Grid>
                                                            <Grid IsHitTestVisible="False" Opacity="1" Margin="0">
                                                                <Grid.Resources>
                                                                    <Style TargetType="{x:Type Ellipse}">
                                                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                                                        <Setter Property="Stroke" Value="#FFC8C8C8" />
                                                                        <Setter Property="StrokeThickness" Value=".5" />
                                                                        <Setter Property="Width" Value="3" />
                                                                        <Setter Property="Height" Value="3" />
                                                                        <Setter Property="Margin" Value="-2" />
                                                                        <Setter Property="Fill" Value="White" />
                                                                    </Style>
                                                                </Grid.Resources>
                                                                <Rectangle SnapsToDevicePixels="True" StrokeThickness="0.8" Margin="0" Stroke="White"  StrokeDashArray="4 4">
                                                                    <Rectangle.Fill>
                                                                        <SolidColorBrush Color="White" Opacity="0.2"></SolidColorBrush>
                                                                    </Rectangle.Fill>
                                                                </Rectangle>
                                                                <!--<Ellipse  HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                                <Ellipse  HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                                                <Ellipse HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                                                <Ellipse  HorizontalAlignment="Right" VerticalAlignment="Bottom"/>-->
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Control.Style>
                                </Control>
                                <!--<Grid x:Name="sizeInfo" SnapsToDevicePixels="True">
                                    <Path Stroke="Red" StrokeThickness="1" Height="10" VerticalAlignment="Bottom" Margin="-2,0,-2,-15" Stretch="Fill" Data="M0,0 0,10 M 0,5 100,5 M 100,0 100,10"/>
                                    <TextBlock Text="{Binding Width}" Background="White" Padding="3,0,3,0" Foreground="Red" Margin="0,0,0,-18" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                    <Path Stroke="Red" StrokeThickness="1" Width="10" HorizontalAlignment="Right" Margin="0,-2,-15,-2" Stretch="Fill" Data="M5,0 5,100 M 0,0 10,0 M 0,100 10,100"/>
                                    <TextBlock Text="{Binding Height}" Background="White" Foreground="Red" Padding="3,0,3,0" Margin="0,0,-18,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="90" CenterX="1" CenterY="0.5"/>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </Grid>-->
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Grid>
                            <!--<ControlTemplate.Triggers>
                                <Trigger  Property="IsMouseOver" Value="True">
                                    <Setter TargetName="sizeInfo" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsMouseOver" Value="False">
                                    <Setter TargetName="sizeInfo" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <!--<ColumnDefinition Width="auto"/>-->
            <!--<ColumnDefinition Width="*"/>-->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Margin="15" Grid.Column="0">
                <StackPanel VerticalAlignment="Top">
                    <Grid  HorizontalAlignment="Right" Margin="0,0,0,15">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentDevice.IsUnionMode}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <ItemsControl ItemsSource="{Binding CurrentDevice.AvailableOutputs}" Height="0" Margin="15,0"/>
                        <ComboBox ItemContainerStyle="{DynamicResource _ComboboxItemStyle}"  HorizontalAlignment="Stretch" SelectedIndex="{Binding CurrentDevice.SelectedOutput}"    ItemsSource="{Binding CurrentDevice.AvailableOutputs}"  Style="{DynamicResource ComboBoxBaseStyle}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding OutputName}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <Button Grid.Column="0" hc:IconElement.Geometry="{DynamicResource WindowRestoreGeometry }" Margin="0,0,0,15" HorizontalAlignment="Stretch"  Command="{Binding ResetDefaultAspectRatioCommand}"  Style="{DynamicResource ButtonDefault}" Content="Default Aspect Ratio" CommandParameter="PreviousOutput"/>
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentDevice.IsUnionMode}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Button Grid.Column="0" hc:IconElement.Geometry="{DynamicResource setall }" Margin="0,0,0,15" HorizontalAlignment="Stretch"  Command="{Binding SetAllOutputRectangleSizeCommand}"  Style="{DynamicResource ButtonDefault}" Content="Set All Output" CommandParameter="setall"/>
                    </Grid>
                   
                </StackPanel>

            </Grid>
            <Viewbox Grid.Column="1"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" >
                <Canvas  Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Border BorderThickness="1" BorderBrush="{StaticResource PrimaryBrush}">
                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <!--<Setter Property="Source" Value="{Binding ShaderBitmap}" />-->
                                    <Style.Triggers>
                                        <DataTrigger Value="1" Binding="{Binding CurrentOutput.OutputSelectedMode}">
                                            <Setter Property="Source" Value="{Binding GreyBitmap}"/>
                                        </DataTrigger>
                                        <DataTrigger Value="4" Binding="{Binding CurrentOutput.OutputSelectedMode}">
                                            <Setter Property="Source" Value="{Binding GifxelationBitmap}"/>
                                        </DataTrigger>
                                        <DataTrigger Value="0" Binding="{Binding CurrentOutput.OutputSelectedMode}">
                                            <Setter Property="Source" Value="{Binding ShaderBitmap}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <!--<Rectangle Stroke="White" StrokeThickness="1" Canvas.Left="{Binding DeviceRectX}" Canvas.Top="{Binding DeviceRectY}" Width="{Binding DeviceRectWidth}" Height="{Binding DeviceRectHeight}">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="White" Opacity="0.2"></SolidColorBrush>
                    </Rectangle.Fill>
                </Rectangle>-->
                    </Border>
                    <Grid Canvas.Left="{Binding CurrentOutput.OutputRectangle.Left}" Canvas.Top="{Binding CurrentOutput.OutputRectangle.Top}" Width="{Binding CurrentOutput.OutputRectangle.Width}" Height="{Binding CurrentOutput.OutputRectangle.Height}">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentDevice.IsUnionMode}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            </Grid.Style>
                        <Viewbox>

                            <Grid>
                                <Rectangle Stroke="{DynamicResource DangerBrush}" StrokeThickness="1" Fill="Black" Opacity="0.2" Width="{Binding CurrentOutput.OutputRectangle.Width}"  Height="{Binding CurrentOutput.OutputRectangle.Height}"/>
                            </Grid>



                        </Viewbox>
                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock  Text="{Binding CurrentOutput.OutputName}"/>
                        </Viewbox>

                    </Grid>
                    <ItemsControl ItemsSource="{Binding CurrentDevice.AvailableOutputs}">
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentDevice.IsUnionMode}" Value="true">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas>

                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding OutputRectangle.Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding OutputRectangle.Top}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="{Binding OutputRectangle.Width}" Height="{Binding OutputRectangle.Height}">
                                    <Viewbox>

                                        <Grid>
                                            <Rectangle Stroke="{DynamicResource DangerBrush}" StrokeThickness="1" Fill="Black" Opacity="0.2" Width="{Binding OutputRectangle.Width}" Height="{Binding OutputRectangle.Height}"/>
                                        </Grid>



                                    </Viewbox>
                                    <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock  Text="{Binding OutputName}"/>
                                    </Viewbox>

                                </Grid>



                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ContentControl x:Name="adjustingRect" Style="{StaticResource DragDropResize}" Width="{Binding AdjustingRectangleWidth,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="{Binding AdjustingRectangleHeight ,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Canvas.Left="{Binding AdjustingRectangleLeft,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Canvas.Top="{Binding AdjustingRectangleTop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                </Canvas>

            </Viewbox>
        </Grid>


        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Right" Grid.Column="2" Orientation="Horizontal">

                <Button Click="Button_Click_Cancel" Margin="15" Content="Cancel"  Style="{DynamicResource ButtonPrimary}" Background="Transparent" />
                <Button Click="Button_Click_1"   CommandParameter="apply" Margin="15" Content="Apply"  Style="{DynamicResource ButtonPrimary}"/>
                <Button Click="Button_Click"   CommandParameter="apply" Margin="15" Content="Done"  Style="{DynamicResource ButtonPrimary}"/>
            </StackPanel>
        </Grid>


    </Grid>
</hc:Window>