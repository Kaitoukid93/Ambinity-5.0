<UserControl x:Class="adrilight.View.VerticalMenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:properties="clr-namespace:adrilight_shared.Properties;assembly=adrilight_shared"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewmodel:VerticalMenuControlViewModel}"
             Background="{StaticResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="primaryBackgroundBrush"
                             Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                             Opacity="0.15" />
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow"
                              BlurRadius="10"
                              RenderingBias="Quality"
                              ShadowDepth="1"
                              Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow"
                              BlurRadius="10"
                              RenderingBias="Quality"
                              ShadowDepth="1"
                              Color="{Binding Color, Source={StaticResource DarkMaskBrush}}" />
            <Style x:Key="_listBoxControlModeStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="2"
                                    Width="64"
                                    Height="60"
                                    Background="Transparent"
                                    BorderBrush="{DynamicResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource primaryBackgroundBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}" />-->

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource primaryBackgroundBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}" />-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}" />-->
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource SecondaryRegionBrush}" />
                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}" />-->
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}" />-->

                <Setter Property="Foreground"
                        Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Grid.Column="0">
        <Border Effect="{DynamicResource EffectShadow1}"
                CornerRadius="4"
                VerticalAlignment="Top"
                Height="auto"
                Margin="10,0,0,10"
                Background="Transparent">
            <Grid>
                <ListBox ItemsSource="{Binding Items}"
                         SelectedIndex="{Binding SelectedIndex}"
                         VerticalAlignment="Top"
                         ItemContainerStyle="{DynamicResource _listBoxControlModeStyle}"
                         Background="Transparent"
                         BorderThickness="0"
                         Margin="0,0,0,2"
                         Style="{DynamicResource WrapPanelVerticalListBox}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Path x:Name="icon"
                                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                          Stretch="Uniform"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                          Width="22"
                                          ToolTip="{Binding Description}"
                                          Height="22">
                                    </Path>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <TextBlock x:Name="text"
                                               FontStretch="Condensed"
                                               FontSize="10"
                                               Margin="5"
                                               Style="{DynamicResource TextBlockDefault}"
                                               Text="{Binding Name,Mode=TwoWay}" />
                                </Grid>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                             Value="True">
                                    <Setter TargetName="text"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                    <Setter TargetName="icon"
                                            Property="Margin"
                                            Value="10" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                             Value="False">
                                    <Setter TargetName="text"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="icon"
                                            Property="Margin"
                                            Value="10,10,10,0" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</UserControl>