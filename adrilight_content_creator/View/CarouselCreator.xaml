<UserControl x:Class="adrilight_content_creator.View.CarouselCreator"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
           mc:Ignorable="d"
           xmlns:view ="clr-namespace:adrilight_content_creator.View"
           x:Name="window"
           xmlns:dataVisualizer ="clr-namespace:adrilight_shared.Models.DataVisualizer;assembly=adrilight_shared"
           xmlns:devices ="clr-namespace:adrilight_shared.Models.Device;assembly=adrilight_shared"
           xmlns:zone ="clr-namespace:adrilight_shared.Models.Device.Zone;assembly=adrilight_shared"
           Background="{DynamicResource RegionBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
            <converters:Inverseboolvisibility x:Key="InverseBoolToVisConverter"/>
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource MainContentBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" 
                                 BorderBrush="{TemplateBinding BorderBrush}" 
                                 Margin="2" CornerRadius="9" 
                                 BorderThickness="{TemplateBinding BorderThickness}" 
                                 Background="{TemplateBinding Background}" 
                                 Padding="{TemplateBinding Padding}"
                                 Effect="{DynamicResource EffectShadow1}"
                                 SnapsToDevicePixels="true">
                                <ContentPresenter 
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HoverBrush}"/>
                                </MultiTrigger>


                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="6"/>-->
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="_listBoxGeneralModeSelectionStyle" TargetType="ListViewItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border CornerRadius="4" Name="_Border"
                             Padding="0"
                             Margin="5,5,5,0"
                             Effect="{DynamicResource EffectShadow1}"
                             Background="Transparent"   
                             BorderBrush="{StaticResource DarkMaskBrush}"
                             BorderThickness="0"
                             SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource ButtonHoverBrush }"/>



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource ButtonHoverBrush }"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource ButtonHoverBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <DataTemplate x:Key="_deviceCardListViewTemplate" DataType="{x:Type devices:DeviceSettings}">
                <Grid>
                    <Border Width="{Binding DashboardWidth}" 
                         Height="{Binding DashboardHeight}"
                         Background="Transparent"
                         CornerRadius="7">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                         Command="{Binding Path=DataContext.SelectCardCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DeviceExporterView}}}"
                                         CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="20,10,0,20" HorizontalAlignment="Left" Text="{Binding DeviceName}" 
                                                FontWeight="SemiBold"
                                                Style="{StaticResource TextBlockTitle}"/>
                                <ToggleButton Grid.Column="1"
                                     IsChecked="{Binding IsEnabled}" 
                                     BorderThickness="0"                                     
                                     Margin="15" 
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top"                                      
                                     Grid.Row="0"
                                     Style="{DynamicResource ToggleButtonSwitchSmallerElipse}">
                                </ToggleButton>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Image Margin="10"  Source="{Binding DeviceThumbnail}" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Margin="10" Grid.Row="1">
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,0,5,0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding OutputPort}" >
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Path Width="25" Height="25" Margin="5,5" Data="{DynamicResource connection}" Stretch="Uniform" >
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill" Value="{DynamicResource PrimaryBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTransferActive}" Value="False">
                                                        <Setter Property="Fill" Value="{DynamicResource SecondaryTextBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid Margin="25" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Image Source="{Binding SelectedCarouselImage}"/>
                <Grid Margin="40" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left"  Text="{Binding CarouselName}" Foreground="#E5E5E5" FontWeight="SemiBold" FontSize="32" Style="{DynamicResource TextBlockTitle}"/>
                        <TextBlock  Text="{Binding CarouselDescription}" FontSize="15" HorizontalAlignment="Left" FontWeight="SemiBold" Style="{DynamicResource TextBlockDefaultSecLight}"/>
                        <Button Command="{Binding OpenURLCommand}" CommandParameter="{Binding SelectedCarouselURL}" Margin="0,30" HorizontalAlignment="Left" BorderThickness="0" Effect="{DynamicResource EffectShadow1}"  hc:IconElement.Geometry="{DynamicResource showMoreRight}" hc:IconElement.Height="10" Content="Tìm hiểu thêm"/>
                    </StackPanel>
                   
                </Grid>
                
            </Grid>
        </Grid>
        <Grid  Grid.Column="1">
            <Border HorizontalAlignment="Right"  Margin="10,25,0,0" CornerRadius="4">
                <hc:ScrollViewer IsInertiaEnabled="True" hc:ScrollViewerAttach.AutoHide="False">


                    <StackPanel>
                        <Border Background="{DynamicResource MainContentBackgroundBrush}" CornerRadius="7">


                            <StackPanel Margin="5">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <GroupBox VerticalAlignment="Center" hc:TitleElement.TitleWidth="150" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                        <GroupBox.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="SemiBold" Text="NAME"/>
                                            </DataTemplate>
                                        </GroupBox.HeaderTemplate>

                                        <TextBox Text="{Binding CarouselName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True"/>



                                    </GroupBox>
                                    <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Chọn tên hiển thị của thẻ"/>
                                </Grid>
                                <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                </hc:Divider>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <GroupBox   VerticalAlignment="Center" hc:TitleElement.TitleWidth="150" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                        <GroupBox.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="SemiBold" Text="DESCRIPTION"/>
                                            </DataTemplate>
                                        </GroupBox.HeaderTemplate>

                                        <TextBox Text="{Binding CarouselDescription,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True"/>


                                    </GroupBox>
                                    <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Mô tả"/>
                                </Grid>
                                <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                </hc:Divider>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <GroupBox   VerticalAlignment="Center" hc:TitleElement.TitleWidth="150" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                        <GroupBox.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="SemiBold" Text="URL"/>
                                            </DataTemplate>
                                        </GroupBox.HeaderTemplate>
                                        <TextBox Text="{Binding SelectedCarouselURL,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" AcceptsReturn="True"/>
                                    </GroupBox>
                                    <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Mô tả"/>
                                </Grid>
                                <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                                </hc:Divider>
                               
                          
                                <Grid Margin="0,0,0,10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <GroupBox   VerticalAlignment="Center" hc:TitleElement.TitleWidth="100" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                        <GroupBox.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontWeight="SemiBold" Text="IMAGE"/>
                                            </DataTemplate>
                                        </GroupBox.HeaderTemplate>
                                        <StackPanel Orientation="Horizontal">
                                                <TextBox Width="200" Text="{Binding SelectedCarouselImage}"/>
                                                <Button Command="{Binding OpenCarouselImageSelectorCommand}" Margin="10,0" hc:IconElement.Geometry="{DynamicResource addImage}"/>
                                        </StackPanel>
                                    </GroupBox>
                                    <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Ảnh hiển thị ở Dashboard"/>
                                </Grid>
                                <!--<Button Command="{Binding ApplyDeviceActualDimensionCommand}" Background="{DynamicResource PrimaryBrush}" Margin="5" HorizontalAlignment="Right" Content="Apply" Style="{DynamicResource _mediumProfileDefaultButton}">

                </Button>-->

                            </StackPanel>
                        </Border>

                    </StackPanel>
                </hc:ScrollViewer>
            </Border>
        </Grid>
        <Grid HorizontalAlignment="Right" Grid.Column="1" Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button  Command="{Binding SaveCarouselToFileCommand}" CommandParameter="save" Margin="10" Style="{StaticResource ButtonPrimary}" hc:IconElement.Geometry="{DynamicResource export}" Grid.Column="2" Content="Export"/>
        </Grid>
    </Grid>
</UserControl>