<UserControl x:Class="adrilight.View.PlayListCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:store="clr-namespace:adrilight_shared.Models.Store;assembly=adrilight_shared"
             xmlns:enums="clr-namespace:adrilight_shared.Enums;assembly=adrilight_shared"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:model="clr-namespace:adrilight_shared.Models;assembly=adrilight_shared"
             xmlns:lighting="clr-namespace:adrilight_shared.Models.Lighting;assembly=adrilight_shared"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance model:DataCollection, IsDesignTimeCreatable=True}"
             Background="{StaticResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <DataTemplate x:Key="_lightingProfilePlayListTemplate"
                                  DataType="{x:Type lighting:LightingProfilePlaylist}">
                        <Button Width="150"
                                Height="200"
                                Padding="0"
                                Margin="5"
                                Command="{Binding Path=DataContext.GotoCurrentItemDetailViewCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                CommandParameter="{Binding .}"
                                hc:BorderElement.CornerRadius="7"
                                Style="{DynamicResource _mediumProfileDefaultButton}"
                                BorderThickness="0"
                                Background="{DynamicResource MainContentBackgroundBrush}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Path HorizontalAlignment="Center"
                                          Stretch="Uniform"
                                          Width="50"
                                          Height="50"
                                          Data="{StaticResource profilePlaylist}"
                                          Fill="{DynamicResource PrimaryTextBrush}" />
                                </Grid>
                                <Grid>
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Button hc:BorderElement.CornerRadius="5"
                                            BorderThickness="0"
                                            ToolTip="Play"
                                            Background="{DynamicResource DarkOpacityBrush}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            Margin="10"
                                            hc:IconElement.Geometry="{DynamicResource playComposition}" />
                                </Grid>
                                <CheckBox IsChecked="{Binding IsChecked}"
                                          Command="{Binding Path=DataContext.ItemCheckUncheckCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                          Margin="5"
                                          BorderBrush="{DynamicResource SecondaryTextBrush}"
                                          BorderThickness="1"
                                          Grid.Column="1"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox"
                                               BasedOn="{StaticResource CheckBoxBaseStyle}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding IsChecked}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                    <Setter Property="Background"
                                                            Value="{DynamicResource PrimaryBrush}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                   Value="True" />
                                                    </MultiDataTrigger.Conditions>

                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                                <Grid Grid.Row="1">
                                    <StackPanel>
                                        <TextBlock HorizontalAlignment="Left"
                                                   Margin="10,5,5,5"
                                                   Text="{Binding Name}"
                                                   FontWeight="SemiBold"
                                                   Style="{DynamicResource TextBlockSubTitle}" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="10,0,0,10"
                                                       Text="{Binding LightingProfiles.Items.Count}"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}" />
                                            <TextBlock Margin="5,0,0,10"
                                                       Text="profiles"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <ToggleButton Background="Transparent"
                                                  IsChecked="{Binding IsPinned}"
                                                  hc:IconElement.Width="15"
                                                  hc:IconElement.Height="15"
                                                  Padding="0"
                                                  BorderThickness="0"
                                                  Width="25"
                                                  Height="25"
                                                  Margin="5"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Bottom"
                                                  hc:IconSwitchElement.Geometry="{DynamicResource pin}"
                                                  hc:IconSwitchElement.GeometrySelected="{DynamicResource pinned}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton"
                                                   BasedOn="{StaticResource ToggleButtonIcon}">
                                                <Setter Property="Foreground"
                                                        Value="White" />
                                                <Setter Property="ToolTip"
                                                        Value="Pin to Dashboard" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsPinned}"
                                                                 Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource PrimaryBrush}" />
                                                        <Setter Property="ToolTip"
                                                                Value="Unpin from Dashboard" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                            </Grid>
                        </Button>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type model:DataCollection}"
                                  x:Key="_collectionView">
                        <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border  Margin="15,10"
                                         Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityReConverter}}"
                                         Height="50"
                                         CornerRadius="7"
                                         Background="Transparent">
                                    <Grid>

                                        <StackPanel HorizontalAlignment="Left"
                                                    Orientation="Horizontal">
                                            <Button BorderThickness="0"
                                                    Height="32"
                                                    Foreground="{DynamicResource RegionBrush}"
                                                    Command="{Binding OpenAddNewDialogCommand}"
                                                    CommandParameter=""
                                                    Style="{DynamicResource ButtonPrimary}"
                                                    hc:IconElement.Geometry="{DynamicResource addTo}"
                                                    Margin="0"
                                                    hc:IconElement.Height="20"
                                                    Content="New playlist" />
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <hc:TransitioningContentControl Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                                TransitionMode="Top2BottomWithFade">
                                    <Border  Margin="15,10"
                                             Height="50"
                                             CornerRadius="7"
                                             Effect="{DynamicResource EffectShadow1}"
                                             Background="{DynamicResource MainContentBackgroundBrush}">
                                        <Grid>

                                            <StackPanel HorizontalAlignment="Right"
                                                        Orientation="Horizontal">
                                                <Button BorderThickness="0"
                                                        Background="{DynamicResource SecondaryRegionBrush}"
                                                        hc:IconElement.Geometry="{DynamicResource remove}"
                                                        Margin="10,5"
                                                        Height="32"
                                                        Command="{Binding OpenDeleteDialogCommand}"
                                                        CommandParameter="delete"
                                                        hc:IconElement.Height="15"
                                                        Content="Remove" />
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </hc:TransitioningContentControl>
                                <hc:ScrollViewer Grid.Row="1"
                                                 IsInertiaEnabled="True">
                                    <ItemsControl Margin="10,10,10,10"
                                                  ItemTemplate="{DynamicResource _lightingProfilePlayListTemplate}"
                                                  ItemsSource="{Binding Items}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </hc:ScrollViewer>
                            </Grid>
                        </hc:TransitioningContentControl>
                    </DataTemplate>
                    <DataTemplate x:Key="_editorView"
                                  DataType="{x:Type model:DataCollection}">
                        <hc:TransitioningContentControl TransitionMode="Right2LeftWithFade">
                            <Grid DataContext="{Binding CurrentSelectedItem}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--header-->
                                <Grid>
                                    <Border Margin="20"
                                            Height="200"
                                            CornerRadius="10"
                                            Background="{DynamicResource MainContentBackgroundBrush}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid>
                                                <Border Width="180"
                                                        Background="{DynamicResource SecondaryRegionBrush}"
                                                        CornerRadius="4"
                                                        Margin="10">
                                                    <Path HorizontalAlignment="Center"
                                                          Stretch="Uniform"
                                                          Width="100"
                                                          Height="100"
                                                          Data="{StaticResource profilePlaylist}"
                                                          Fill="{DynamicResource PrimaryTextBrush}" />
                                                </Border>
                                            </Grid>
                                            <Grid Grid.Column="1">
                                                <StackPanel Margin="10,10">
                                                    <TextBlock HorizontalAlignment="Left"
                                                               FontSize="32"
                                                               FontWeight="SemiBold"
                                                               Style="{DynamicResource TextBlockLarge}"
                                                               MaxWidth="350"
                                                               TextTrimming="CharacterEllipsis"
                                                               Text="{Binding Name}" />
                                                    <StackPanel Margin="0,10,0,10"
                                                                Orientation="Horizontal">
                                                        <TextBlock Margin="0,0,0,10"
                                                                   FontSize="15"
                                                                   Text="{Binding LightingProfiles.Items.Count}"
                                                                   Style="{DynamicResource TextBlockDefaultSecLight}" />
                                                        <TextBlock Margin="5,0,0,10"
                                                                   Text="profiles"
                                                                   FontSize="15"
                                                                   Style="{DynamicResource TextBlockDefaultSecLight}" />
                                                    </StackPanel>
                                                    <StackPanel HorizontalAlignment="Left"
                                                                Orientation="Horizontal">
                                                        <Button BorderThickness="0"
                                                                Height="32"
                                                                Style="{DynamicResource ButtonPrimary}"
                                                                Foreground="{DynamicResource RegionBrush}"
                                                                hc:IconElement.Geometry="{DynamicResource playComposition}"
                                                                Margin="0,5,10,5"
                                                                Command="{Binding Path=DataContext.SelectItem, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                                                CommandParameter="{Binding Path=DataContext.CurrentSelectedItem, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                                                hc:IconElement.Height="15"
                                                                Content="Play all" />
                                                        <Button BorderThickness="0"
                                                                Background="{DynamicResource SecondaryRegionBrush}"
                                                                hc:IconElement.Geometry="{DynamicResource rename}"
                                                                Command="{Binding Path=DataContext.OpenRenameDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                                                CommandParameter="{Binding .}"
                                                                Margin="10,5"
                                                                Height="32"
                                                                hc:IconElement.Height="15"
                                                                Content="Rename" />
                                                        <Button BorderThickness="0"
                                                                Background="{DynamicResource SecondaryRegionBrush}"
                                                                hc:IconElement.Geometry="{DynamicResource delete}"
                                                                Margin="10,5"
                                                                Height="32"
                                                                Command="{Binding Path=DataContext.OpenDeleteDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                                                CommandParameter="delete"
                                                                hc:IconElement.Height="15"
                                                                Content="Remove" />
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal">
                                                        <ToggleButton Margin="0,15,10,5"
                                                                      IsChecked="{Binding Shuffle}"
                                                                      Height="17"
                                                                      Width="17"
                                                                      Padding="0"
                                                                      Background="Transparent"
                                                                      BorderThickness="0"
                                                                      Style="{DynamicResource ToggleButtonIcon}"
                                                                      hc:IconSwitchElement.Geometry="{DynamicResource non_Shuffle}"
                                                                      hc:IconSwitchElement.GeometrySelected="{DynamicResource shuffle}" />
                                                        <ToggleButton Margin="10,15,10,5"
                                                                      IsChecked="{Binding Repeat}"
                                                                      Height="17"
                                                                      Width="17"
                                                                      Padding="0"
                                                                      Background="Transparent"
                                                                      BorderThickness="0"
                                                                      Style="{DynamicResource ToggleButtonIcon}"
                                                                      hc:IconSwitchElement.Geometry="{DynamicResource repeat_off }"
                                                                      hc:IconSwitchElement.GeometrySelected="{DynamicResource repeat_all}" />
                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <!--list-->
                                <Grid Grid.Row="1">
                                    <hc:ScrollViewer Margin="5,5,5,100"
                                                     IsInertiaEnabled="True">
                                        <ItemsControl Margin="15"
                                                      AlternationCount="2"
                                                      ItemTemplate="{DynamicResource _profileTemplate}"
                                                      BorderThickness="0"
                                                      Background="Transparent"
                                                      ItemsSource="{Binding LightingProfiles.Items}">
                                        </ItemsControl>
                                    </hc:ScrollViewer>
                                </Grid>
                            </Grid>
                        </hc:TransitioningContentControl>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type lighting:LightingProfile}"
                                  x:Key="_profileTemplate">
                        <Border Margin="0,3,0,3"
                                CornerRadius="7">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                                     Value="0">
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), 
                                                   RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                                     Value="1">
                                            <Setter Property="Background"
                                                    Value="{DynamicResource MainContentBackgroundBrush}" />
                                            <Setter Property="Effect"
                                                    Value="{DynamicResource EffectShadow1}" />
                                        </DataTrigger>
                                        <Trigger Property="Border.IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    Value="{DynamicResource MainContentBackgroundBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <hc:Row Margin="0,0,0,0"
                                        Gutter="10">
                                    <hc:Col Layout="2,2,2,2,2">
                                        <Border Background="Transparent"
                                                Height="40"
                                                CornerRadius="4">
                                            <Grid>
                                                <Grid>
                                                    <Grid.Style>
                                                        <Style TargetType="Grid">
                                                            <Setter Property="Visibility"
                                                                    Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid,AncestorLevel=2}, Path=IsMouseOver}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>

                                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <Button Background="Transparent"
                                                            Visibility="{Binding IsPlaying,Converter={StaticResource Boolean2VisibilityReConverter}}"
                                                            hc:IconElement.Height="15"
                                                            BorderThickness="0"
                                                            Command="{Binding Path=DataContext.SelectItem, RelativeSource={RelativeSource AncestorType={x:Type local:PlayListCollectionView}}}"
                                                            CommandParameter="{Binding .}"
                                                            hc:IconElement.Geometry="{DynamicResource playOutline}" />
                                                </Grid>
                                                <Grid>
                                                    <Button Background="Transparent"
                                                            Visibility="{Binding IsPlaying,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                            hc:IconElement.Height="15"
                                                            BorderThickness="0"
                                                            Foreground="{DynamicResource PrimaryBrush}"
                                                            hc:IconElement.Geometry="{DynamicResource playComposition}" />
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </hc:Col>
                                    <hc:Col Layout="10,10,10,10,10">
                                        <Border Background="Transparent"
                                                Height="50"
                                                CornerRadius="4">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <hc:Gravatar Width="32"
                                                             Margin="0,0,10,0"
                                                             Background="Transparent"
                                                             Height="32"
                                                             Id="{Binding Name}" />
                                                <TextBlock Grid.Column="1"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Text="{Binding Name}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </Grid>
                                        </Border>
                                    </hc:Col>
                                    <hc:Col Layout="3,4,4,4,4">
                                        <Border Background="Transparent"
                                                Height="50"
                                                CornerRadius="4">
                                            <TextBlock Grid.Column="1"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding ControlMode.BasedOn}" />
                                        </Border>
                                    </hc:Col>
                                    <hc:Col  Layout="3,4,4,4,4">
                                        <Border Background="Transparent"
                                                Height="50"
                                                CornerRadius="4">
                                            <TextBlock Margin="0,0,15,0"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding Duration, StringFormat={}{0:hh':'mm':'ss}}" />
                                        </Border>
                                    </hc:Col>
                                    <hc:Col  Layout="6,4,4,4,4">
                                        <Border Background="Transparent"
                                                Height="50"
                                                CornerRadius="4">
                                            <Grid>
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Setter Property="Visibility"
                                                                Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}"
                                                                               Value="True" />
                                                                </MultiDataTrigger.Conditions>

                                                                <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                <Setter Property="Visibility"
                                                                        Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <StackPanel HorizontalAlignment="Right"
                                                            Margin="0,0,5,0"
                                                            Orientation="Horizontal">
                                                    <Button VerticalAlignment="Center"
                                                            Background="Transparent"
                                                            Padding="5"
                                                            HorizontalAlignment="Right"
                                                            hc:IconElement.Width="15"
                                                            BorderThickness="0"
                                                            hc:IconElement.Geometry="{DynamicResource moveDown}" />
                                                    <Button VerticalAlignment="Center"
                                                            Background="Transparent"
                                                            Padding="5"
                                                            HorizontalAlignment="Right"
                                                            hc:IconElement.Width="15"
                                                            BorderThickness="0"
                                                            hc:IconElement.Geometry="{DynamicResource moveUp}" />
                                                    <Button VerticalAlignment="Center"
                                                            Background="Transparent"
                                                            Padding="5"
                                                            HorizontalAlignment="Right"
                                                            hc:IconElement.Width="15"
                                                            BorderThickness="0"
                                                            hc:IconElement.Geometry="{DynamicResource DeleteFillCircleGeometry}" />
                                                </StackPanel>
                                            </Grid>

                                        </Border>
                                    </hc:Col>
                                </hc:Row>
                            </Grid>
                        </Border>


                    </DataTemplate>
                    <Style x:Key="_playListView"
                           TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentView}"
                                         Value="{x:Static model:DataViewMode.Collection}">
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource _collectionView}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentView}"
                                         Value="{x:Static model:DataViewMode.Detail}">
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource _editorView}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ContentControl Content="{Binding .,UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource _playListView}">
        </ContentControl>
    </Grid>
</UserControl>