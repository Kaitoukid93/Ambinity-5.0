<UserControl x:Class="adrilight.View.StaticColorSidePanel"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:adrilight.View"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight.Converter" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <Style x:Key="_ListBoxSolidColorCollectionStyle" TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="{DynamicResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>


                                            <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>



                                            <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>

                                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                            <Setter Property="Opacity" TargetName="_Border" Value="0.5"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                        <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu >
                                    <MenuItem  Header="Set All Outputs"
                                          Command="{Binding PlacementTarget.Tag.SetAllOutputSelectedSolidColorCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="setall"
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource selected}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem  Header="Set All Devices"
                                          Command="{Binding PlacementTarget.Tag.SetAllDeviceSelectedSolidColorCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="setall"
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource setall}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem  Header="Coppy code"
                                          Command="{Binding PlacementTarget.Tag.CoppyColorCodeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="coppy"
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource sharp}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem  Header="Delete" CommandParameter="delete"
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedSolidColorCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource delete}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    
                                </ContextMenu>

                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContextMenuService.Placement" Value="Bottom">

                        </Setter>
                    </Style>
                    <Style x:Key="_ListboxGradientColorCollectionStyle" TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="{DynamicResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>


                                            <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>



                                            <Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>

                                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                            <Setter Property="Opacity" TargetName="_Border" Value="0.5"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                        <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu >
                                    <MenuItem  Header="Set All Outputs"
                                          Command="{Binding PlacementTarget.Tag.SetAllOutputSelectedGradientColorCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="setall"
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource selected}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem  Header="Set All Devices"
                                          Command="{Binding PlacementTarget.Tag.SetAllDeviceSelectedGradientColorCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="setall"
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource setall}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                   
                                    <MenuItem  Header="Delete" CommandParameter="{Binding .}"
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedGradientCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                        <MenuItem.Icon>
                                            <Path   Data="{StaticResource delete}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>

                                </ContextMenu>

                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContextMenuService.Placement" Value="Bottom">

                        </Setter>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!--<Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <StackPanel Margin="5" Orientation="Horizontal">
                <Path Margin="5" Data="{StaticResource static}" 
          Width="30" 
          Height="30" 
          Fill="White"
          Stretch="Uniform" />
                --><!--<TextBlock  Margin="5,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Music Reactive" Style="{DynamicResource TextBlockTitleBold}"/>--><!--
            </StackPanel>


            --><!--<ComboBox hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Capture Source"  Grid.Column="1" HorizontalAlignment="Right" Margin="10"  MinWidth="100" SelectedIndex="{Binding CurrentOutput.OutputSelectedDisplay}"  ItemsSource="{Binding AvailableDisplays}" hc:InfoElement.Necessary="True"  Style="{DynamicResource ComboBoxExtend}"/>--><!--


        </Grid>-->
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentOutput.OutputStaticColorMode}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentOutput.OutputStaticColorMode}" Value="1">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>



                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Grid.Row="0" Margin="15, 15, 15, 15"  Text="CHỌN MÀU"  FontWeight="SemiBold" VerticalAlignment="Center"  HorizontalAlignment="Left"/>
                    <Grid HorizontalAlignment="Right" Margin="15" Grid.Row="1">


                        <Button CommandParameter="solid" Command="{Binding AddNewSolidColorCommand}" Content="Add New" Click="ButtonAdd_OnClick"  Style="{DynamicResource ButtonDefault}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1"  Width="100" Padding="0,0"  HorizontalAlignment="Right" hc:IconElement.Width="20" hc:IconElement.Height="20"  hc:IconElement.Geometry="{DynamicResource addnew}">

                        </Button>

                    </Grid>
                </Grid>
                
                <Grid MaxHeight="300" Grid.Row="1">
                    <hc:TransitioningContentControl Grid.Row="1">
                        <ListBox Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{DynamicResource _ListBoxSolidColorCollectionStyle }" 
                                                  
                                                  x:Name="AvailableSolidColor"
                                                  Margin="0,10,0,10"
                                                  BorderThickness="0"   
                                                  SelectedItem="{Binding SelectedSolidColor}"
                                                  Style="{DynamicResource WrapPanelHorizontalListBox}" 
                                                  ItemsPanel="{DynamicResource WrapPanelHorizontalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding AvailableSolidColors}">

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Width="40" Height="40" RadiusX="2" RadiusY="2">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding .}"/>
                                        </Rectangle.Fill>
                                        
                                    </Rectangle>
                                </DataTemplate>
                                </ListBox.ItemTemplate>
                            
                            </ListBox>
                        </hc:TransitioningContentControl>
                </Grid>
            </Grid>
        

        <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentOutput.OutputStaticColorMode}" Value="2">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>



                <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
                <TextBlock Style="{DynamicResource TextBlockDefault}" Grid.Row="0" Margin="15, 15, 15, 15"  Text="CHỌN GRADIENT" FontWeight="SemiBold"  VerticalAlignment="Center"  HorizontalAlignment="Left"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                    <Button Command="{Binding AddNewGradientCommand}"  Content="Add New" Click="ButtonAdd_OnClick"  Style="{DynamicResource ButtonDefault}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1"  Width="100" Padding="0,0" Margin="0,15,15,0" HorizontalAlignment="Right" hc:IconElement.Width="20" hc:IconElement.Height="20"  hc:IconElement.Geometry="{DynamicResource addnew}">

                    </Button>
                    
                </Grid>


                <Grid MinHeight="300" Grid.Row="1">
                    <hc:TransitioningContentControl Grid.Row="1">
                        <ListBox Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{DynamicResource _ListboxGradientColorCollectionStyle}" 
                                                  Height="180"
                                                  x:Name="AvailableMPalette"
                                                  Margin="0,10,0,10"
                                                  BorderThickness="0"   
                                                  SelectedIndex="{Binding CurrentOutput.OutputStaticColorGradientMode}"
                                                  SelectedItem="{Binding CurrentSelectedGradient}"
                                                  Style="{DynamicResource WrapPanelHorizontalListBox}" 
                                                  ItemsPanel="{DynamicResource WrapPanelHorizontalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding AvailableGradient}">

                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="data:CardModel">
                                    <hc:Card BorderBrush="Transparent" ToolTip="{Binding Description}" hc:BorderElement.CornerRadius="2"  MaxWidth="120"  Effect="{StaticResource EffectShadow2}"  Footer="{Binding .}">
                                        <Border Width="100" Height="100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="2,2,2,2">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,1" EndPoint = "1,0">
                                                    <GradientStop Color="{Binding StartColor}" Offset="0.0" />
                                                    <GradientStop Color="{Binding StopColor}" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Border.Background>


                                        </Border>

                                        <hc:Card.FooterTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal" Margin="10">
                                                    <!--<TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource TextBlockDefault}" Text="{Binding DataContext.Name,RelativeSource={RelativeSource AncestorType=hc:Card}}" HorizontalAlignment="Left"/>-->
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle HorizontalAlignment="Left" Margin="0,0,10,0" Width="20" Height="20" RadiusX="4" RadiusY="4">
                                                            <Rectangle.Fill>
                                                                <SolidColorBrush Color="{Binding StartColor}"/>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <TextBlock Grid.Column="1"  TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource TextBlockDefault}" Text="{Binding StartColor,Converter={StaticResource Color2HexStringConverter}}" HorizontalAlignment="Left"/>
                                                    </Grid>

                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle HorizontalAlignment="Left" Margin="0,0,10,0" Width="20" Height="20" RadiusX="4" RadiusY="4">
                                                            <Rectangle.Fill>
                                                                <SolidColorBrush Color="{Binding StopColor}"/>

                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <TextBlock Grid.Column="1"   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource TextBlockDefault}" Text="{Binding StopColor,Converter={StaticResource Color2HexStringConverter}}" HorizontalAlignment="Left"/>
                                                    </Grid>


                                                </StackPanel>
                                            </DataTemplate>
                                        </hc:Card.FooterTemplate>


                                    </hc:Card>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                        </ListBox>
                    </hc:TransitioningContentControl>
                </Grid>
           
        </Grid>
        </StackPanel>

    </Grid>
    
</UserControl>
