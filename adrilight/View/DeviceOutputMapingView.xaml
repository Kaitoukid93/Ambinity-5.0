<UserControl x:Class="adrilight.View.DeviceOutputMapingView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter" 
           xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:behaviors="clr-namespace:adrilight.Helpers.Behaviors"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:local ="clr-namespace:adrilight"
           xmlns:view="clr-namespace:adrilight.View"
           xmlns:spot ="clr-namespace:adrilight.Spots"
           xmlns:settings ="clr-namespace:adrilight.Settings"
           xmlns:lottie="clr-namespace:LottieSharp;assembly=LottieSharp"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}">



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <converters:StaticResourceConverter x:Key="staticResourceConverter"/>
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <SolidColorBrush x:Key="primaryBackgroundBrush" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.5" />
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource SecondaryBorderBrush}" />

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </UserControl.Resources>



    <!--<Grid Grid.Row="0">
            <ToolBarTray IsLocked="True" VerticalAlignment="Center">
                <ToolBar  Padding="6" Header="View">
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <CheckBox IsChecked="{Binding ShowAllOutputPID}" Content="Hiện tất cả đầu ra"  Margin="10,0,0,0"/>
                    <CheckBox IsChecked="{Binding ShowAllDevicePID}" Content="Hiện tất cả thiết bị"  Margin="10,0,5,0"/>
                </ToolBar>
                <ToolBar Padding="6" Header="ID Settings">
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <hc:NumericUpDown Margin="5,0" Value="{Binding CountVID}" x:Name="vidBox" DecimalPlaces="0" ShowClearButton="True"  hc:InfoElement.TitleWidth="30"  hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="{Binding CurrentIDType}" Style="{StaticResource NumericUpDownPlus}" hc:InfoElement.Necessary="False"/>
                    <hc:NumericUpDown Margin="5,0" Value="{Binding GapVID}" x:Name="gapBox" DecimalPlaces="0" ShowClearButton="True"  hc:InfoElement.TitleWidth="auto"  hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Space"  hc:InfoElement.Necessary="False">
                        <hc:NumericUpDown.Style>
                            <Style TargetType="hc:NumericUpDown" BasedOn="{StaticResource NumericUpDownPlus}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentIDType}" Value="CID">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </hc:NumericUpDown.Style>
                    </hc:NumericUpDown>

                    <Separator Margin="10,0" MaxHeight="25"/>
                    <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource DeleteFillCircleGeometry}" Command="{Binding ResetCountCommand}" CommandParameter="ResetVID" ToolTip="Xóa tất cả VID hiện tại" Content="Xóa"/>
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource info}" Command="{Binding OpenTutorialCommand}" CommandParameter="ResetVID" ToolTip="Hướng dẫn sử dụng VID Editor" Content="Hướng dẫn"/>
                </ToolBar>

            </ToolBarTray>
        </Grid>-->
    <!--<Grid>
        <richCanvas:RichItemsControl
             ItemsSource="{Binding OOTBItems}"
                 GridStyle="{StaticResource GridStyle}"
                EnableSnapping="False"
                MaxScale="10"
                GridSpacing="24"
                EnableGrid="False"
                Scrolling="OnScrolling"
                CanSelectMultipleItems="False"
                RealTimeDraggingEnabled="False"
                RealTimeSelectionEnabled="False"
                DisableAutoPanning="True"
                Background="Transparent"               
                DisableScroll="True"
                ZoomKey="Z"
               SelectedItem="{Binding OOTBSelectedItem,Mode=TwoWay}"
                SelectedItems="{Binding OOTBSelectedItems}" 
              
               >


            <richCanvas:RichItemsControl.Resources>
                <DataTemplate DataType="{x:Type local:OutputSettings}">
                    <Grid>
                        <Grid>
                            <Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" Source="{Binding SlaveDevice.Thumbnail}">
                                
                            </Image>
                        </Grid>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type settings:ImageVisual}">
                    <Image IsHitTestVisible="False" Source="{Binding ImagePath}"
                           Stretch="Uniform" />
                </DataTemplate>
                <DataTemplate x:Key="SelectedAdornerTemplate">
                    <Border BorderBrush="{DynamicResource SecondaryBorderBrush}"
                            BorderThickness="1" CornerRadius="4"
                            Background="{DynamicResource SecondaryRegionBrush}">
                        <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} : {1}">
                                    <Binding Path="Left" />
                                    <Binding Path="Top" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Border>
                </DataTemplate>

                <DataTemplate x:Key="HoverAdornerTemplate">
                    <Border BorderBrush="{DynamicResource PrimaryBrush}"
                            BorderThickness="3">
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type settings:Border}">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Screen" Style="{DynamicResource TextBlockLarge}"/>
                            <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="at" Style="{DynamicResource TextBlockLarge}"/>
                            <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} x {1}">
                                        <Binding Path="Width" />
                                        <Binding Path="Height" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </StackPanel>

                        <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                        </Rectangle>
                    </Grid>

                </DataTemplate>
                <DataTemplate DataType="{x:Type settings:ScreenBound}">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Screen" Style="{DynamicResource TextBlockLarge}"/>
                            <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="at" Style="{DynamicResource TextBlockLarge}"/>
                            <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} x {1}">
                                        <Binding Path="Width" />
                                        <Binding Path="Height" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </StackPanel>

                        <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                        </Rectangle>
                    </Grid>

                </DataTemplate>

            </richCanvas:RichItemsControl.Resources>

            <richCanvas:RichItemsControl.ItemContainerStyle>
                <Style TargetType="richCanvas:RichItemContainer">

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type richCanvas:RichItemContainer}">
                                <Border x:Name="Bd" 
                                            Padding="0"
                                            SnapsToDevicePixels="True">
                                    <ContentPresenter 
                                            HorizontalAlignment="Center" 
                                            SnapsToDevicePixels="True" 
                                            VerticalAlignment="Center">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.OpenSlaveDeviceSelectorCommand,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceOutputMapingView}}}" CommandParameter="{Binding .}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ContentPresenter>
                                    
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        --><!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                        <!--<Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryTextBrush}"/>--><!--
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        --><!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                        <!--<Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>--><!--
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsDraggable"
                            Value="{Binding IsBorder,Converter={StaticResource booltoVreconv}}" />
                    <Setter Property="helpers:EventToCommand.Event"
                            Value="LeftChanged, TopChanged" />
                    <Setter Property="helpers:EventToCommand.Command">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource CommandsToListConverter}">
                                <Binding Path="LeftChangedCommand" />
                                <Binding Path="TopChangedCommand" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="helpers:EventToCommand.CanExecute"
                            Value="{Binding IsSelected}" />
                    <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                    <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />
                    --><!--<Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsSelected}" />--><!--
                    <Setter Property="Top"
                            Value="{Binding GetRect.Top}" />

                    <Setter Property="Left"
                            Value="{Binding GetRect.Left}" />

                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                    <Setter Property="Width"
                            Value="{Binding Width, Mode=TwoWay}" />

                    <Setter Property="Height"
                            Value="{Binding Height, Mode=TwoWay}" />

                    <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                    <Setter Property="IsDraggable"
                            Value="False" />

                    <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                    <Setter Property="ShouldBringIntoView"
                            Value="False" />

                    <Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />

                       
    
                    <Style.Triggers>
                        <Trigger Property="IsDraggable" Value="True">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Scale"
                                          Command="{Binding OpenRectangleScaleCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource scale}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem Header="Căn lề trái"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource leftAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Căn lề trên"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource topAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Xếp ngang"
                                          Command="{Binding SpreadItemRightHorizontalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Xếp dọc"
                                          Command="{Binding SpreadItemDownVerticalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Khóa"
                                          Command="{Binding LockSelectedItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource lock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Xem chi tiết"
                                          Command="{Binding AddSelectedItemToGroupCommand}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource info}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>

                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity">
                                <Setter.Value>
                                    1.0
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Opacity">
                                <Setter.Value>
                                    1.0
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        --><!--<Trigger Property="IsDraggable" Value="False">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                        <MenuItem Header="Mở khóa"
                                          Command="{Binding UnlockSelectedItemCommand}" CommandParameter="SUR" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Trigger>--><!--
                    </Style.Triggers>
                </Style>
            </richCanvas:RichItemsControl.ItemContainerStyle>
        </richCanvas:RichItemsControl>
    </Grid>-->

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <ItemsControl ItemsSource="{Binding CurrentDevice.AvailableLightingOutputs}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid>
                        
                    </UniformGrid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>

                        <Border x:Name="border" CornerRadius="4" Margin="5">
                            <Border.Style>
                                <Style>
                                    <Setter Property="Border.Background" Value="{DynamicResource MainContentBackgroundBrush}"/>
                                    <Style.Triggers>
                                        <Trigger Property="Border.IsMouseOver" Value="True">
                                            <Setter Property="Border.Background" Value="{DynamicResource HoverBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="2" Margin="10" Style="{DynamicResource TextBlockSubTitle}" FontWeight="SemiBold" Text="{Binding SlaveDevice.Name}"/>
                                <Image Grid.Row="1" Margin="10" Source="{Binding SlaveDevice.Thumbnail}" RenderOptions.BitmapScalingMode="Fant" Stretch="Uniform"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Padding="0" BorderBrush="{DynamicResource SecondaryBorderBrush}" BorderThickness="2" VerticalAlignment="Top" Margin="5" CornerRadius="2" Width="32" Height="32" HorizontalAlignment="Left" Background="Transparent">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource TextBlockSubTitle}" FontWeight="SemiBold"  Text="{Binding DisplayOutputID}"/>
                                    </Border>

                                    <StackPanel Grid.Column="1" Margin="5" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                                        <!--<Button ToolTip="Chọn thiết bị cắm vào" Command="{Binding DataContext.OpenSlaveDeviceSelectorCommand,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceOutputMapingView}}}" CommandParameter="{Binding .}" Margin="5"  Width="20" Background="Transparent" Height="20" Style="{DynamicResource _defaultIconButtonSmall}" hc:IconElement.Geometry="{DynamicResource edit}"/>-->
                                        <ToggleButton ToolTip="Tắt nút này nếu bạn không cắm gì cả" IsChecked="{Binding IsEnabled}" Style="{DynamicResource ToggleButtonSwitchSmallerElipse}"/>
                                    </StackPanel>
                                </Grid>
                                <Button Grid.Row="1" Command="{Binding DataContext.OpenSlaveDeviceSelectorCommand,RelativeSource={RelativeSource AncestorType={x:Type view:DeviceOutputMapingView}}}" CommandParameter="{Binding .}" Padding="0" Background="Transparent" BorderThickness="0">
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefaultPrimary}">
                                                <Setter Property="Text" Value=" "/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border,AncestorLevel=2}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Text" Value="Chọn thiết bị khác" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Button>
                               
                            </Grid>
                            

                        </Border>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Grid Width="300" Grid.Column="1">
            <Image RenderOptions.BitmapScalingMode="Fant" Margin="20" Stretch="Uniform" Source="{Binding CurrentDevice.DeviceOutputMap}"/>
        </Grid>
    </Grid>
</UserControl>