<UserControl x:Class="adrilight.View.DeviceCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:store="clr-namespace:adrilight_shared.Models.Store;assembly=adrilight_shared"
             xmlns:enums="clr-namespace:adrilight_shared.Enums;assembly=adrilight_shared"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:device="clr-namespace:adrilight_shared.Models.Device;assembly=adrilight_shared"
             mc:Ignorable="d"
             xmlns:model="clr-namespace:adrilight_shared.Models;assembly=adrilight_shared"
             d:DataContext="{d:DesignInstance model:DataCollection, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <DataTemplate x:Key="_deviceCardTemplate"
                                  DataType="{x:Type device:DeviceSettings}">
                        <Button Width="300"
                                Height="100"
                                Padding="0"
                                Margin="5"
                                hc:BorderElement.CornerRadius="7"
                                Style="{DynamicResource _mediumProfileDefaultButton}"
                                Command="{Binding Path=DataContext.ShowLoadingScreenCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DeviceCollectionView}}}"
                                CommandParameter="{Binding .}"
                                BorderThickness="0"
                                Background="{DynamicResource MainContentBackgroundBrush}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Width="90"
                                        CornerRadius="4"
                                        Margin="5"
                                        Background="{DynamicResource SecondaryRegionBrush}">
                                    <Image Margin="10"
                                           Source="{Binding DeviceThumbnail}"
                                           RenderOptions.BitmapScalingMode="HighQuality"
                                           Stretch="Uniform" />

                                </Border>
                                <Grid Grid.Column="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Vertical">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock HorizontalAlignment="Left"
                                                           Text="{Binding DeviceName}"
                                                           Grid.Column="0"
                                                           Margin="5"
                                                           Style="{DynamicResource TextBlockSubTitle}"
                                                           FontWeight="SemiBold"
                                                           TextTrimming="CharacterEllipsis" />
                                                <CheckBox IsChecked="{Binding IsChecked}"
                                                          Command="{Binding Path=DataContext.ItemCheckUncheckCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DeviceCollectionView}}}"
                                                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                          Margin="5"
                                                          BorderBrush="{DynamicResource SecondaryTextBrush}"
                                                          BorderThickness="1"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Top">
                                                    <CheckBox.Style>
                                                        <Style TargetType="CheckBox"
                                                               BasedOn="{StaticResource CheckBoxBaseStyle}">
                                                            <Setter Property="Visibility"
                                                                    Value="Collapsed" />
                                                            <Setter Property="Background"
                                                                    Value="Transparent" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsChecked}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>

                                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                    <Setter Property="Background"
                                                                            Value="{DynamicResource PrimaryBrush}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>

                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>

                                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </CheckBox.Style>
                                                </CheckBox>
                                            </Grid>
                                            <Border Margin="5"
                                                    HorizontalAlignment="Left"
                                                    Background="{DynamicResource SecondaryRegionBrush}"
                                                    CornerRadius="2">
                                                <TextBlock Text="{Binding DeviceType.Type}"
                                                           HorizontalAlignment="Left"
                                                           Margin="5,2"
                                                           Style="{DynamicResource TextBlockDefaultSecLight}"
                                                           FontWeight="SemiBold" />
                                            </Border>

                                        </StackPanel>
                                        <Grid Grid.Row="1">
                                            <Grid>
                                                <StackPanel HorizontalAlignment="Right"
                                                            Orientation="Horizontal">
                                                    <!--<Button Width="25"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Bottom"
                                                            Height="25"
                                                            Background="Transparent"
                                                            ToolTip="Activate"
                                                            hc:IconElement.Width="15"
                                                            hc:IconElement.Height="15"
                                                            Style="{DynamicResource ButtonDashed}"
                                                            BorderBrush="Transparent"
                                                            hc:IconElement.Geometry="{DynamicResource addTo}"
                                                            Padding="0"
                                                            Margin="5">
                                                    </Button>-->
                                                    <!--<ToggleButton Background="Transparent"
                                                                  IsChecked="{Binding IsPinned}"
                                                                  hc:IconElement.Width="15"
                                                                  hc:IconElement.Height="15"
                                                                  Command="{Binding Path=DataContext.ItemPinUnPinCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ProfileCollectionView}}}"
                                                                  CommandParameter="{Binding .}"
                                                                  Padding="0"
                                                                  BorderThickness="0"
                                                                  Width="25"
                                                                  Height="25"
                                                                  Margin="5"
                                                                  hc:IconSwitchElement.Geometry="{DynamicResource pin}"
                                                                  hc:IconSwitchElement.GeometrySelected="{DynamicResource pinned}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="ToggleButton"
                                                                   BasedOn="{StaticResource ToggleButtonIcon}">
                                                                <Setter Property="Foreground"
                                                                        Value="White" />
                                                                <Setter Property="ToolTip"
                                                                        Value="Pin to Dashboard" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsPinned}"
                                                                                 Value="True">
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource PrimaryBrush}" />
                                                                        <Setter Property="ToolTip"
                                                                                Value="Unpin from Dashboard" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>-->
                                                    <!--<Button Width="25"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Bottom"
                                                            Height="25"
                                                            Background="Transparent"
                                                            ToolTip="Activate"
                                                            Command="{Binding Path=DataContext.DeleteSelectedLightingProfileCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                            CommandParameter="{Binding .}"
                                                            hc:IconElement.Width="15"
                                                            hc:IconElement.Height="15"
                                                            Style="{DynamicResource ButtonDashed}"
                                                            BorderBrush="Transparent"
                                                            hc:IconElement.Geometry="{DynamicResource delete}"
                                                            Padding="0"
                                                            Margin="5">
                                                    </Button>-->
                                                </StackPanel>

                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Button>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid>
            <Border CornerRadius="4"
                    Background="{DynamicResource warningBackgroundBrush}"
                    Margin="15,10,15,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Path Margin="10"
                              HorizontalAlignment="Center"
                              Stretch="Uniform"
                              Width="15"
                              Height="15"
                              Data="{DynamicResource warning_Fill}"
                              Fill="{DynamicResource WarningBrush}" />
                    </Grid>
                    <TextBlock Margin="5,10"
                               Grid.Column="1"
                               Text="{Binding WarningMessage}" />
                </Grid>

            </Border>

        </Grid>
        <Border  Margin="15,10"
                 Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityReConverter}}"
                 Height="50"
                 Grid.Row="1"
                 CornerRadius="7"
                 Background="Transparent">
            <Grid>

                <StackPanel HorizontalAlignment="Left"
                            Orientation="Horizontal">
                    <Button BorderThickness="0"
                            Height="32"
                            Style="{DynamicResource _mediumProfileDefaultButton}"
                            hc:IconElement.Geometry="{DynamicResource shuffle}"
                            Margin="0"
                            Command="{Binding Path=DataContext.OpenDevicesFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DeviceManagerWindow}}}"
                            hc:IconElement.Height="15"
                            Content="Open Devices folder" />
                </StackPanel>
            </Grid>
        </Border>
        <hc:TransitioningContentControl Grid.Row="1" Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityConverter}}"
                                        TransitionMode="Top2BottomWithFade">
            <Border  Margin="15,10"
                     Height="50"
                     CornerRadius="7"
                     Effect="{DynamicResource EffectShadow1}"
                     Background="{DynamicResource MainContentBackgroundBrush}">
                <Grid>

                    <StackPanel HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <!--<Button BorderThickness="0"
                          Height="32"
                          Background="{DynamicResource SecondaryRegionBrush}"
                          hc:IconElement.Geometry="{DynamicResource lightingProfilePlayNext}"
                          Margin="10,5"
                          hc:IconElement.Height="20"
                          Content="Play next" />-->
                        <Button BorderThickness="0"
                                Background="{DynamicResource SecondaryRegionBrush}"
                                hc:IconElement.Geometry="{DynamicResource remove}"
                                Command="{Binding OpenDeleteDialogCommand}"
                                CommandParameter=""
                                Margin="10,5"
                                Height="32"
                                hc:IconElement.Height="15"
                                Content="Remove" />
                    </StackPanel>
                </Grid>
            </Border>
        </hc:TransitioningContentControl>
        <hc:ScrollViewer Grid.Row="2"
                         Margin="5,5,5,105"
                         IsInertiaEnabled="True">
            <ItemsControl Margin="5,10,0,10"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          ItemTemplate="{DynamicResource _deviceCardTemplate}"
                          ItemsSource="{Binding Items}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </hc:ScrollViewer>

    </Grid>
</UserControl>