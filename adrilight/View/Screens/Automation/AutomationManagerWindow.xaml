<hc:Window x:Class="adrilight.View.AutomationManagerWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
           
           mc:Ignorable="d"
           Background="{DynamicResource RegionBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           SizeToContent="Height"
           xmlns:properties="clr-namespace:adrilight_shared.Properties;assembly=adrilight_shared"
           x:Name="window"
           Width="800"
           WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <SolidColorBrush x:Key="primaryBackgroundBrush"
                                     Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                                     Opacity="0.15" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource DarkMaskBrush}}" />
                    <Style x:Key="ListViewContainerStyle"
                           TargetType="{x:Type ListViewItem}">
                        <Setter Property="SnapsToDevicePixels"
                                Value="True" />
                        <Setter Property="Padding"
                                Value="0" />
                        <Setter Property="Background"
                                Value="{DynamicResource MainContentBackgroundBrush}" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                        <Setter Property="BorderThickness"
                                Value="4" />
                        <Setter Property="FocusVisualStyle"
                                Value="{StaticResource FocusVisual}" />
                        <Setter Property="Width"
                                Value="auto" />
                        <Setter Property="Height"
                                Value="auto" />
                        <Setter Property="Focusable"
                                Value="False" />
                        <Setter Property="VerticalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="HorizontalAlignment"
                                Value="Stretch" />
                        <Setter Property="Tag"
                                Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Margin="2"
                                            CornerRadius="9"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}"
                                            Effect="{DynamicResource EffectShadow1}"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background"
                                                    TargetName="Bd"
                                                    Value="{DynamicResource HoverBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="False" />
                                                <Condition Property="IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="True" />
                                                <Condition Property="IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                    TargetName="Bd"
                                                    Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock HorizontalAlignment="Center"
                       Text="{x:Static properties:Resources.AutomationManagerWindow_AutomationManager_header}"
                       Style="{StaticResource TextBlockLarge}">
            </TextBlock>
            <Button hc:IconElement.Height="12"
                    hc:IconElement.Width="12"
                    Padding="5"
                    hc:IconElement.Geometry="{DynamicResource AddGeometry}"
                    Command="{ Binding OpenAddNewAutomationCommand}"
                    Grid.Column="1"
                    Margin="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Content="{x:Static properties:Resources.Add_Button_Content}"
                    Style="{StaticResource ButtonDashedPrimary}" />
        </Grid>

        <Grid Grid.Row="1"
              Margin="5">
            <ListView ItemContainerStyle="{DynamicResource ListViewContainerStyle}"
                      x:Name="itm"
                      SelectedItem="{Binding CurrentSelectedAutomation}"
                      Background="Transparent"
                      BorderThickness="0"
                      ItemsSource="{Binding AvailableAutomations}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Margin="0"
                                SnapsToDevicePixels="False">
                            <hc:ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                <ItemsPresenter />
                            </hc:ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListView.Template>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border Height="150"
                                Width="230"
                                CornerRadius="7"
                                Background="Transparent">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.OpenActionsManagerWindowCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                           CommandParameter="{Binding .}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <!--icon and button-->
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!--icon-->
                                    <Grid Grid.Column="0">
                                        <Path Fill="{DynamicResource PrimaryBrush}"
                                              Width="25"
                                              Height="25"
                                              Margin="10,10"
                                              Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                              Stretch="Uniform">

                                        </Path>
                                    </Grid>
                                    <!--button-->
                                    <Grid VerticalAlignment="Top"
                                          HorizontalAlignment="Right"
                                          Grid.Column="1">
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton Background="Transparent"
                                                          IsChecked="{Binding IsPinned}"
                                                          hc:IconElement.Width="15"
                                                          hc:IconElement.Height="15"
                                                          Padding="0"
                                                          BorderThickness="0"
                                                          Width="25"
                                                          Height="25"
                                                          Margin="0,10,0,10"
                                                          hc:IconSwitchElement.Geometry="{DynamicResource pin}"
                                                          hc:IconSwitchElement.GeometrySelected="{DynamicResource pinned}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton"
                                                           BasedOn="{StaticResource ToggleButtonIcon}">
                                                        <Setter Property="Foreground"
                                                                Value="White" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsPinned}"
                                                                         Value="True">
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource PrimaryBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <TextBlock Visibility="{Binding IsLocked,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                       Text="{x:Static properties:Resources.AutomationManagerWindow_Locked_Text}"
                                                       Style="{DynamicResource TextBlockDefaultWarning}" />
                                            <ToggleButton 
                                                          IsChecked="{Binding IsLocked}"
                                                          Background="Transparent"
                                                          hc:IconElement.Width="15"
                                                          hc:IconElement.Height="15"
                                                          Padding="0"
                                                          BorderThickness="0"
                                                          Width="25"
                                                          Height="25"
                                                          Margin="0,10,0,10"
                                                          hc:IconSwitchElement.Geometry="{DynamicResource unlock}"
                                                          hc:IconSwitchElement.GeometrySelected="{DynamicResource lock}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton"
                                                           BasedOn="{StaticResource ToggleButtonIcon}">
                                                        <Setter Property="Foreground"
                                                                Value="White" />
                                                        <Setter Property="ToolTip"
                                                                Value="{x:Static properties:Resources.AutomationManagerWindow_Lock_toolTip}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsLocked}"
                                                                         Value="True">
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource WarningBrush}" />
                                                                <Setter Property="ToolTip"
                                                                        Value="{x:Static properties:Resources.AutomationManagerWindow_Unlock_tooltip}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Button Width="25"
                                                    Height="25"
                                                    Background="Transparent"
                                                    ToolTip="{x:Static properties:Resources.Activate_tooltip}"
                                                    Command="{Binding Path=DataContext.ExecuteAutomationFromManagerCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                    CommandParameter="{Binding .}"
                                                    hc:IconElement.Width="15"
                                                    hc:IconElement.Height="15"
                                                    Style="{DynamicResource ButtonDashed}"
                                                    BorderBrush="Transparent"
                                                    hc:IconElement.Geometry="{DynamicResource playComposition}"
                                                    Padding="0"
                                                    Margin="5,10,0,10">
                                            </Button>
                                            <Button Width="25"
                                                    Height="25"
                                                    Background="Transparent"
                                                    ToolTip="{x:Static properties:Resources.Delete_Tooltip}"
                                                    Command="{Binding Path=DataContext.DeleteSelectedAutomationCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                    CommandParameter="{Binding .}"
                                                    hc:IconElement.Width="15"
                                                    hc:IconElement.Height="15"
                                                    Style="{DynamicResource ButtonDashed}"
                                                    BorderBrush="Transparent"
                                                    hc:IconElement.Geometry="{DynamicResource delete}"
                                                    Padding="0"
                                                    Margin="5,10,10,10">
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <!--name and info-->
                                <Grid HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Grid.Row="1">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Margin="10,5"
                                                   Text="{Binding Name}"
                                                   Style="{DynamicResource TextBlockSubTitleBold}" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="10,0,0,0"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}"
                                                       Text="{x:Static properties:Resources.AutomationManagerWindow_Action}" />
                                            <TextBlock Margin="0,0,0,0"
                                                       Text="{Binding Actions.Count}"
                                                       Style="{DynamicResource TextBlockDefaultSecLight}" />
                                        </StackPanel>
                                    </StackPanel>

                                </Grid>
                                <Grid Margin="10"
                                      VerticalAlignment="Bottom"
                                      HorizontalAlignment="Right"
                                      Grid.Row="2">
                                    <Border Padding="5,5"
                                            CornerRadius="2"
                                            Background="{DynamicResource SecondaryRegionBrush}">
                                        <TextBlock Text="{Binding Condition.Name}" />
                                    </Border>

                                    <!--<Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <ListView x:Name="Modifier_display" 
                                                     ItemsSource="{Binding Modifiers}"                       
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     Style="{StaticResource WrapPanelHorizontalListBox}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="3,0,3,0">
                                                        <Border IsHitTestVisible="False" Height="20" MinWidth="20" Background="{DynamicResource primaryBackgroundBrush}" BorderThickness="0" BorderBrush="{StaticResource BorderBrush}" CornerRadius="2">
                                                            <TextBlock Style="{DynamicResource TextBlockDefaultPrimary}" Margin="5" Text="{Binding .}"/>
                                                        </Border>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>

                                        </ListView>

                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <Border IsHitTestVisible="False" Height="20" MinWidth="20" Margin="5,2,0,0" Background="{DynamicResource primaryBackgroundBrush}" BorderThickness="0" BorderBrush="{StaticResource BorderBrush}" CornerRadius="2">
                                            <TextBlock Style="{DynamicResource TextBlockDefaultPrimary}" Margin="5" Text="{Binding StandardKey.Name}"/>
                                        </Border>

                                    </Grid>-->
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid Grid.Row="2"
              Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Button Click="Button_Click"
                    Command="{Binding SaveAllAutomationCommand}"
                    Margin="10"
                    Style="{StaticResource ButtonPrimary}"
                    Grid.Column="2"
                    Content="Done" />

        </Grid>





    </Grid>
</hc:Window>