<hc:Window x:Class="adrilight.View.PIDEditCanvasWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter" 
           xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:behaviors="clr-namespace:adrilight.Helpers.Behaviors"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:local ="clr-namespace:adrilight"
           xmlns:view="clr-namespace:adrilight.View"
           xmlns:spot ="clr-namespace:adrilight.Spots"
           xmlns:settings ="clr-namespace:adrilight.Settings"
           Background="{StaticResource MainContentBackgroundBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="CanResize"
           Height="800" 
           Width="1000" 
           WindowState="Maximized"
           WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding PIDWindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <converters:StaticResourceConverter x:Key="staticResourceConverter"/>
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource SecondaryBorderBrush}" />

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </Window.Resources>

    <Grid Margin="10,0,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!--<ToolBarTray VerticalAlignment="Center">
                <ToolBar Padding="6" Header="Live view">
                    <CheckBox IsChecked="{Binding IsRichCanvasWindowOpen}" Margin="10,0,0,0"/>
                    -->
            <!--<Separator Margin="10,0,0,0"/>-->
            <!--<Button Command="{Binding SetRandomOutputColorCommand}" ToolTip="Mỗi thiết bị sẽ được tô màu riêng biệt ngẫu nhiên" Content="Set Random Color" Margin="10,0,0,0"/>-->
            <!--
                  
                </ToolBar>
          
            </ToolBarTray>-->
        </Grid>
        <Grid Grid.Row=" 1">
            <richCanvas:RichItemsControl
                 GridStyle="{StaticResource GridStyle}"
                 ItemsSource="{Binding PIDEditWindowsRichCanvasItems}"
                EnableSnapping="False"
                GridSpacing="20"
                EnableGrid="true"
                Scrolling="OnScrolling"
                CanSelectMultipleItems="True"
                RealTimeDraggingEnabled="True"
                RealTimeSelectionEnabled="False"
                SelectedItems="{Binding PIDEditWindowSelectedItems}"
                Scale="1"
                MousePosition="{Binding MousePosition, Mode=OneWayToSource}"
               >
                <richCanvas:RichItemsControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Thêm LED" Command="{Binding OpenAddNewDrawableItemCommand}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource addpalette}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Thêm ảnh" Command="{Binding AddImageToPIDCanvasCommand}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource addImage}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Import LED Setup" Command="{Binding ImportLEDSetupCommand}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource import}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Clear" Command="{Binding ClearPIDCanvasCommand}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource clear}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </richCanvas:RichItemsControl.ContextMenu>

                <richCanvas:RichItemsControl.Resources>

                    <DataTemplate DataType="{x:Type local:LEDSetup}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown" >
                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectPIDCanvasItemCommand,RelativeSource={RelativeSource AncestorType={x:Type view:PIDEditCanvasWindow}}}" CommandParameter="{Binding .}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ItemsControl IsHitTestVisible="{Binding IsSelectable}" Margin="0,-1,0,0"  
                                    Name="PreviewGird"  
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" 
                                    ItemsSource="{Binding Spots,Mode=TwoWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Top" 
                                                Name="PreviewCanvas"
                                                Margin="0" 
                                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path RenderTransformOrigin="0.5,0.5" Data="{Binding Shape,Converter={converters:StaticResourceConverter}}"
                                                Stretch="Fill"
                                                ToolTip="{Binding id}"                              
                                                StrokeThickness="{Binding BorderThickness}" 
                                                Width="{Binding Width,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                Height="{Binding Height,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                            </Path.Fill>
                                            <Path.Style>
                                                <Style TargetType="{x:Type Path}">

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity"  Value="0.5"/>

                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <Setter Property="RenderTransform" >
                                                        <Setter.Value>
                                                            <TransformGroup >
                                                                <ScaleTransform/>
                                                                <TranslateTransform  />
                                                                <RotateTransform Angle="{Binding Angle}" />
                                                            </TransformGroup>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </DataTemplate>

                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type spot:DeviceSpot}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter" >
                                    <i:InvokeCommandAction Command="{Binding DataContext.SetSpotPIDCommand,RelativeSource={RelativeSource AncestorType={x:Type view:PIDEditCanvasWindow}}}" CommandParameter="{Binding .}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.ToolTip>
                                <Border CornerRadius="4" BorderThickness="0" Background="Transparent">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="2" Text="Thứ tự LED : "/>
                                            <TextBlock  Grid.Column="1" Margin="2" Text="{Binding Index}"/>
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="2" Text="Kích thước : "/>
                                            <TextBlock Grid.Column="1"  Margin="2">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0:F0} x {1:F0}">
                                                        <Binding Path="Width" />
                                                        <Binding Path="Height" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>

                                    </StackPanel>
                                </Border>
                            </Grid.ToolTip>
                            <Path RenderTransformOrigin="0.5,0.5" Data="{Binding Shape,Converter={converters:StaticResourceConverter}}" 
                              Stretch="Fill"
                              Width="{Binding Width}"
                              Height="{Binding Height}">
                                <Path.Fill>
                                    <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                </Path.Fill>
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup >
                                                    <ScaleTransform/>
                                                    <TranslateTransform  />
                                                    <RotateTransform Angle="{Binding Angle}" />
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Path.Style>
                            </Path>
                            <Viewbox RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
                                <Viewbox.Style>
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup >
                                                    <ScaleTransform/>
                                                    <TranslateTransform  />
                                                    <RotateTransform Angle="{Binding Angle}" />
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Viewbox.Style>

                                <TextBlock Margin="5" Foreground="White" Text="{Binding Index}" Style="{DynamicResource TextBlockDefault}"/>


                            </Viewbox>
                        </Grid>

                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:ImageVisual}">
                        <Image Source="{Binding ImagePath}"
                           Stretch="Uniform" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:PathGuide}">
                        <Path Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                              Stretch="Fill"
                              Fill="White"
                              Opacity="0.2"
                              Width="{Binding Width}"
                              Height="{Binding Height}">
                        </Path>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:Border}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>

                            <Rectangle Margin="-5,-5,0,0" Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                            </Rectangle>
                        </Grid>

                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:ScreenBound}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>

                            <Rectangle Margin="-5,-5,0,0" Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                            </Rectangle>
                        </Grid>

                    </DataTemplate>
                    <DataTemplate x:Key="SelectedAdornerTemplate">
                        <Border BorderBrush="DodgerBlue"
                            BorderThickness="1"
                            Background="DodgerBlue">
                            <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Width="200">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:F0} x {1:F0}">
                                        <Binding Path="Width" />
                                        <Binding Path="Height" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                    <DataTemplate x:Key="HoverAdornerTemplate">
                        <Border BorderBrush="DodgerBlue"
                            BorderThickness="3">
                        </Border>
                    </DataTemplate>
                </richCanvas:RichItemsControl.Resources>
                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                        <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />
                        <Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsResizeable}" />
                        <Setter Property="Top"
                            Value="{Binding Top,Mode=TwoWay}" />

                        <Setter Property="Left"
                            Value="{Binding Left,Mode=TwoWay}" />

                        <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                        <Setter Property="Width"
                            Value="{Binding Width,Mode=TwoWay}" />

                        <Setter Property="Height"
                            Value="{Binding Height,Mode=TwoWay}" />

                        <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                        <Setter Property="IsDraggable"
                            Value="{Binding IsDraggable}" />

                        <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                        <Setter Property="ShouldBringIntoView"
                            Value="{Binding ShouldBringIntoView, Mode=TwoWay}" />

                        <Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />
                        <Style.Triggers>
                            <Trigger Property="IsDraggable" Value="True">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Thu phóng"
                                          Command="{Binding OpenRectangleScaleCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource scale}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xoay"
                                          Command="{Binding OpenRectangleRotateCommand}" CommandParameter="rotate">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource scale}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trái"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource leftAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trên"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource topAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp ngang phải"
                                          Command="{Binding SpreadItemRightHorizontalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp ngang trái"
                                          Command="{Binding SpreadItemLeftHorizontalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp dọc dưới"
                                          Command="{Binding SpreadItemDownVerticalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp dọc trên"
                                          Command="{Binding SpreadItemUpVerticalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Khóa"
                                          Command="{Binding LockSelectedItemCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource lock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Tạo Zone mới" Command="{Binding AddNewZoneCommand}">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource import}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xóa"
                                          Command="{Binding DeleteSelectedItemsCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDraggable" Value="False">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            <MenuItem Header="Mở khóa"
                                          Command="{Binding UnlockSelectedItemCommand}" CommandParameter="PID" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <DataTrigger Binding="{Binding DataType}" Value="{x:Type local:LEDSetup}">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            <MenuItem Header="Ungroup"
                                          Command="{Binding UnZoneItemsCommand}" CommandParameter="PID">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
        </Grid>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button  Command="{Binding SaveCurrentLEDSetupLayoutCommand}" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="2" Content="Save"/>
            <Button Click="Button_Click" Background="Transparent" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="1" Content="Cancel"/>
        </Grid>
    </Grid>
</hc:Window>