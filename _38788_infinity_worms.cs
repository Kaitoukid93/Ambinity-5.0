//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile 38788-infinity-worms.json
//       
//       Input file:
//           38788-infinity-worms.json (10400 bytes created 16:38+07:00 Oct 31 2022)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    76 |
// |--------------------------+-------|
// | Expression animators     |    10 |
// | KeyFrame animators       |    10 |
// | Reference parameters     |    10 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |     5 |
// |--------------------------+-------|
// | Brushes                  |     5 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedVisuals
{
    // Name:        infinity flat
    // Frame rate:  29.9700012207031 fps
    // Frame count: 100.000004073084
    // Duration:    3336.7 mS
    sealed class _38788_infinity_worms
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 3.337 seconds.
        internal const long c_durationTicks = 33366700;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (_38788_infinity_worms_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new _38788_infinity_worms_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 100.000004073084;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 29.9700012207031;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 100.000004073084;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class _38788_infinity_worms_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 33366700;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionPath _path;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _trimEndScalarAnimation_0p02_to_0p02;
            StepEasingFunction _holdThenStepEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CanvasGeometry Geometry()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(144.348007F, -133.037003F));
                    builder.AddCubicBezier(new Vector2(259.233002F, -238.919998F), new Vector2(446.177002F, -159.776001F), new Vector2(448.709015F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(448.729004F, -2.375F), new Vector2(448.739014F, -1.18799996F), new Vector2(448.739014F, 0.00100000005F));
                    builder.AddCubicBezier(new Vector2(448.739014F, 1.18900001F), new Vector2(448.729004F, 2.37599993F), new Vector2(448.709015F, 3.55900002F));
                    builder.AddCubicBezier(new Vector2(446.177002F, 159.776001F), new Vector2(259.233002F, 238.921005F), new Vector2(144.348007F, 133.037994F));
                    builder.AddLine(new Vector2(-144.348999F, -133.037003F));
                    builder.AddCubicBezier(new Vector2(-259.234009F, -238.919998F), new Vector2(-446.178009F, -159.776001F), new Vector2(-448.710999F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(-448.730011F, -2.375F), new Vector2(-448.739014F, -1.18799996F), new Vector2(-448.739014F, 0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-448.739014F, 1.18900001F), new Vector2(-448.730011F, 2.37599993F), new Vector2(-448.710999F, 3.55900002F));
                    builder.AddCubicBezier(new Vector2(-446.178009F, 159.776001F), new Vector2(-259.234009F, 238.921005F), new Vector2(-144.348999F, 133.037994F));
                    builder.AddLine(new Vector2(144.348007F, -133.037003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionColorBrush ColorBrush_AlmostDarkOrchid_FF8240A6()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x82, 0x40, 0xA6));
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionColorBrush ColorBrush_AlmostGold_FFF5D018()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF5, 0xD0, 0x18));
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionColorBrush ColorBrush_AlmostLightSeaGreen_FF2895B5()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x28, 0x95, 0xB5));
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionColorBrush ColorBrush_AlmostMediumSeaGreen_FF46C468()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x46, 0xC4, 0x68));
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionColorBrush ColorBrush_AlmostTomato_FFFB5E58()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFB, 0x5E, 0x58));
            }

            CompositionPath Path()
            {
                var result = _path = new CompositionPath(Geometry());
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(Path());
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0p02_to_0p02(), RootProgress());
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0p222_to_1p222(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(_path);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p02_to_0p02, _rootProgress);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0p167_to_1p167(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(_path);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p02_to_0p02, _rootProgress);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0p111_to_1p111(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(_path);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p02_to_0p02, _rootProgress);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0p056_to_1p056(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<-38.662994, 171.03>
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(_path);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p02_to_0p02, _rootProgress);
                StartProgressBoundAnimation(result, "TrimOffset", TrimOffsetScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<499.751, 499.625>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 499.751007F, 499.625F));;
                result.StrokeBrush = ColorBrush_AlmostDarkOrchid_FF8240A6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 35.8699989F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<499.751, 499.625>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(1F, 0F, 0F, 1F, 499.751007F, 499.625F));;
                result.StrokeBrush = ColorBrush_AlmostLightSeaGreen_FF2895B5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 35.8699989F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<499.751, 499.625>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(1F, 0F, 0F, 1F, 499.751007F, 499.625F));;
                result.StrokeBrush = ColorBrush_AlmostMediumSeaGreen_FF46C468();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 35.8699989F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<499.751, 499.625>
                var result = CreateSpriteShape(PathGeometry_3(), new Matrix3x2(1F, 0F, 0F, 1F, 499.751007F, 499.625F));;
                result.StrokeBrush = ColorBrush_AlmostGold_FFF5D018();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 35.8699989F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                // Offset:<499.751, 499.625>
                var result = CreateSpriteShape(PathGeometry_4(), new Matrix3x2(1F, 0F, 0F, 1F, 499.751007F, 499.625F));;
                result.StrokeBrush = ColorBrush_AlmostTomato_FFFB5E58();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 35.8699989F;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0p02_to_0p02()
            {
                // Frame 0.
                var result = _trimEndScalarAnimation_0p02_to_0p02 = CreateScalarKeyFrameAnimation(0F, 0.0195599999F, HoldThenStepEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.179999992F, 0.0801400021F, CubicBezierEasingFunction_0());
                // Frame 46.
                result.InsertKeyFrame(0.459999979F, 0.0195599999F, _c.CreateCubicBezierEasingFunction(new Vector2(0.386999995F, 0.107000001F), new Vector2(0.702000022F, 1F)));
                // Frame 74.
                result.InsertKeyFrame(0.73999995F, 0.0799999982F, _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(1F, 0.0195599999F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-38.662994, 171.03>
            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 100.
                result.InsertKeyFrame(1F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-38.662994, 171.03>
            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0p056_to_1p056()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.055555556F, _holdThenStepEasingFunction);
                // Frame 100.
                result.InsertKeyFrame(1F, 1.05555558F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-38.662994, 171.03>
            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0p111_to_1p111()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.111111112F, _holdThenStepEasingFunction);
                // Frame 100.
                result.InsertKeyFrame(1F, 1.11111116F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-38.662994, 171.03>
            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0p167_to_1p167()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.166666672F, _holdThenStepEasingFunction);
                // Frame 100.
                result.InsertKeyFrame(1F, 1.16666663F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<-38.662994, 171.03>
            // TrimOffset
            ScalarKeyFrameAnimation TrimOffsetScalarAnimation_0p222_to_1p222()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.222222224F, _holdThenStepEasingFunction);
                // Frame 100.
                result.InsertKeyFrame(1F, 1.22222221F, CubicBezierEasingFunction_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1000F, 1000F);
                var shapes = result.Shapes;
                // Offset:<-38.662994, 171.03>
                shapes.Add(SpriteShape_0());
                // Offset:<-38.662994, 171.03>
                shapes.Add(SpriteShape_1());
                // Offset:<-38.662994, 171.03>
                shapes.Add(SpriteShape_2());
                // Offset:<-38.662994, 171.03>
                shapes.Add(SpriteShape_3());
                // Offset:<-38.662994, 171.03>
                shapes.Add(SpriteShape_4());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            internal _38788_infinity_worms_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1000F, 1000F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
