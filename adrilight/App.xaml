<Application xmlns:hc="https://handyorg.github.io/handycontrol"
             x:Class="adrilight.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             ShutdownMode="OnExplicitShutdown"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d1p1:Ignorable="d"
             xmlns:template="clr-namespace:adrilight.View.Template"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:parameters="clr-namespace:adrilight_shared.Models.ControlMode.ModeParameters;assembly=adrilight_shared"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Activated="App_Activated"
             Deactivated="App_Deactivated">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <hc:ThemeResources>
                    <hc:ThemeResources.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light"
                                            hc:ThemeDictionary.Key="Light">

                            <!-- Put the resources you want to use in the Light theme Here -->

                            <SolidColorBrush x:Key="DarkOpacityBrush"
                                             Color="#FFFCFCFC" />
                            <SolidColorBrush x:Key="PrimaryTextBrush"
                                             Color="#FF212329" />
                            <SolidColorBrush x:Key="SecondaryRegionBrush"
                                             Color="#FFE0E0E0" />
                            <SolidColorBrush x:Key="DarkMaskBrush"
                                             Color="#FFDDDDDD" />
                            <SolidColorBrush x:Key="RegionBrush"
                                             Color="#FFF4F4F4" />
                        </ResourceDictionary>

                        <ResourceDictionary x:Key="Dark"
                                            hc:ThemeDictionary.Key="Dark">

                            <!-- Put the resources you want to use in the Dark theme Here -->

                            <SolidColorBrush x:Key="HoverBrush"
                                             Color="#FF323232" />
                            <SolidColorBrush x:Key="ButtonHoverBrush"
                                             Color="#FF434343" />
                            <SolidColorBrush x:Key="MainContentBackgroundBrush"
                                             Color="#FF2b2b2b" />
                            <SolidColorBrush x:Key="DarkMaskBrush"
                                             Color="#FF222222" />
                            <SolidColorBrush x:Key="RegionBrush"
                                             Color="#FF202020" />
                            <SolidColorBrush x:Key="SecondaryRegionBrush"
                                             Color="#FF363636" />
                        </ResourceDictionary>
                    </hc:ThemeResources.ThemeDictionaries>
                </hc:ThemeResources>
                <hc:Theme />
                <ResourceDictionary>
                    <DataTemplate x:Key="_buttonSubParamTemplate"
                                  DataType="{x:Type parameters:SubParameter}">
                        <Grid Visibility="{Binding IsEnabled,Converter={StaticResource Boolean2VisibilityConverter},Mode=TwoWay}">
                            <hc:TransitioningContentControl TransitionMode="Left2RightWithFade">
                                <StackPanel>
                                    <hc:Divider  LineStroke="{StaticResource RegionBrush}"
                                                 Margin="0,10,0,10">
                                    </hc:Divider>
                                    <Grid>
                                        <GroupBox VerticalAlignment="Stretch"
                                                  Style="{StaticResource GroupBoxOriginal}"
                                                  HorizontalAlignment="Stretch"
                                                  hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock  Text="{Binding DataContext.Name, RelativeSource={RelativeSource AncestorType=GroupBox}}" />
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>
                                            <Button Style="{DynamicResource _lowProfileDefaultButton}"
                                                    CommandParameter="{Binding CommandParameter}"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding DataContext.SubParameterButtonClickCommand,RelativeSource={RelativeSource AncestorType={x:Type template:ListSelectionParamTemplate}}}"
                                                    Content="{Binding CommandParameter}">
                                            </Button>
                                        </GroupBox>
                                    </Grid>
                                </StackPanel>
                            </hc:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="_sliderSubParamTemplate"
                                  DataType="{x:Type parameters:SubParameter}">

                        <Grid ToolTip="{Binding Description}"
                              Visibility="{Binding IsEnabled,Converter={StaticResource Boolean2VisibilityConverter},Mode=TwoWay}">
                            <hc:TransitioningContentControl TransitionMode="Left2RightWithFade">
                                <StackPanel>
                                    <hc:Divider   LineStroke="{StaticResource RegionBrush}"
                                                  Margin="0,10,0,10">
                                    </hc:Divider>
                                    <Grid>
                                        <GroupBox  HorizontalContentAlignment="Left"
                                                   Style="{StaticResource GroupBoxOriginal}"
                                                   hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock  Text="{Binding DataContext.Name, RelativeSource={RelativeSource AncestorType=GroupBox}}" />
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>

                                            <hc:PreviewSlider HorizontalAlignment="Right"
                                                              Width="200"
                                                              Minimum="{Binding MinValue}"
                                                              Maximum="{Binding MaxValue}"
                                                              Value="{Binding Value}">
                                                <hc:PreviewSlider.PreviewContent>
                                                    <Label Style="{StaticResource LabelPrimary}"
                                                           Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}"
                                                           ContentStringFormat="#0" />
                                                </hc:PreviewSlider.PreviewContent>
                                            </hc:PreviewSlider>
                                        </GroupBox>
                                    </Grid>
                                </StackPanel>
                            </hc:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="_toggleSubParamTemplate"
                                  DataType="{x:Type parameters:SubParameter}">
                        <Grid ToolTip="{Binding Description}">
                            <hc:TransitioningContentControl TransitionMode="Left2RightWithFade">

                                <StackPanel>
                                    <hc:Divider LineStroke="{StaticResource RegionBrush}"
                                                Margin="0,10,0,10">
                                    </hc:Divider>
                                    <Grid>
                                        <GroupBox VerticalAlignment="Stretch"
                                                  Style="{StaticResource GroupBoxOriginal}"
                                                  HorizontalAlignment="Stretch"
                                                  hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock  FontWeight="SemiBold"
                                                                Text="{Binding DataContext.Name, RelativeSource={RelativeSource AncestorType=GroupBox}}" />
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>
                                            <ToggleButton HorizontalAlignment="Right"
                                                          IsChecked="{Binding Value}"
                                                          Style="{DynamicResource ToggleButtonSwitchSmallerElipse}">
                                            </ToggleButton>
                                        </GroupBox>
                                    </Grid>
                                </StackPanel>
                            </hc:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="_listSelectionSubParamTemplate"
                                  DataType="{x:Type parameters:SubParameter}">
                        <Grid Visibility="{Binding IsEnabled,Converter={StaticResource Boolean2VisibilityConverter},Mode=TwoWay}">
                            <hc:TransitioningContentControl TransitionMode="Left2RightWithFade">
                                <StackPanel>
                                    <hc:Divider LineStroke="{DynamicResource RegionBrush}"
                                                Margin="0,10,0,10">
                                    </hc:Divider>
                                    <Grid>
                                        <GroupBox VerticalAlignment="Stretch"
                                                  Style="{StaticResource GroupBoxOriginal}"
                                                  HorizontalAlignment="Stretch"
                                                  hc:TitleElement.TitlePlacement="Left">
                                            <GroupBox.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DataContext.Name, RelativeSource={RelativeSource AncestorType=GroupBox}}" />
                                                </DataTemplate>
                                            </GroupBox.HeaderTemplate>
                                            <Border Effect="{DynamicResource EffectShadow1}"
                                                    HorizontalAlignment="Right"
                                                    Background="{DynamicResource SecondaryRegionBrush}"
                                                    CornerRadius="4">
                                                <ListBox  ItemsSource="{Binding AvailableValue}"
                                                          ItemContainerStyle="{DynamicResource _listBoxModeSelectionStyle}"
                                                          SelectedIndex="{Binding Value}"
                                                          Background="Transparent"
                                                          BorderThickness="0"
                                                          Style="{StaticResource WrapPanelHorizontalListBox}">
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel>
                                                            </WrapPanel>
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <TextBlock HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           Margin="5,2"
                                                                           Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                                           Text="{Binding .}"
                                                                           Style="{DynamicResource TextBlockDefault}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                            </Border>
                                        </GroupBox>
                                    </Grid>
                                </StackPanel>
                            </hc:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingWave.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingThreeDots.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingFlipPlane.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingPulse.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingDoubleBounce.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Colors.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml"></ResourceDictionary>
                <ResourceDictionary Source="GeometryCollection.xaml">
                </ResourceDictionary>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:ToUpperValueConverter x:Key="toUpperValueConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <vm:ViewModelLocator x:Key="Locator"
                                 d:IsDataSource="True"
                                 xmlns:vm="clr-namespace:adrilight.ViewModel" />
            <Style x:Key="MessageBoxCustom"
                   TargetType="hc:MessageBox"
                   BasedOn="{StaticResource {x:Type hc:MessageBox}}">
                <Setter Property="NonClientAreaBackground"
                        Value="#262e2f" />
                <Setter Property="OtherButtonHoverBackground"
                        Value="#888580" />
                <Setter Property="OtherButtonForeground"
                        Value="White" />
                <Setter Property="OtherButtonHoverForeground"
                        Value="White" />
                <Setter Property="NonClientAreaForeground"
                        Value="White" />
                <Setter Property="CloseButtonForeground"
                        Value="White" />
            </Style>
            <SolidColorBrush x:Key="primaryBackgroundBrush"
                             Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                             Opacity="0.15" />
            <SolidColorBrush x:Key="warningBackgroundBrush"
                             Color="{DynamicResource WarningColor}"
                             Opacity="0.15" />
            <Style x:Key="_lowProfileDefaultButton"
                   TargetType="Button"
                   BasedOn="{StaticResource ButtonCustom}">
                <Setter Property="Effect"
                        Value="{DynamicResource EffectShadow1}" />
                <Setter Property="Padding"
                        Value="10,0" />
                <Setter Property="hc:BorderElement.CornerRadius"
                        Value="4" />
                <Setter Property="Height"
                        Value="28" />
                <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground"
                        Value="{DynamicResource HoverBrush}" />
                <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground"
                        Value="{DynamicResource ButtonHoverBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Background"
                        Value="{DynamicResource SecondaryRegionBrush}" />
            </Style>
            
            <Style x:Key="_listBoxControlModeSmallStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="2"
                                    Width="30"
                                    Height="30"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <Border.Background>
                                    <SolidColorBrush x:Name="BorderBackgroundBrush"
                                                     Color="{DynamicResource SecondaryRegionColor}"
                                                     Opacity="0.0" />
                                </Border.Background>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetName="BorderBackgroundBrush"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     From="0.4"
                                                                     To="1">
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     From="{TemplateBinding Opacity}"
                                                                     To="1">
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.1"
                                                                 Storyboard.TargetName="BorderBackgroundBrush"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0">

                                                </DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 From="1"
                                                                 To="{TemplateBinding Opacity}">
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource primaryBackgroundBrush}" />
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="1" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource primaryBackgroundBrush}" />
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="1" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="0.6" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="0.6" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

                <Setter Property="Foreground"
                        Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="_listBoxColorSelectionStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="0"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="0"
                                    Background="Transparent"
                                    Opacity="1"
                                    BorderThickness="2"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                    
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="Transparent" />

                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground"
                        Value="{StaticResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="_defaultIconButton"
                   TargetType="Button"
                   BasedOn="{StaticResource ButtonBaseStyle}">
                <Setter Property="Effect"
                        Value="{DynamicResource EffectShadow1}" />
                <Setter Property="Padding"
                        Value="5" />
                <Setter Property="hc:BorderElement.CornerRadius"
                        Value="4" />
                <Setter Property="Height"
                        Value="28" />
                <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground"
                        Value="{DynamicResource HoverBrush}" />
                <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground"
                        Value="Red" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Background"
                        Value="{DynamicResource RegionBrush}" />
            </Style>
            <Style x:Key="_buttonIconTransparrent"
                   BasedOn="{StaticResource ButtonBaseStyle}"
                   TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="UIElement.IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource SecondaryRegionBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource BorderBrush}" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryTextBrush}" />
                <Setter Property="Background"
                        Value="{DynamicResource MainContentBackgroundBrush}" />
            </Style>
            <Style x:Key="_defaultIconButtonSmall"
                   TargetType="Button"
                   BasedOn="{StaticResource ButtonIcon}">
                <Setter Property="Effect"
                        Value="{DynamicResource EffectShadow1}" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="hc:BorderElement.CornerRadius"
                        Value="4" />
                <Setter Property="Height"
                        Value="14" />
                <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground"
                        Value="{DynamicResource HoverBrush}" />
                <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground"
                        Value="{DynamicResource ButtonHoverBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Background"
                        Value="{DynamicResource RegionBrush}" />
            </Style>
            <Style x:Key="_mediumProfileDefaultButton"
                   TargetType="Button"
                   BasedOn="{StaticResource ButtonCustom}">
                <Setter Property="Effect"
                        Value="{DynamicResource EffectShadow1}" />
                <Setter Property="Padding"
                        Value="10,0" />
                <Setter Property="hc:BorderElement.CornerRadius"
                        Value="4" />
                <Setter Property="Height"
                        Value="32" />
                <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground"
                        Value="{DynamicResource HoverBrush}" />
                <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground"
                        Value="{DynamicResource ButtonHoverBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Background"
                        Value="{DynamicResource SecondaryRegionBrush}" />
            </Style>
            <Style x:Key="_listBoxGeneralModeSelectionStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="5"
                                    Effect="{DynamicResource EffectShadow1}"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{StaticResource SecondaryRegionBrush}" />



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{StaticResource SecondaryRegionBrush}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource SecondaryRegionBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="_listBoxVerticalToolBarStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="2"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="2"
                                    Width="42"
                                    Height="42"
                                    Effect="{DynamicResource EffectShadow1}"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{StaticResource SecondaryRegionBrush}" />



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{StaticResource SecondaryRegionBrush}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource SecondaryRegionBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Margin="5,2"
                                    Padding="3"
                                    CornerRadius="4"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="Left"
                                                      Width="15"
                                                      Height="15"
                                                      Content="{TemplateBinding Icon}"
                                                      Margin="5,5" />
                                    <ContentPresenter Grid.Column="1"
                                                      HorizontalAlignment="Left"
                                                      Content="{TemplateBinding Header}"
                                                      Margin="5,5" />
                                </Grid>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource SecondaryRegionBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PrimaryTextColor}" />
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Grid.IsSharedSizeScope"
                        Value="true" />
                <Setter Property="HasDropShadow"
                        Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Margin="10"
                                    Effect="{StaticResource EffectShadow3}"
                                    Padding="0"
                                    x:Name="Border"
                                    Background="{StaticResource RegionBrush}"
                                    BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.BorderBrush>
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="Padding"
                                            Value="0,3,0,3" />
                                    <Setter TargetName="Border"
                                            Property="CornerRadius"
                                            Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="_listBoxModeSelectionStyle"
                   TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="2"
                                    Name="_Border"
                                    Padding="0"
                                    Margin="2"
                                    Effect="{DynamicResource EffectShadow1}"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource SecondaryRegionBrush}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{StaticResource SecondaryRegionBrush}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource HoverBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="_ComboboxItemStyle"
                   TargetType="ComboBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border CornerRadius="2"
                                    Name="_Border"
                                    Padding="5"
                                    Margin="4,4"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource DarkMaskBrush}"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource DarkMaskBrush}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background"
                                            TargetName="_Border"
                                            Value="{DynamicResource SecondaryRegionBrush}" />

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>


                </Setter>
            </Style>
            <Style x:Key="ListBoxParameterValueContainerStyle"
                   TargetType="{x:Type ListBoxItem}">

                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Padding"
                        Value="0" />
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="Background"
                        Value="{DynamicResource MainContentBackgroundBrush}" />
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Width"
                        Value="auto" />
                <Setter Property="Height"
                        Value="auto" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
                                <Border x:Name="_Border"
                                        Margin="5"
                                        RenderTransformOrigin="0.5,0.5"
                                        CornerRadius="2"
                                        BorderThickness="2"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1.0"
                                                        ScaleY="1.0" />
                                    </Border.RenderTransform>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.1"
                                                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                                                 To="1.1">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <BackEase EasingMode="EaseOut"
                                                                                  Amplitude="0.1" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.1"
                                                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                                                 To="1.1">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <BackEase EasingMode="EaseOut"
                                                                                  Amplitude="0.1" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2"
                                                                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                                             To="1.0" />
                                                            <DoubleAnimation Duration="0:0:0.2"
                                                                             Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                                             To="1.0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </hc:TransitioningContentControl>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="1.0" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="1.0" />
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="_Border"
                                            Value="1.0" />
                                    <Setter Property="BorderBrush"
                                            TargetName="_Border"
                                            Value="{DynamicResource PrimaryBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonSwitchSmallerElipse"
                   BasedOn="{StaticResource BaseStyle}"
                   TargetType="ToggleButton">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Style="{StaticResource RectangleFocusVisualCircular}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background"
                        Value="{StaticResource SecondaryRegionBrush}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource BorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="6,0,0,0" />
                <Setter Property="Width"
                        Value="36" />
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="StoryboardChecked">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                                   Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="14">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                   Storyboard.TargetName="lightBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                   Storyboard.TargetName="innerBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                   Storyboard.TargetName="innerBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="StoryboardUnChecked">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                                   Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                   Storyboard.TargetName="lightBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                   Storyboard.TargetName="innerBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                   Storyboard.TargetName="innerBorder">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2"
                                                              Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <PowerEase EasingMode="EaseOut" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Viewbox>
                                <Grid x:Name="templateRoot"
                                      Background="Transparent"
                                      SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{DynamicResource BorderBrush}"
                                            BorderThickness="2"
                                            Height="22"
                                            Width="36"
                                            x:Name="backBorder"
                                            Background="Transparent"
                                            CornerRadius="11" />
                                    <Border Grid.Column="0"
                                            Height="22"
                                            Width="36"
                                            Opacity="0"
                                            x:Name="lightBorder"
                                            Background="{DynamicResource PrimaryBrush}"
                                            CornerRadius="11"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                    <Border Grid.Column="0"
                                            Height="20"
                                            Margin="1"
                                            Background="Transparent"
                                            CornerRadius="11"
                                            Name="innerBorder"
                                            RenderTransformOrigin=".8,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                    </Border>
                                    <hc:SimplePanel Grid.Column="0"
                                                    Margin="3,0">
                                        <Border HorizontalAlignment="Left"
                                                CornerRadius="8"
                                                Name="thumb"
                                                Effect="{StaticResource EffectShadow2}"
                                                Background="{StaticResource TextIconBrush}"
                                                Width="16"
                                                Height="16"
                                                RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                        </Border>
                                    </hc:SimplePanel>
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Visibility="Collapsed"
                                                      Grid.Column="1"
                                                      Focusable="False"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="contentPresenter"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardChecked}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardUnChecked}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>


</Application>