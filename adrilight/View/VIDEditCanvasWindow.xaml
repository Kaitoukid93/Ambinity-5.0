<hc:Window x:Class="adrilight.View.VIDEditCanvasWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter" 
           xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:behaviors="clr-namespace:adrilight.Helpers.Behaviors"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:local ="clr-namespace:adrilight"
           xmlns:view="clr-namespace:adrilight.View"
           xmlns:spot ="clr-namespace:adrilight.Spots"
           xmlns:settings ="clr-namespace:adrilight.Settings"
           Background="{StaticResource MainContentBackgroundBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="CanResize"
           Height="800" 
           Width="1000" 
           WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SurfaceEditorWindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <converters:StaticResourceConverter x:Key="staticResourceConverter"/>
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource SecondaryBorderBrush}" />

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </Window.Resources>

    <Grid Margin="10,0,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <ToolBarTray IsLocked="True" VerticalAlignment="Center">
                <ToolBar  Padding="6" Header="View">
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <CheckBox IsChecked="{Binding ShowAllOutputPID}" Content="Hiện tất cả đầu ra"  Margin="10,0,0,0"/>
                    <CheckBox IsChecked="{Binding ShowAllDevicePID}" Content="Hiện tất cả thiết bị"  Margin="10,0,5,0"/>
                </ToolBar>
                <ToolBar Padding="6" Header="ID Settings">
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <hc:NumericUpDown Margin="5,0" Value="{Binding CountVID}" x:Name="vidBox" DecimalPlaces="0"   hc:InfoElement.TitleWidth="30"  hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="{Binding CurrentIDType}" Style="{StaticResource NumericUpDownPlus}" hc:InfoElement.Necessary="False"/>
                    <hc:NumericUpDown Margin="5,0" Value="{Binding GapVID}" x:Name="gapBox" DecimalPlaces="0"   hc:InfoElement.TitleWidth="auto"  hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="Space"  hc:InfoElement.Necessary="False">
                        <hc:NumericUpDown.Style>
                            <Style TargetType="hc:NumericUpDown" BasedOn="{StaticResource NumericUpDownPlus}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentIDType}" Value="CID">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </hc:NumericUpDown.Style>
                    </hc:NumericUpDown>

                    <Separator Margin="10,0" MaxHeight="25"/>
                    <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource DeleteFillCircleGeometry}" Command="{Binding ResetCountCommand}" CommandParameter="ResetVID" ToolTip="Xóa tất cả VID hiện tại" Content="Xóa"/>
                    <Separator Margin="10,0" MaxHeight="25"/>
                    <Button Margin="5,0,0,0" BorderThickness="0" hc:IconElement.Geometry="{DynamicResource info}" Command="{Binding OpenTutorialCommand}" CommandParameter="ResetVID" ToolTip="Hướng dẫn sử dụng VID Editor" Content="Hướng dẫn"/>
                </ToolBar>

            </ToolBarTray>
        </Grid>
        <Grid Grid.Row=" 1">
            <richCanvas:RichItemsControl
                 GridStyle="{StaticResource GridStyle}"
                EnableSnapping="False"
                GridSpacing="1"
                EnableGrid="true"
                Scrolling="OnScrolling"
                CanSelectMultipleItems="True"
                RealTimeDraggingEnabled="True"
                RealTimeSelectionEnabled="False"
                SelectedItems="{Binding selectedSpots}"
                Scale="0.5"
                MousePosition="{Binding MousePosition, Mode=OneWayToSource}"
                ItemsSource="{Binding VIDEditWindowsRichCanvasItems}">
              

                <richCanvas:RichItemsControl.Resources>
                    <DataTemplate DataType="{x:Type local:LEDSetup}">
                        <Grid>
                            <Grid>
                                <ItemsControl Margin="0,-1,0,0"  
                                    Name="PreviewGird"  
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" 
                                    ItemsSource="{Binding Spots,Mode=TwoWay}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Top" 
                                                Name="PreviewCanvas"
                                                Margin="0" 
                                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                            </Canvas>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{Binding Left,Mode=TwoWay}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding Top,Mode=TwoWay}"/>
                                            <Setter Property="Width" Value="{Binding Width,Mode=TwoWay}"/>
                                            <Setter Property="Height" Value="{Binding Height,Mode=TwoWay}"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <!--<Grid.ToolTip>
                                                    <Border CornerRadius="4" BorderThickness="0" Background="Transparent">
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Margin="2" Text="Thứ tự LED : "/>
                                                                <TextBlock  Grid.Column="1" Margin="2">
                                                                   
                                                                </TextBlock>
                                                            </Grid>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Margin="2" Text="Kích thước : "/>
                                                                <TextBlock Grid.Column="1"  Margin="2">
                                                                    <TextBlock.Text>
                                                                        <MultiBinding StringFormat="{}{0:F0} x {1:F0}">
                                                                            <Binding Path="Width" />
                                                                            <Binding Path="Height" />
                                                                        </MultiBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </Grid>

                                                        </StackPanel>
                                                    </Border>
                                                </Grid.ToolTip>-->
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseEnter" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetSpotVIDCommand,RelativeSource={RelativeSource AncestorType={x:Type view:VIDEditCanvasWindow}}}" CommandParameter="{Binding .}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Data="{Binding Shape,Converter={converters:StaticResourceConverter}}"
                                                Stretch="Fill"
                                                ToolTip="{Binding id}">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                                    </Path.Fill>
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity"  Value="0.5"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                           
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <TransformGroup >
                                                                            <ScaleTransform/>
                                                                            <TranslateTransform  />
                                                                            <RotateTransform Angle="{Binding Angle}" />
                                                                        </TransformGroup>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Viewbox RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
                                                    
                                                        <TextBlock Margin="5"   Foreground="White">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefault}">
                                                                    
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DataContext.CurrentIDType,RelativeSource={RelativeSource AncestorType={x:Type view:VIDEditCanvasWindow}}}" Value="VID">
                                                                            <Setter Property="Text" Value="{Binding VID}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataContext.CurrentIDType,RelativeSource={RelativeSource AncestorType={x:Type view:VIDEditCanvasWindow}}}" Value="FID">
                                                                            <Setter Property="Text" Value="{Binding MID}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataContext.CurrentIDType,RelativeSource={RelativeSource AncestorType={x:Type view:VIDEditCanvasWindow}}}" Value="CID">
                                                                            <Setter Property="Text" Value="{Binding CID}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    
                                                  
                                                    <Viewbox.Style>
                                                        <Style TargetType="{x:Type Viewbox}">
                                                            <Setter Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <TransformGroup >
                                                                        <ScaleTransform/>
                                                                        <TranslateTransform  />
                                                                        <RotateTransform Angle="{Binding Angle}" />
                                                                    </TransformGroup>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Viewbox.Style>
                                                </Viewbox>
                                                
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                    <!--<DataTemplate DataType="{x:Type spot:DeviceSpot}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter" >
                                    <i:InvokeCommandAction Command="{Binding DataContext.SetSpotVIDCommand,RelativeSource={RelativeSource AncestorType={x:Type view:VIDEditCanvasWindow}}}" CommandParameter="{Binding .}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Grid.ToolTip>
                                <Border CornerRadius="4" BorderThickness="0" Background="Transparent">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="2" Text="Thứ tự LED : "/>
                                            <TextBlock  Grid.Column="1" Margin="2" Text="{Binding VID}"/>
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="2" Text="Kích thước : "/>
                                            <TextBlock Grid.Column="1"  Margin="2">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0:F0} x {1:F0}">
                                                        <Binding Path="Width" />
                                                        <Binding Path="Height" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>

                                    </StackPanel>
                                </Border>
                            </Grid.ToolTip>
                           
                            <Path Data="{Binding Shape,Converter={converters:StaticResourceConverter}}" 
                              Stretch="Fill"
                              Width="{Binding Width}"
                              Height="{Binding Height}">
                                <Path.Fill>
                                    <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                </Path.Fill>
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup >
                                                    <ScaleTransform/>
                                                    <TranslateTransform  />
                                                    <RotateTransform Angle="{Binding Angle}" />
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Path.Style>
                            </Path>
                            
                            <TextBlock Foreground="White" Text="{Binding VID}" Style="{DynamicResource TextBlockTitle}"/>
                        </Grid>

                    </DataTemplate>-->
                    <DataTemplate DataType="{x:Type settings:ImageVisual}">
                        <Image Source="{Binding ImagePath}"
                           Stretch="Uniform" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:PathGuide}">
                        <Path Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                              Stretch="Fill"
                              Fill="White"
                              Opacity="0.2"
                              Width="{Binding Width}"
                              Height="{Binding Height}">
                        </Path>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:Border}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>

                            <Rectangle Margin="-5,-5,0,0" Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                            </Rectangle>
                        </Grid>

                    </DataTemplate>
                    <DataTemplate x:Key="SelectedAdornerTemplate">
                        <Border BorderBrush="DodgerBlue"
                            BorderThickness="1"
                            Background="DodgerBlue">
                            <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Width="200">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:F0} x {1:F0}">
                                        <Binding Path="Width" />
                                        <Binding Path="Height" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                    <DataTemplate x:Key="HoverAdornerTemplate">
                        <Border BorderBrush="DodgerBlue"
                            BorderThickness="3">
                        </Border>
                    </DataTemplate>
                </richCanvas:RichItemsControl.Resources>
                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">
                        <!--<Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type richCanvas:RichItemContainer}">
                                    <Border x:Name="Bd" 
                                            Padding="0"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter 
                                            HorizontalAlignment="Center" 
                                            SnapsToDevicePixels="True" 
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            -->
                        <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                        <!--
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="3.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryTextBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            -->
                        <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                        <!--
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="3.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="3.0"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="3.0"/>
                                        </MultiTrigger>
                                    
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>-->
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                        <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="False" />
                        <Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                            Value="false" />
                        <Setter Property="Top"
                            Value="{Binding Top,Mode=TwoWay}" />

                        <Setter Property="Left"
                            Value="{Binding Left,Mode=TwoWay}" />

                        <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                        <Setter Property="Width"
                            Value="{Binding Width,Mode=TwoWay}" />

                        <Setter Property="Height"
                            Value="{Binding Height,Mode=TwoWay}" />

                        <Setter Property="IsSelectable"
                            Value="False" />

                        <Setter Property="IsDraggable"
                            Value="false" />

                        <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                        <Setter Property="ShouldBringIntoView"
                            Value="{Binding ShouldBringIntoView, Mode=TwoWay}" />

                        <Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />
                        <Style.Triggers>
                            <Trigger Property="IsDraggable" Value="True">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Thu phóng"
                                          Command="{Binding OpenRectangleScaleCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}">
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource scale}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trái"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource leftAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trên"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource topAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp ngang"
                                          Command="{Binding SpreadItemHorizontalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp dọc"
                                          Command="{Binding SpreadItemVerticalCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Khóa"
                                          Command="{Binding LockSelectedItemCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource lock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xóa"
                                          Command="{Binding DeleteSelectedItemsCommand}" CommandParameter="{Binding PIDEditWindowsRichCanvasItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDraggable" Value="False">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            <MenuItem Header="Mở khóa"
                                          Command="{Binding UnlockSelectedItemCommand}" CommandParameter="PID" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
        </Grid>
        <!--<Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button  Command="{Binding SaveCurrentLEDSetupLayoutCommand}" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="2" Content="Save"/>
            <Button Click="Button_Click" Background="Transparent" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="1" Content="Cancel"/>
        </Grid>-->
    </Grid>
</hc:Window>