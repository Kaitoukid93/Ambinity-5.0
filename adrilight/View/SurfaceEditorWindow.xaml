<hc:Window x:Class="adrilight.View.SurfaceEditorWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter" 
           xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:behaviors="clr-namespace:adrilight.Helpers.Behaviors"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:local ="clr-namespace:adrilight"
           xmlns:view ="clr-namespace:adrilight.View"
           xmlns:settings ="clr-namespace:adrilight.Settings"
           Background="{StaticResource RegionBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           WindowState="Maximized"
            ResizeMode="CanResize"
           Height="800" 
           Width="1000" 
           WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SurfaceEditorWindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource SecondaryBorderBrush}" />
                    <SolidColorBrush x:Key="_primaryBackgroundColor" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </Window.Resources>

    <Grid Margin="10,10,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <richCanvas:RichItemsControl
                ItemsSource="{Binding SurfaceEditorItems}"
                 GridStyle="{StaticResource GridStyle}"
                EnableSnapping="False"
                GridSpacing="24"
                EnableGrid="true"
                Scrolling="OnScrolling"
                CanSelectMultipleItems="True"
                RealTimeDraggingEnabled="False"
                RealTimeSelectionEnabled="False"
                SelectedItems="{Binding SurfaceEditorSelectedItems}"
                Scale="0.5"
                MaxScale="20"
                MinScale="0.1">
                <richCanvas:RichItemsControl.SelectionRectangleStyle>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="Transparent" />
                        <Setter Property="Stroke" Value="{DynamicResource PrimaryBrush}" />
                        <Setter Property="StrokeThickness" Value="3" />
                        <Setter Property="StrokeDashArray" Value="3" />
                    </Style>
                </richCanvas:RichItemsControl.SelectionRectangleStyle>
             
                <richCanvas:RichItemsControl.Resources>
                    <DataTemplate DataType="{x:Type settings:ARGBLEDSlaveDevice}">
                        <Grid >
                            <ItemsControl  Margin="0,-1,0,0"
                                    Name="PreviewGird"  
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" 
                                    ItemsSource="{Binding ControlableZones}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Top" 
                                                Name="PreviewCanvas"
                                                Margin="0" 
                                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:LEDSetup}">
                                        <Grid>

                                            <ItemsControl IsHitTestVisible="{Binding IsDraggable,Mode=TwoWay}" Margin="0,0,0,0"  
                                    Name="PreviewGird"  
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" 
                                    ItemsSource="{Binding Spots}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Canvas 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Top" 
                                                Name="PreviewCanvas"
                                                Margin="0" 
                                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                                        </Canvas>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Path RenderTransformOrigin="0.5,0.5" Data="{Binding Shape,Converter={converters:StaticResourceConverter}}"
                                                Stretch="Fill"
                                                ToolTip="{Binding Index}"                              
                                                StrokeThickness="{Binding BorderThickness}" 
                                                Width="{Binding Width,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                Height="{Binding Height,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                            <Path.Fill>
                                                                <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                                            </Path.Fill>
                                                            <Path.Style>
                                                                <Style TargetType="{x:Type Path}">

                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Opacity"  Value="0.5"/>

                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="RenderTransform" >
                                                                        <Setter.Value>
                                                                            <TransformGroup >
                                                                                <ScaleTransform/>
                                                                                <TranslateTransform  />
                                                                                <RotateTransform Angle="{Binding Angle}" />
                                                                            </TransformGroup>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Path.Style>
                                                        </Path>
                                                    </DataTemplate>

                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Grid IsHitTestVisible="{Binding IsDraggable,Mode=TwoWay}">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Background="{DynamicResource PrimaryBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Output "/>
                                        <TextBlock Text="{Binding ParrentID}"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                            <ContentControl>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding DataContext.LaunchPIDEditWindowCommand,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" CommandParameter="{Binding .}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.SelectSurfaceEditorItemCommand,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" CommandParameter="{Binding .}" />
                                    </i:EventTrigger>
                                    
                                </i:Interaction.Triggers>

                                <Rectangle  Height="{Binding Height}" Width="{Binding Width}">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Fill" Value="{DynamicResource _primaryBackgroundColor}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                    <Setter Property="Fill" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </ContentControl>
                         
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="SelectedAdornerTemplate">
                        <Border BorderBrush="{DynamicResource SecondaryBorderBrush}"
                            BorderThickness="1" CornerRadius="4"
                            Background="{DynamicResource SecondaryRegionBrush}">
                            <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} : {1}">
                                        <Binding Path="Left" />
                                        <Binding Path="Top" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="HoverAdornerTemplate">
                        <Border BorderBrush="{DynamicResource PrimaryBrush}"
                            BorderThickness="3">
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:Border}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Screen" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="at" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} x {1}">
                                            <Binding Path="Width" />
                                            <Binding Path="Height" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                
                            </StackPanel>
                           
                            <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsDraggable}">
                            </Rectangle>
                        </Grid>
                      
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:ScreenBound}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Screen" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="at" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} x {1}">
                                            <Binding Path="Width" />
                                            <Binding Path="Height" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                            </StackPanel>

                            <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="False">
                            </Rectangle>
                            <Image Source="{Binding Source}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               IsHitTestVisible="False">
                                
                            </Image>
                        </Grid>

                    </DataTemplate>

                </richCanvas:RichItemsControl.Resources>

                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type richCanvas:RichItemContainer}">
                                    <Border x:Name="Bd" 
                                            Padding="0"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter 
                                            HorizontalAlignment="Center" 
                                            SnapsToDevicePixels="True" 
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryTextBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                       
                        <Setter Property="helpers:EventToCommand.Event"
                            Value="LeftChanged, TopChanged" />
                        <Setter Property="helpers:EventToCommand.Command">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource CommandsToListConverter}">
                                    <Binding Path="LeftChangedCommand" />
                                    <Binding Path="TopChangedCommand" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="helpers:EventToCommand.CanExecute"
                            Value="{Binding IsSelected}" />
                        <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                        <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />
                        <!--<Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsSelected}" />-->
                        <Setter Property="Top"
                            Value="{Binding Top, Mode=TwoWay}" />

                        <Setter Property="Left"
                            Value="{Binding Left, Mode=TwoWay}" />

                        <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                        <Setter Property="Width"
                            Value="{Binding Width}" />

                        <Setter Property="Height"
                            Value="{Binding Height}" />

                        <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                        <Setter Property="IsDraggable"
                            Value="{Binding IsDraggable}" />

                        <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                        <Setter Property="ShouldBringIntoView"
                            Value="{Binding ShouldBringIntoView, Mode=TwoWay}" />

                        <Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />

                        
                        <Style.Triggers>
                            <Trigger Property="IsDraggable" Value="True">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            
                                            <MenuItem Header="ID Setup(PID)"
                                          Command="{Binding OpenSpotPIDQuickEDitWindowCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource setPID}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Rotate"
                                          Command="{Binding RotateSelectedSurfaceEditorItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource rotateCW}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Reflect"
                                          Command="{Binding ReflectSelectedSurfaceEditorItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource reflectVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Scale"
                                          Command="{Binding OpenRectangleScaleCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource scale}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator Margin="10,5">
                                            </Separator>
                                            <MenuItem Header="Căn lề trái"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource leftAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trên"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource topAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp ngang"
                                          Command="{Binding SpreadItemRightHorizontalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp dọc"
                                          Command="{Binding SpreadItemDownVerticalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator Margin="10,5">
                                            </Separator>
                                            <MenuItem Header="Khóa"
                                          Command="{Binding LockSelectedItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource lock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <!--<MenuItem Header="Sửa Cấu hình LED (LED Setup)"
                                          Command="{Binding LaunchPIDEditWindowCommand}" CommandParameter="{Binding SurfaceEditorSelectedItem}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource info}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>-->

                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDraggable" Value="False">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            <MenuItem Header="Mở khóa"
                                          Command="{Binding UnlockSelectedItemCommand}" CommandParameter="SUR" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
        </Grid>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button  Command="{Binding SaveCurretSurfaceLayoutCommand}" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="2" Content="Save"/>
            <Button Click="Button_Click" Background="Transparent" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="1" Content="Cancel"/>
        </Grid>
    </Grid>
</hc:Window>