<UserControl x:Class="adrilight.View.Screens.Store.StoreCatergoriesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:adrilight.View.Screens.Store"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             d:DataContext="{Binding Source={StaticResource Locator}, Path=StoreCategoriesViewModel}"
             DataContext="{Binding Source={StaticResource Locator}, Path=StoreCategoriesViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <SolidColorBrush x:Key="primaryBackgroundBrush"
                                     Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                                     Opacity="0.15" />

                    <Style x:Key="_listBoxControlModeStyle"
                           TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border CornerRadius="4"
                                            Name="_Border"
                                            Padding="0"
                                            Margin="2"
                                            Width="64"
                                            Height="60"
                                            BorderBrush="{StaticResource DarkMaskBrush}"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <Border.Background>
                                            <SolidColorBrush x:Name="BorderBackgroundBrush"
                                                             Color="{DynamicResource SecondaryRegionColor}"
                                                             Opacity="0.0" />
                                        </Border.Background>
                                        <Border.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2"
                                                                             Storyboard.TargetName="BorderBackgroundBrush"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             From="0.4"
                                                                             To="1">
                                                            </DoubleAnimation>
                                                            <DoubleAnimation Duration="0:0:0.2"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             From="{TemplateBinding Opacity}"
                                                                             To="1">
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.1"
                                                                         Storyboard.TargetName="BorderBackgroundBrush"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0">

                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.2"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         From="1"
                                                                         To="{TemplateBinding Opacity}">
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Border.Triggers>
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="True" />
                                                <Condition Property="IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background"
                                                    TargetName="_Border"
                                                    Value="{DynamicResource primaryBackgroundBrush}" />
                                            <Setter Property="Opacity"
                                                    TargetName="_Border"
                                                    Value="1" />

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="False" />
                                                <Condition Property="IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>


                                            <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                            <Setter Property="Background"
                                                    TargetName="_Border"
                                                    Value="{DynamicResource primaryBackgroundBrush}" />
                                            <Setter Property="Opacity"
                                                    TargetName="_Border"
                                                    Value="1" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="False" />
                                                <Condition Property="IsSelected"
                                                           Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity"
                                                    TargetName="_Border"
                                                    Value="0.6" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="True" />
                                                <Condition Property="IsSelected"
                                                           Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity"
                                                    TargetName="_Border"
                                                    Value="0.6" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

                        <Setter Property="Foreground"
                                Value="{StaticResource PrimaryTextBrush}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource PrimaryBrush}" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0,10,0,0">
        <ListBox BorderThickness="0"
                 Background="Transparent"
                 SelectedItem="{Binding SelectedCategory}"
                 ItemsSource="{Binding AvailableCatergories}"
                 ItemContainerStyle="{DynamicResource _listBoxControlModeStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.CatergoryClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type local:StoreCatergoriesView}}}"
                                                       CommandParameter="{Binding .}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Path x:Name="icon"
                                  IsHitTestVisible="False"
                                  Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                  Width="22"
                                  ToolTip="{Binding Description}"
                                  Height="22">
                            </Path>
                        </Grid>
                        <Grid Grid.Row="1">
                            <hc:TransitioningContentControl x:Name="text"
                                                            TransitionMode="Fade">
                                <TextBlock IsHitTestVisible="False"
                                           FontStretch="Condensed"
                                           FontSize="10"
                                           Margin="5"
                                           Style="{DynamicResource TextBlockDefault}"
                                           Text="{Binding Name,Mode=TwoWay}" />
                            </hc:TransitioningContentControl>
                        </Grid>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                     Value="True">
                            <Setter TargetName="text"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="icon"
                                    Property="Margin"
                                    Value="10" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                     Value="False">
                            <Setter TargetName="text"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="icon"
                                    Property="Margin"
                                    Value="10,10,10,0" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>

            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</UserControl>
