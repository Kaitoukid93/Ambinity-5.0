<hc:Window x:Class="adrilight.View.SurfaceEditorWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared" 
           xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:adorners ="clr-namespace:adrilight.View.Adorners"
           xmlns:dataVisualizer ="clr-namespace:adrilight_shared.Models.DataVisualizer;assembly=adrilight_shared"
           xmlns:slaveDevice ="clr-namespace:adrilight_shared.Models.Device.SlaveDevice;assembly=adrilight_shared"
           xmlns:spot ="clr-namespace:adrilight_shared.Models.Device.Zone.Spot;assembly=adrilight_shared"
           xmlns:zone ="clr-namespace:adrilight_shared.Models.Device.Zone;assembly=adrilight_shared"
           xmlns:device ="clr-namespace:adrilight_shared.Models.Device;assembly=adrilight_shared"
           xmlns:drawable ="clr-namespace:adrilight_shared.Models.Drawable;assembly=adrilight_shared"
           xmlns:view ="clr-namespace:adrilight.View"
           Background="{StaticResource RegionBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           WindowState="Maximized"
            ResizeMode="CanResize"
           Height="800" 
           Width="1000" 
           WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SurfaceEditorWindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0Z"
                         Brush="{DynamicResource DarkOpacityBrush}" />
                    <SolidColorBrush x:Key="_primaryBackgroundColor" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </Window.Resources>

    <Grid Margin="10,10,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">

            <richCanvas:RichItemsControl
                ItemsSource="{Binding SurfaceEditorItems}"
                GridStyle="{StaticResource GridStyle}"
                EnableSnapping="False"
                UseLayoutRounding="False"
                GridSpacing="24"
                EnableGrid="False"
                Scrolling="OnScrolling"
                SelectedItems="{Binding SurfaceEditorSelectedItems}"
                ScrollFactor="0.5"
                CanSelectMultipleItems="True"
                RealTimeDraggingEnabled="False"
                RealTimeSelectionEnabled="False"
                Scale="{Binding CanvasScale,Mode=TwoWay}"
                MaxScale="20"
                MinScale="0.1">
                <!--<richCanvas:RichItemsControl.CacheMode>
                    <BitmapCache EnableClearType="False" RenderAtScale="1.0" SnapsToDevicePixels="False"/>
                </richCanvas:RichItemsControl.CacheMode>-->
                <richCanvas:RichItemsControl.SelectionRectangleStyle>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="Transparent" />
                        <Setter Property="Stroke" Value="{DynamicResource PrimaryBrush}" />
                        <Setter Property="StrokeDashArray" Value="2" />
                        <Setter Property="StrokeThickness" Value="{Binding DataContext.SelectionRectangleStrokeThickness,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" />
                    </Style>
                </richCanvas:RichItemsControl.SelectionRectangleStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DataContext.UnselectAllSurfaceEditorItemCommand,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" CommandParameter="unselect" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <richCanvas:RichItemsControl.Resources>
                    <DataTemplate DataType="{x:Type slaveDevice:ARGBLEDSlaveDevice}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding DataContext.LaunchPIDEditWindowCommand,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectSurfaceEditorItemCommand,RelativeSource={RelativeSource AncestorType={x:Type view:SurfaceEditorWindow}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                <Grid>
                                    <Image RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Source="{Binding Thumbnail}"  Height="{Binding Image.Height}" RenderOptions.BitmapScalingMode="HighQuality" Width="{Binding Image.Width}">
                                        <Image.LayoutTransform>
                                            <RotateTransform Angle="{Binding Image.Angle,Mode=TwoWay}"/>
                                        </Image.LayoutTransform>
                                    </Image>
                                </Grid>

                            </Canvas>
                            <ItemsControl
                                    Name="PreviewGird"  
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" 
                                    ItemsSource="{Binding ControlableZones}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas 
                                                HorizontalAlignment="Center" 
                                                VerticalAlignment="Top" 
                                                Name="PreviewCanvas"
                                                Margin="0" 
                                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type zone:LEDSetup}">
                                        <Grid>
                                            <dataVisualizer:ZoneVisualizer Width="{Binding Width}" Height="{Binding Height}" Zone="{Binding}" RenderOptions.BitmapScalingMode="Linear">
                                            </dataVisualizer:ZoneVisualizer>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Grid IsHitTestVisible="{Binding IsDraggable,Mode=TwoWay}">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Background="{DynamicResource PrimaryBrush}">
                                    <TextBlock Text="{Binding Name}"/>
                                </Border>
                            </Grid>
                            <ContentControl>
                                <Rectangle IsHitTestVisible="True" StrokeThickness="0.5"  Height="{Binding Height}" Width="{Binding Width}">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Fill" Value="{DynamicResource _primaryBackgroundColor}"/>
                                                    <Setter Property ="Stroke" Value="{DynamicResource PrimaryBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                    <Setter Property="Fill" Value="Transparent"/>
                                                    <Setter Property ="Stroke" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>

                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </ContentControl>

                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="SelectedAdornerTemplate">
                        <Border BorderBrush="{DynamicResource SecondaryBorderBrush}"
                            BorderThickness="1" CornerRadius="4"
                            Background="{DynamicResource SecondaryRegionBrush}">
                            <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} : {1}">
                                        <Binding Path="Left" />
                                        <Binding Path="Top" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="HoverAdornerTemplate">
                        <Border BorderBrush="{DynamicResource PrimaryBrush}"
                            BorderThickness="0.5">
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type drawable:Border}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Border" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="size" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} x {1}">
                                            <Binding Path="Width" />
                                            <Binding Path="Height" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                            </StackPanel>

                            <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsDraggable}">
                            </Rectangle>
                        </Grid>

                    </DataTemplate>
                    <DataTemplate DataType="{x:Type drawable:ScreenBound}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="20,10,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Border" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top" Text="size" Style="{DynamicResource TextBlockLarge}"/>
                                <TextBlock Margin="5,10" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource TextBlockLarge}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} x {1}">
                                            <Binding Path="Width" />
                                            <Binding Path="Height" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                            </StackPanel>

                            <Rectangle Stroke="{DynamicResource SecondaryBorderBrush}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               StrokeThickness="5"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="False">
                            </Rectangle>
                            <Image Source="{Binding Source}"
                                   Width="{Binding Width}"
                                   Height="{Binding Height}"
                               IsHitTestVisible="False">

                            </Image>
                        </Grid>

                    </DataTemplate>

                </richCanvas:RichItemsControl.Resources>

                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">

                        <!--<Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type richCanvas:RichItemContainer}">
                                    <Border x:Name="Bd" 
                                            Padding="0"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter 
                                            HorizontalAlignment="Center" 
                                            SnapsToDevicePixels="True" 
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryTextBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Bd" Value="1.0"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>-->

                        <Setter Property="helpers:EventToCommand.Event"
                            Value="LeftChanged, TopChanged" />
                        <Setter Property="helpers:EventToCommand.Command">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource CommandsToListConverter}">
                                    <Binding Path="LeftChangedCommand" />
                                    <Binding Path="TopChangedCommand" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="helpers:EventToCommand.CanExecute"
                            Value="{Binding IsSelected}" />
                        <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />
                        <Setter Property="adorners:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />
                        <Setter Property="adorners:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsSelected}" />
                        <Setter Property="Top"
                            Value="{Binding Top, Mode=TwoWay}" />

                        <Setter Property="Left"
                            Value="{Binding Left, Mode=TwoWay}" />

                        <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                        <Setter Property="Width"
                            Value="{Binding Width}" />

                        <Setter Property="Height"
                            Value="{Binding Height}" />

                        <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                        <Setter Property="IsDraggable"
                            Value="{Binding IsDraggable}" />

                        <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                        <Setter Property="ShouldBringIntoView"
                            Value="{Binding ShouldBringIntoView, Mode=TwoWay}" />

                        <!--<Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />-->


                        <Style.Triggers>
                            <Trigger Property="IsDraggable" Value="True">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Rotate 90 Degree CW"
                                          Command="{Binding RotateSelectedSurfaceEditorItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource rotateCW}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <!--<MenuItem Header="Reflect"
                                          Command="{Binding ReflectSelectedSurfaceEditorItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource reflectVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>-->
                                            <Separator Margin="10,5">
                                            </Separator>
                                            <MenuItem Header="Căn lề trái"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource leftAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Căn lề trên"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource topAglign}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp ngang"
                                          Command="{Binding SpreadItemRightHorizontalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledstrip}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Xếp dọc"
                                          Command="{Binding SpreadItemDownVerticalCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource ledStripVertical}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator Margin="10,5">
                                            </Separator>
                                            <MenuItem Header="Khóa"
                                          Command="{Binding LockSelectedItemCommand}" CommandParameter="{Binding SurfaceEditorItems}" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource lock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDraggable" Value="False">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                                            <MenuItem Header="Mở khóa"
                                          Command="{Binding UnlockSelectedItemCommand}" CommandParameter="SUR" >
                                                <MenuItem.Icon>
                                                    <Path Data="{StaticResource unlock}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
            <Grid HorizontalAlignment="Right">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SurfaceEditorSelectedDevice}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <hc:TransitioningContentControl TransitionMode="Left2Right">

                    <Border Effect="{DynamicResource EffectShadow3}"  Margin="0,0,10,10"  HorizontalAlignment="Left" VerticalAlignment="Top" Background="{DynamicResource MainContentBackgroundBrush}" CornerRadius="4">
                        <hc:ScrollViewer MaxHeight="800" IsInertiaEnabled="True">
                            <StackPanel>
                                <Grid>
                                    <StackPanel>
                                        <Grid>
                                            <GroupBox Margin="10"   HorizontalContentAlignment="Left"  Style="{StaticResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="SCALE" />
                                                            </Grid>
                                                            <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Device scale" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <hc:NumericUpDown  Margin="10" HorizontalAlignment="Right" Minimum="1" Maximum="10" Value="{Binding SelectedItemScaleValue, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                    </hc:NumericUpDown>
                                                    <Button HorizontalAlignment="Right" Margin="10" Grid.Column="1" Command="{Binding ApplySelectedItemsScaleCommand}" Content="Apply" Style="{DynamicResource _mediumProfileDefaultButton}"/>
                                                </Grid>

                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="10"  HorizontalContentAlignment="Left"  Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="ROTATION" />

                                                            </Grid>

                                                            <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Điều chỉnh góc quay, ví dụ 90 độ" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <hc:NumericUpDown Margin="10"  VerticalAlignment="Center" HorizontalAlignment="Right" Minimum="0" Maximum="360" Value="{Binding SelectedItemRotationValue, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                    </hc:NumericUpDown>
                                                    <Button HorizontalAlignment="Right" Margin="10" Grid.Column="1" Command="{Binding ApplySelectedItemsRotationCommand}" Content="Apply" Style="{DynamicResource _mediumProfileDefaultButton}"/>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="10"  HorizontalContentAlignment="Left"  Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="LED SETUP" />

                                                            </Grid>
                                                            <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Chỉnh sửa thứ tự LED " />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button Command="{Binding OpenSpotPIDQuickEDitWindowCommand}" CommandParameter="{Binding SurfaceEditorItems}" hc:IconElement.Geometry="{DynamicResource setPID}" HorizontalAlignment="Right" Margin="10" Grid.Column="1" Content="ID Setup" Style="{DynamicResource ButtonDefault}"/>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="10"  HorizontalContentAlignment="Left"  Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="RESTORE" />

                                                            </Grid>
                                                            <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Đặt lại góc quay và kích thước gốc" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button Command="{Binding RestoreSelectedSurfaceDeviceSizeAndRotationCommand}" hc:IconElement.Geometry="{DynamicResource WindowRestoreGeometry}" HorizontalAlignment="Right" Margin="10" Grid.Column="1" Content="Restore" Style="{DynamicResource ButtonDefault}"/>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="10"  HorizontalContentAlignment="Left"  Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Left">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="EXPORT" />

                                                            </Grid>
                                                            <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Xuất file cho Adrilight Store" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button Command="{Binding ExportItemForOnlineStoreCommand}" CommandParameter="{Binding SurfaceEditorSelectedDevice}" hc:IconElement.Geometry="{DynamicResource onlineStore}" HorizontalAlignment="Right" Margin="10" Grid.Column="1" Content="Export" Style="{DynamicResource ButtonDefault}"/>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="0,10,10,10" Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Top">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid Width="400" Margin="0">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="auto" />
                                                                </Grid.ColumnDefinitions>
                                                            <StackPanel>
                                                                <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="COLOR BALANCE AND ORDER" />
                                                                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Chỉnh cân bằng trắng" />
                                                            </StackPanel>

                                                        </Grid>
                                                       
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="32" Margin="20,10,10,10" Text="Red" Style="{DynamicResource TextBlockDefaultSecLight}"/>
                                                            <hc:PreviewSlider Style="{DynamicResource PreviewSliderBaseStyle}" hc:TitleElement.Title="Blue" HorizontalAlignment="Left" Margin="0,10,10,10" Width="200" Minimum="10" Maximum="100" Value="{Binding SurfaceEditorSelectedDevice.WhiteBalanceRed}">
                                                                <hc:PreviewSlider.PreviewContent>
                                                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0" />
                                                                </hc:PreviewSlider.PreviewContent>
                                                            </hc:PreviewSlider>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="32" Margin="20,10,10,10" Text="Green" Style="{DynamicResource TextBlockDefaultSecLight}"/>
                                                            <hc:PreviewSlider Style="{DynamicResource PreviewSliderBaseStyle}" hc:TitleElement.Title="Blue" HorizontalAlignment="Left" Margin="0,10,10,10" Width="200" Minimum="10" Maximum="100" Value="{Binding SurfaceEditorSelectedDevice.WhiteBalanceGreen}">
                                                                <hc:PreviewSlider.PreviewContent>
                                                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0" />
                                                                </hc:PreviewSlider.PreviewContent>
                                                            </hc:PreviewSlider>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="32" Margin="20,25,10,10" Text="Blue" Style="{DynamicResource TextBlockDefaultSecLight}"/>
                                                            <hc:PreviewSlider Style="{DynamicResource PreviewSliderBaseStyle}" hc:TitleElement.Title="Blue" HorizontalAlignment="Left" Margin="0,10,10,10" Width="200" Minimum="10" Maximum="100" Value="{Binding SurfaceEditorSelectedDevice.WhiteBalanceBlue}">
                                                                <hc:PreviewSlider.PreviewContent>
                                                                    <Label Style="{StaticResource LabelPrimary}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0" />
                                                                </hc:PreviewSlider.PreviewContent>
                                                            </hc:PreviewSlider>
                                                        </StackPanel>
                                                        <TextBlock Margin="10" TextWrapping="Wrap"  HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Chỉnh thứ tự màu" />
                                                        <ItemsControl HorizontalAlignment="Left" ItemsSource="{Binding AvailableRGBOrders}" Height="0" Margin="15,0,0,0"/>
                                                        <ComboBox Margin="15,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Center" ItemContainerStyle="{StaticResource _ComboboxItemStyle}" SelectedItem="{Binding SurfaceEditorSelectedDevice.RGBLEDOrder,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding AvailableRGBOrders}"  Style="{StaticResource ComboBoxBaseStyle}"/>
                                                        <hc:Divider Margin="10,0"  LineStroke="{DynamicResource RegionBrush}">
                                                        </hc:Divider>
                                                        <TextBlock Margin="10" HorizontalAlignment="Left" Width="250" TextWrapping="Wrap" Text="Một số loại LED có thứ tự không phải là RGB, hãy click vào từng màu phía bên phải để xem xem màu hiển thị ở LED có trùng với màu trên App không, sau đó thay đổi thứ tự màu đến khi chuẩn"/>
                                                    </StackPanel>
                                                    <Grid Grid.Column="1">
                                                        <StackPanel>
                                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10"  FontWeight="SemiBold" Text="PREVIEW COLORS" />
                                                            <Border Width="100" Height="100" Margin="10" CornerRadius="7">
                                                                <Border.Background>
                                                                    <SolidColorBrush Color="{Binding CurrentPreviewColor}"/>
                                                                </Border.Background>
                                                            </Border>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Button ToolTip="Red" BorderThickness="0" Command="{Binding SetSelectedSurfaceEditorDevicePreviewColorCommand}" CommandParameter="red" Background="Red" Width="25" Height="25" Margin="10">

                                                                </Button>
                                                                <Button ToolTip="Green" BorderThickness="0" Command="{Binding SetSelectedSurfaceEditorDevicePreviewColorCommand}" CommandParameter="green" Background="Green" Width="25" Height="25" Margin="10">

                                                                </Button>
                                                                <Button ToolTip="Blue" BorderThickness="0" Command="{Binding SetSelectedSurfaceEditorDevicePreviewColorCommand}" CommandParameter="blue" Background="Blue" Width="25" Height="25" Margin="10">

                                                                </Button>
                                                                <Button ToolTip="White" BorderThickness="0" Command="{Binding SetSelectedSurfaceEditorDevicePreviewColorCommand}" CommandParameter="white" Background="White" Width="25" Height="25" Margin="10">

                                                                </Button>
                                                            </StackPanel>
                                                            <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                                            </hc:Divider>
                                                            <TextBlock Margin="10" HorizontalAlignment="Left" Width="150" TextWrapping="Wrap" Text="Click vào từng ô màu để đặt màu preview cho LED được chọn, sau cùng chọn màu trắng để chỉnh White balance"/>
                                                        </StackPanel>

                                                    </Grid>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                        <hc:Divider Margin="0"  LineStroke="{DynamicResource RegionBrush}">
                                        </hc:Divider>
                                        <Grid>
                                            <GroupBox Margin="0,10,10,10"  HorizontalContentAlignment="Left"  Style="{DynamicResource GroupBoxOriginal}"  hc:TitleElement.TitlePlacement="Top">
                                                <GroupBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBlock HorizontalAlignment="Left"  FontWeight="SemiBold" Text="INFORMATION" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </GroupBox.HeaderTemplate>

                                                <StackPanel>
                                                    <Grid Margin="20,10,20,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="SemiBold" Text="Device name: "/>
                                                        <TextBlock Grid.Column="1" Text="{Binding SurfaceEditorSelectedDevice.Name}"/>
                                                    </Grid>
                                                    <Grid Margin="20,10,20,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="SemiBold" Text="Manufacturer: "/>
                                                        <TextBlock Grid.Column="1" Text="{Binding SurfaceEditorSelectedDevice.Owner,FallbackValue=Unknown}"/>
                                                    </Grid>
                                                    <Grid Margin="20,10,20,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="SemiBold" Text="Type: "/>
                                                        <TextBlock Grid.Column="1" Text="{Binding SurfaceEditorSelectedDevice.DeviceType,FallbackValue=Unknown}"/>
                                                    </Grid>
                                                    <Grid Margin="20,10,20,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="SemiBold" Text="Zones: "/>
                                                        <TextBlock Grid.Column="1" Text="{Binding SurfaceEditorSelectedDevice.ControlableZones.Count}"/>
                                                    </Grid>
                                                    <Grid Margin="20,10,20,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="SemiBold" Text="Total LEDs: "/>
                                                        <TextBlock Grid.Column="1" Text="{Binding SurfaceEditorSelectedDevice.LEDCount}"/>
                                                    </Grid>
                                                </StackPanel>
                                            </GroupBox>
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </hc:ScrollViewer>
                    </Border>

                </hc:TransitioningContentControl>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Nhấn giữ ctrl và kéo thả để di chuyển nhiều thiết bị. Để chọn nhiều thiết bị, quét hoặc nhấn ctrl rồi click lần lượt vào các thiết bị cần chọn." Style="{DynamicResource TextBlockDefaultWarning}"/>
            <Button  Command="{Binding SaveCurretSurfaceLayoutCommand}" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="2" Content="Save"/>
            <Button Click="Button_Click" Background="Transparent" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="1" Content="Cancel"/>
        </Grid>
    </Grid>
</hc:Window>