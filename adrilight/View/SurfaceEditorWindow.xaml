<hc:Window x:Class="adrilight.View.SurfaceEditorWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter" xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
           mc:Ignorable="d"
           xmlns:behaviors="clr-namespace:adrilight.Helpers.Behaviors"
           xmlns:helpers="clr-namespace:adrilight.Helpers"
           xmlns:local ="clr-namespace:adrilight"
           xmlns:settings ="clr-namespace:adrilight.Settings"
           Background="{StaticResource MainContentBackgroundBrush}"
           x:Name="window"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           
            ResizeMode="CanResize"
           Height="1000" 
           Width="1000" 
           WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:BoolToBorderThicknessConverter x:Key="booltoborderthicknessconverter"/>
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv"/>
                    <GeometryDrawing x:Key="GridStyle"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="Green" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
       
    </Window.Resources>

    <Grid Margin="10,0,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row=" 1" Grid.Column="1">
            <richCanvas:RichItemsControl
                 GridStyle="{StaticResource GridStyle}"
                EnableSnapping="True"
                GridSpacing="10"
                EnableGrid="true"
                Scrolling="OnScrolling"
                CanSelectMultipleItems="True"
                RealTimeDraggingEnabled="False"
                RealTimeSelectionEnabled="False"
                
                SelectedItems="{Binding SurfaceEditorSelectedItems}" 
                SelectedItem="{Binding SurfaceEditorSelectedItem}"  
                ItemsSource="{Binding SurfaceEditorItems}">
                

                <richCanvas:RichItemsControl.Resources>
                    <DataTemplate DataType="{x:Type local:OutputSettings}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.Style>
                                <Style>
                                    <Setter Property="richCanvas:RichItemContainer.ApplyTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <TranslateTransform />
                                                <RotateTransform Angle="{Binding Angle}" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                          
                            </Grid.Style>
                          
                            
                            <Grid>
                                <ItemsControl   BorderBrush="Green" BorderThickness="{Binding IsBorder, Converter= {StaticResource booltoborderthicknessconverter}}"
                          Name="PreviewGird"  
                          
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top" 
                          ItemsSource="{Binding OutputLEDSetup.Spots,Mode=TwoWay}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Name="PreviewCanvas"
                               
                                Margin="0" 
                                Width="{Binding Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                Height="{Binding Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                            </Canvas>
                                            
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{Binding Rectangle.X}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding Rectangle.Y}"/>
                                           
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Rectangle
                                                ToolTip="{Binding id}" 
                                                Stroke="OrangeRed" 
                                               
                                                StrokeThickness="{Binding BorderThickness}" 
                                                Width="{Binding Rectangle.Width,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                Height="{Binding Rectangle.Height,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                                    </Rectangle.Fill>
                                                    <Rectangle.Style>
                                                        <Style TargetType="{x:Type Rectangle}">

                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity"  Value="0.5"/>

                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>

                                                    <!--<i:Interaction.Triggers>
                                                    -->
                                                    <!--<i:EventTrigger EventName="MouseDown" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetNextSpotVIDCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" />
                                                    </i:EventTrigger>-->
                                                    <!--
                                                   
                                                </i:Interaction.Triggers>-->

                                                </Rectangle>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>

                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="SelectedAdornerTemplate">
                        <Border BorderBrush="{DynamicResource SecondaryBorderBrush}"
                            BorderThickness="1" CornerRadius="4"
                            Background="{DynamicResource SecondaryRegionBrush}">
                            <TextBlock Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   MaxWidth="60">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} : {1}">
                                        <Binding Path="Left" />
                                        <Binding Path="Top" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="HoverAdornerTemplate">
                        <Border BorderBrush="DodgerBlue"
                            BorderThickness="3">
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type settings:Group}">
                        <Rectangle Stroke="white"
                               StrokeThickness="3"
                               Fill="Transparent"
                               StrokeDashArray="2"
                               IsHitTestVisible="{Binding IsSelectable}">
                            <i:Interaction.Behaviors>
                                <behaviors:GroupBehavior />
                            </i:Interaction.Behaviors>
                        </Rectangle>
                    </DataTemplate>
                  
                </richCanvas:RichItemsControl.Resources>

                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">
                        <Setter Property="IsDraggable"
                            Value="{Binding IsBorder,Converter={StaticResource booltoVreconv}}" />
                        <Setter Property="helpers:EventToCommand.Event"
                            Value="LeftChanged, TopChanged" />
                            <Setter Property="helpers:EventToCommand.Command">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource CommandsToListConverter}">
                                        <Binding Path="LeftChangedCommand" />
                                        <Binding Path="TopChangedCommand" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
  
                            <Setter Property="helpers:EventToCommand.CanExecute"
                            Value="{Binding IsSelected}" />

                            <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=window}" />

                            <Setter Property="helpers:AttachedAdorner.HasHoverAdorner"
                            Value="{Binding IsSelectable}" />

                            <Setter Property="helpers:AttachedAdorner.ShowResizeAdorner"
                            Value="{Binding IsSelected}" />

                            <Setter Property="Top"
                            Value="{Binding Top, Mode=TwoWay}" />

                            <Setter Property="Left"
                            Value="{Binding Left, Mode=TwoWay}" />

                            <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />

                            <Setter Property="Width"
                            Value="{Binding Width, Mode=TwoWay}" />

                            <Setter Property="Height"
                            Value="{Binding Height, Mode=TwoWay}" />

                            <Setter Property="IsSelectable"
                            Value="{Binding IsSelectable}" />

                            <Setter Property="IsDraggable"
                            Value="{Binding IsDraggable}" />

                            <Setter Property="HasCustomBehavior"
                            Value="{Binding HasCustomBehavior}" />

                            <Setter Property="ShouldBringIntoView"
                            Value="{Binding ShouldBringIntoView, Mode=TwoWay}" />

                            <Setter Property="Scale"
                            Value="{Binding Scale, Mode=TwoWay}" />

                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Scale"
                                          Command="{Binding OpenRectangleScaleCommand}" CommandParameter="open" >
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource fullsize}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="LED Setup"
                                          Command="{Binding AddSelectedItemToGroupCommand}" >
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource ledsetup}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Properties"
                                          Command="{Binding AddSelectedItemToGroupCommand}" >
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource info}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Live View"
                                          Command="{Binding AddSelectedItemToGroupCommand}" >
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource brightness}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Reset Size"
                                          Command="{Binding ResetToDefaultRectangleScaleCommand}" >
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource fullspectrum}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    
                                        <MenuItem Header="Aglign Left"
                                          Command="{Binding AglignSelectedItemstoLeftCommand}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource left}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Aglign Top"
                                          Command="{Binding AglignSelectedItemstoTopCommand}" >
                                            <MenuItem.Icon>
                                                <Path Data="{StaticResource up}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    
                                </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsSelected"
                                 Value="True">
                                    <Setter Property="Opacity"
                                    Value="0.6" />
                                </Trigger>
                            </Style.Triggers>

                       
                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
        </Grid>
        

    </Grid>
</hc:Window>