<UserControl x:Class="adrilight.View.DeviceCanvas.LayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:adrilight.View.DeviceCanvas"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:zone="clr-namespace:adrilight_shared.Models.Device.Zone;assembly=adrilight_shared"
             xmlns:drawable="clr-namespace:adrilight_shared.Models.Drawable;assembly=adrilight_shared"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:vm="clr-namespace:adrilight_shared.ViewModel;assembly=adrilight_shared"
             mc:Ignorable="d"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             x:Name="window"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             d:DataContext="{Binding Source={StaticResource Locator}, Path=DeviceCanvasViewModel}"
             DataContext="{Binding Source={StaticResource Locator}, Path=DeviceCanvasViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <converters:CommandToListConverter x:Key="CommandsToListConverter" />
                    <converters:StaticResourceConverter x:Key="staticResourceConverter" />
                    <converters:ThicknessToDoubleConverter x:Key="Double2ThicknessConverter" />
                    <SolidColorBrush x:Key="primaryBackgroundBrush"
                                     Color="{Binding Color, Source={StaticResource PrimaryBrush}}"
                                     Opacity="0.15" />
                    <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow"
                                      BlurRadius="10"
                                      RenderingBias="Quality"
                                      ShadowDepth="1"
                                      Color="{Binding Color, Source={StaticResource DarkMaskBrush}}" />
                    <hc:Boolean2BooleanReConverter x:Key="booltoVreconv" />
                    <GeometryDrawing x:Key="GridStyle"
                                     Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                                     Brush="{DynamicResource SecondaryBorderBrush}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Border Background="{DynamicResource MainContentBackgroundBrush}"
                CornerRadius="4"
                Width="200"
                Height="300"
                Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <TextBlock Text="LAYERS"
                               Margin="10"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               Style="{DynamicResource TextBlockDefaultSecLight}" />
                </Grid>
                <hc:ScrollViewer Grid.Row="1"
                                 IsInertiaEnabled="True">
                    <ItemsControl VerticalAlignment="Top"
                                  Margin="5"
                                  ItemsSource="{Binding Canvas.Layers}">
                        <ItemsControl.Resources>
                            <Storyboard x:Key="SelectedTransition"
                                        x:Shared="False">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 From="0.1"
                                                 To="0.5"
                                                 Duration="0:0:0.2">
                                </DoubleAnimation>
                            </Storyboard>
                            <DataTemplate DataType="{x:Type drawable:Border}">
                                <Border MouseEnter="Border_MouseEnter"
                                        MouseLeave="Border_MouseLeave"
                                        Height="32"
                                        Margin="5,0,5,1"
                                        Background="{DynamicResource SecondaryRegionBrush}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.LayerViewMouseButtonDownCommand,RelativeSource={RelativeSource AncestorType={x:Type local:LayerView}}}"
                                                                   CommandParameter="{Binding .}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid>
                                        <hc:TransitioningContentControl TransitionStoryboard="{DynamicResource SelectedTransition}"
                                                                        Visibility="{Binding IsMouseOver, Converter={StaticResource boolToVisibilityConvert}}">
                                            <Grid IsHitTestVisible="False">
                                                <Border Background="White">
                                                </Border>
                                            </Grid>
                                        </hc:TransitioningContentControl>
                                        <Grid IsHitTestVisible="False">
                                            <Border Opacity="0.3"
                                                    IsVisibleChanged="Border_IsVisibleChanged"
                                                    Visibility="{Binding IsSelected,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                    Background="White">
                                            </Border>
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />

                                            </Grid.ColumnDefinitions>
                                            <Border>
                                                <Path Margin="10,0,0,0"
                                                      Width="15"
                                                      Height="15"
                                                      Fill="{DynamicResource PrimaryTextBrush}"
                                                      Data="{DynamicResource UnionIcon}"
                                                      Stretch="Uniform">
                                                </Path>
                                            </Border>
                                            <TextBlock Margin="20,0,0,0"
                                                       HorizontalAlignment="Left"
                                                       Style="{DynamicResource TextBlockDefault}"
                                                       FontWeight="SemiBold"
                                                       Grid.Column="1"
                                                       Text="{Binding Name,TargetNullValue=Zone}" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type zone:LEDSetup}">
                                <Border MouseEnter="Border_MouseEnter"
                                        MouseLeave="Border_MouseLeave"
                                        Height="32"
                                        Margin="5,0,5,1"
                                        Background="{DynamicResource SecondaryRegionBrush}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.LayerViewMouseButtonDownCommand,RelativeSource={RelativeSource AncestorType={x:Type local:LayerView}}}"
                                                                   CommandParameter="{Binding .}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid>
                                        <hc:TransitioningContentControl TransitionStoryboard="{DynamicResource SelectedTransition}"
                                                                        Visibility="{Binding IsMouseOver, Converter={StaticResource boolToVisibilityConvert}}">
                                            <Grid IsHitTestVisible="False">
                                                <Border Background="White">
                                                </Border>
                                            </Grid>
                                        </hc:TransitioningContentControl>
                                        <Grid IsHitTestVisible="False">
                                            <Border Opacity="0.3"
                                                    IsVisibleChanged="Border_IsVisibleChanged"
                                                    Visibility="{Binding IsSelected,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                    Background="White">
                                            </Border>
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />

                                            </Grid.ColumnDefinitions>
                                            <Border>
                                                <Path Margin="10,0,0,0"
                                                      Width="15"
                                                      Height="15"
                                                      Fill="{DynamicResource PrimaryTextBrush}"
                                                      Data="{DynamicResource ZoneIcon}"
                                                      Stretch="Uniform">
                                                </Path>
                                            </Border>
                                            <TextBlock Margin="20,0,0,0"
                                                       HorizontalAlignment="Left"
                                                       Style="{DynamicResource TextBlockDefault}"
                                                       FontWeight="SemiBold"
                                                       Grid.Column="1"
                                                       Text="{Binding Name,TargetNullValue=Zone}" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </ItemsControl>
                </hc:ScrollViewer>
            </Grid>


        </Border>
    </Grid>
</UserControl>
