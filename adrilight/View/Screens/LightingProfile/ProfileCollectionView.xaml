<UserControl x:Class="adrilight.View.ProfileCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
             xmlns:store="clr-namespace:adrilight_shared.Models.Store;assembly=adrilight_shared"
             xmlns:enums="clr-namespace:adrilight_shared.Enums;assembly=adrilight_shared"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:lighting="clr-namespace:adrilight_shared.Models.Lighting;assembly=adrilight_shared"
             mc:Ignorable="d"
             xmlns:model="clr-namespace:adrilight_shared.Models;assembly=adrilight_shared"
             xmlns:properties="clr-namespace:adrilight_shared.Properties;assembly=adrilight_shared"
             d:DataContext="{d:DesignInstance model:DataCollection, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <DataTemplate x:Key="_horizontalCardItemTemplate"
                                  DataType="{x:Type lighting:LightingProfile}">
                        <Button Width="300"
                                Height="100"
                                Padding="0"
                                Margin="5"
                                Command="{Binding Path=DataContext.PlaySelectedItemCommand, RelativeSource={RelativeSource AncestorType={x:Type local:LightingProfileManagerWindow}}}"
                                CommandParameter="{Binding .}"
                                hc:BorderElement.CornerRadius="7"
                                Style="{DynamicResource _mediumProfileDefaultButton}"
                                BorderThickness="0"
                                Background="{DynamicResource MainContentBackgroundBrush}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Width="90"
                                        CornerRadius="4"
                                        Margin="5"
                                        Background="{DynamicResource SecondaryRegionBrush}">
                                    <hc:Gravatar Id="{Binding Name}">

                                    </hc:Gravatar>

                                </Border>
                                <Grid Grid.Column="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Vertical">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock HorizontalAlignment="Left"
                                                           Text="{Binding Name}"
                                                           Grid.Column="0"
                                                           Margin="5"
                                                           Style="{DynamicResource TextBlockSubTitle}"
                                                           FontWeight="SemiBold"
                                                           TextTrimming="CharacterEllipsis" />
                                                <CheckBox IsChecked="{Binding IsChecked}"
                                                          Command="{Binding Path=DataContext.ItemCheckUncheckCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ProfileCollectionView}}}"
                                                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                          Margin="5"
                                                          BorderBrush="{DynamicResource SecondaryTextBrush}"
                                                          BorderThickness="1"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Top">
                                                    <CheckBox.Style>
                                                        <Style TargetType="CheckBox"
                                                               BasedOn="{StaticResource CheckBoxBaseStyle}">
                                                            <Setter Property="Visibility"
                                                                    Value="Collapsed" />
                                                            <Setter Property="Background"
                                                                    Value="Transparent" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsChecked}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>

                                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                    <Setter Property="Background"
                                                                            Value="{DynamicResource PrimaryBrush}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsDeleteable}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>

                                                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{StaticResource PrimaryBrush}" />-->
                                                                    <Setter Property="Visibility"
                                                                            Value="Visible" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </CheckBox.Style>
                                                </CheckBox>
                                            </Grid>
                                            <Border Margin="5"
                                                    HorizontalAlignment="Left"
                                                    Background="{DynamicResource SecondaryRegionBrush}"
                                                    CornerRadius="2">
                                                <TextBlock Text="{Binding ControlMode.BasedOn}"
                                                           HorizontalAlignment="Left"
                                                           Margin="5,2"
                                                           Style="{DynamicResource TextBlockDefaultSecLight}"
                                                           FontWeight="SemiBold" />
                                            </Border>

                                        </StackPanel>
                                        <Grid Grid.Row="1">
                                            <Grid>
                                                <StackPanel HorizontalAlignment="Right"
                                                            Orientation="Horizontal">
                                                    <!--<Button Width="25"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Bottom"
                                                            Height="25"
                                                            Background="Transparent"
                                                            ToolTip="Activate"
                                                            hc:IconElement.Width="15"
                                                            hc:IconElement.Height="15"
                                                            Style="{DynamicResource ButtonDashed}"
                                                            BorderBrush="Transparent"
                                                            hc:IconElement.Geometry="{DynamicResource addTo}"
                                                            Padding="0"
                                                            Margin="5">
                                                    </Button>-->
                                                    <ToggleButton Background="Transparent"
                                                                  IsChecked="{Binding IsPinned}"
                                                                  hc:IconElement.Width="15"
                                                                  hc:IconElement.Height="15"
                                                                  Command="{Binding Path=DataContext.ItemPinUnPinCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ProfileCollectionView}}}"
                                                                  CommandParameter="{Binding .}"
                                                                  Padding="0"
                                                                  BorderThickness="0"
                                                                  Width="25"
                                                                  Height="25"
                                                                  Margin="5"
                                                                  hc:IconSwitchElement.Geometry="{DynamicResource pin}"
                                                                  hc:IconSwitchElement.GeometrySelected="{DynamicResource pinned}">
                                                        <ToggleButton.Style>
                                                            <Style TargetType="ToggleButton"
                                                                   BasedOn="{StaticResource ToggleButtonIcon}">
                                                                <Setter Property="Foreground"
                                                                        Value="White" />
                                                                <Setter Property="ToolTip"
                                                                        Value="Pin to Dashboard" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsPinned}"
                                                                                 Value="True">
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource PrimaryBrush}" />
                                                                        <Setter Property="ToolTip"
                                                                                Value="Unpin from Dashboard" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    <!--<Button Width="25"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Bottom"
                                                            Height="25"
                                                            Background="Transparent"
                                                            ToolTip="Activate"
                                                            Command="{Binding Path=DataContext.DeleteSelectedLightingProfileCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                            CommandParameter="{Binding .}"
                                                            hc:IconElement.Width="15"
                                                            hc:IconElement.Height="15"
                                                            Style="{DynamicResource ButtonDashed}"
                                                            BorderBrush="Transparent"
                                                            hc:IconElement.Geometry="{DynamicResource delete}"
                                                            Padding="0"
                                                            Margin="5">
                                                    </Button>-->
                                                </StackPanel>

                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>

                            </Grid>
                        </Button>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <Popup Effect="{DynamicResource EffectShadow5}"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=addToButton}"
                       AllowsTransparency="True"
                       Grid.Column="2"
                       Grid.ColumnSpan="2"
                       HorizontalOffset="140"
                       HorizontalAlignment="Center"
                       x:Name="PopUpAddTo"
                       VerticalOffset="32"
                       StaysOpen="False">
                    <hc:TransitioningContentControl Effect="{DynamicResource EffectShadow1}"
                                                    TransitionMode="Top2Bottom">
                        <Border Margin="15,15,5,15"
                                Background="{DynamicResource MainContentBackgroundBrush}"
                                CornerRadius="4">
                            <StackPanel Orientation="Vertical">

                                <Button hc:IconElement.Geometry="{DynamicResource addnew}"
                                        Height="40"
                                        hc:IconElement.Height="15"
                                        Background="Transparent"
                                        Click="Close_Popup_Button_Click"
                                        HorizontalAlignment="Left"
                                        BorderThickness="0"
                                        Command="{Binding CreateNewCollectionFromSelectedItemsCommand}"
                                        Content="Add new playList" />
                                <hc:Divider Margin="0"
                                            Orientation="Horizontal"
                                            LineStroke="{StaticResource RegionBrush}">
                                </hc:Divider>
                                <ItemsControl Margin="0,0,0,0"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              ItemsSource="{Binding Path = DataContext.AvailableLightingProfilePlaylists.Items,RelativeSource={RelativeSource AncestorType={x:Type local:LightingProfileManagerWindow}}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button HorizontalAlignment="Left"
                                                    Background="Transparent"
                                                    Height="40"
                                                    Click="Close_Popup_Button_Click"
                                                    hc:IconElement.Height="20"
                                                    hc:IconElement.Geometry="{DynamicResource profilePlaylist}"
                                                    Command="{Binding Path = DataContext.SelectItems,RelativeSource={RelativeSource AncestorType={x:Type local:ProfileCollectionView}}}"
                                                    CommandParameter="{Binding Name}"
                                                    BorderThickness="0">
                                                <TextBlock Text="{Binding Name}"
                                                           MaxWidth="100"
                                                           TextTrimming="CharacterEllipsis" />
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>
                    </hc:TransitioningContentControl>
                </Popup>
                <Border  Margin="15,10"
                         Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityReConverter}}"
                         Height="50"
                         CornerRadius="7"
                         Background="Transparent">
                    <Grid>

                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                            <Button BorderThickness="0"
                                    Height="32"
                                    Foreground="{DynamicResource RegionBrush}"
                                    Style="{DynamicResource ButtonPrimary}"
                                    hc:IconElement.Geometry="{DynamicResource shuffle}"
                                    Margin="0"
                                    hc:IconElement.Height="15"
                                    Content="{x:Static properties:Resources.ProfileCollectionView_ShuffleAndPlay_Button_Content}" />
                        </StackPanel>
                    </Grid>
                </Border>
                <hc:TransitioningContentControl Visibility="{Binding ShowManagerToolBar,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                TransitionMode="Top2BottomWithFade">
                    <Border  Margin="15,10"
                             Height="50"
                             CornerRadius="7"
                             Effect="{DynamicResource EffectShadow1}"
                             Background="{DynamicResource MainContentBackgroundBrush}">
                        <Grid>

                            <StackPanel HorizontalAlignment="Right"
                                        Orientation="Horizontal">
                                <!--<Button BorderThickness="0"
                                        Height="32"
                                        Background="{DynamicResource SecondaryRegionBrush}"
                                        hc:IconElement.Geometry="{DynamicResource lightingProfilePlayNext}"
                                        Margin="10,5"
                                        hc:IconElement.Height="20"
                                        Content="Play next" />-->
                                <Button BorderThickness="0"
                                        x:Name="addToButton"
                                        Click="AddToButton_Click"
                                        Background="{DynamicResource SecondaryRegionBrush}"
                                        hc:IconElement.Geometry="{DynamicResource addTo}"
                                        Margin="10,5"
                                        Height="32"
                                        hc:IconElement.Height="18"
                                        Content="Add to" />
                                <Button BorderThickness="0"
                                        Background="{DynamicResource SecondaryRegionBrush}"
                                        hc:IconElement.Geometry="{DynamicResource remove}"
                                        Command="{Binding OpenDeleteDialogCommand}"
                                        CommandParameter=""
                                        Margin="10,5"
                                        Height="32"
                                        hc:IconElement.Height="15"
                                        Content="Remove" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </hc:TransitioningContentControl>

            </Grid>
            <hc:ScrollViewer Grid.Row="1"
                             Margin="5,5,5,105"
                             IsInertiaEnabled="True">
                <ItemsControl Margin="5,10,0,10"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              ItemTemplate="{DynamicResource _horizontalCardItemTemplate}"
                              ItemsSource="{Binding Items}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </hc:ScrollViewer>
        </Grid>
    </hc:TransitioningContentControl>
</UserControl>