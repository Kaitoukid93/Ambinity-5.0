<hc:Window x:Class="adrilight.View.AmbinoOnlineStoreView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:converters="clr-namespace:adrilight_shared.Converter;assembly=adrilight_shared"
           mc:Ignorable="d"
           xmlns:local="clr-namespace:adrilight.View"
           Background="{StaticResource RegionBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           Height="920" 
           Width="1000" 
           MinWidth="500"
           WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <SolidColorBrush x:Key="primaryBackgroundBrush" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.15"/>
                    <Style x:Key="_listBoxControlModeStyle" TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="2"
                                Width="64"
                                Height="60"
                                Background="Transparent"   
                                BorderBrush="{StaticResource DarkMaskBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="_Border" Value="{DynamicResource primaryBackgroundBrush}"/>

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>


                                            <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->

                                            <Setter Property="Background" TargetName="_Border" Value="{DynamicResource primaryBackgroundBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>

                                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                            <Setter Property="Background" TargetName="_Border" Value="{DynamicResource SecondaryRegionBrush}"/>
                                            <!--<Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>-->
                                        </MultiTrigger>


                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->

                        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                    <DataTemplate x:Key="_itemsColletionView">
                        <local:OnlineItemsCollectionView/>
                    </DataTemplate>
                    <DataTemplate x:Key="_homeView">
                        <local:StoreHomePageView/>
                    </DataTemplate>
                    <DataTemplate x:Key="_detailsView">
                        <local:OnlineItemDetailView/>
                    </DataTemplate>
                    <Style x:Key="_rightPanelView" TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentOnlineStoreView}" Value="Collections">
                                <Setter Property="ContentTemplate" Value="{StaticResource _itemsColletionView}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentOnlineStoreView}" Value="Details">
                                <Setter Property="ContentTemplate" Value="{StaticResource _detailsView}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentOnlineStoreView}" Value="Home">
                                <Setter Property="ContentTemplate" Value="{StaticResource _homeView}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="10,5,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <!--Logo and name of the store-->
        <Grid>

        </Grid>
        <!--Content-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--side panel category selection-->
            <Grid Margin="0,10,0,0">
                <ListBox IsEnabled="{Binding CarouselImageLoading,Converter={StaticResource Boolean2BooleanReConverter}}" SelectedItem="{Binding CurrentSelectedCategory,Mode=TwoWay}" BorderThickness="0" Background="Transparent" ItemsSource="{Binding AvailableStoreCategories}" ItemContainerStyle="{DynamicResource _listBoxControlModeStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Path x:Name="icon" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=Foreground}" 
                                                  Stretch="Uniform" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}"
                                                  Width="22" 
                                                  ToolTip="{Binding Description}"
                                                  Height="22">
                                    </Path>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <TextBlock x:Name="text" FontStretch="Condensed" FontSize="10" Margin="5" Style="{DynamicResource TextBlockDefault}" Text="{Binding Name,Mode=TwoWay}"/>
                                </Grid>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter TargetName="text" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="icon" Property="Margin" Value="10"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                    <Setter TargetName="text" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="icon" Property="Margin" Value="10,10,10,0"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <!--collection and details view-->
            <Grid Grid.Column="1">
                <Grid>
                    <hc:TransitioningContentControl Grid.Column="1" TransitionMode="Right2LeftWithFade">
                        <ContentControl Content="{Binding .,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource _rightPanelView}"  >
                        </ContentControl>
                    </hc:TransitioningContentControl>
                </Grid>
            </Grid>
        </Grid>




    </Grid>
</hc:Window>