<hc:Window x:Class="adrilight.View.OOTBWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:converters="clr-namespace:adrilight.Converter"
           mc:Ignorable="d"
           Background="{StaticResource MainContentBackgroundBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="NoResize"
           SizeToContent="WidthAndHeight"
           MaxHeight="1000" 
           Width="400"
           xmlns:local ="clr-namespace:adrilight.View"
           WindowStartupLocation="CenterOwner" 
           Left="0" Top="0">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Style x:Key="_ListBoxCardsCollectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="7" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="{StaticResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="BorderBrush" TargetName="_Border" Value="Transparent"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>



                                    <Setter Property="BorderBrush" TargetName="_Border" Value="Transparent"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu >
                            <MenuItem  Header="Set All Output" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.SetActivePaletteAllOutputsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource selected}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Set All Device" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.SetActivePaletteAllDevicesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource setall}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Edit"
                                          Command="{Binding PlacementTarget.Tag.EditSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="overwrite"
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource edit}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Share" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.ExportCurrentSelectedPaletteToFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource export}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Header="Delete" CommandParameter="{Binding .}" 
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>

                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenuService.Placement" Value="Bottom">

                </Setter>
            </Style>
            <DataTemplate x:Key="_welcomeView">
                <Grid>
                    <!--Welcome-->
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
                        <StackPanel Orientation="Vertical">
                            <Grid>
                                <Path HorizontalAlignment="Center"  Stretch="Uniform" Margin="10" Data="{StaticResource ootb}" 
                                      Width="200" 
                                      Height="200" 
                                      Fill="{DynamicResource PrimaryBrush}"/>
                            </Grid>
                            <Grid>
                                <StackPanel>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Center" Margin="20" Text="Cảm ơn bạn đã chọn sản phẩm của Ambino!" Style="{DynamicResource TextBlockTitle}"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="15,50,0,10" Text="Sau đây là một số cài đặt cơ bản để giúp bạn sử dụng sản phẩm dễ dàng hơn" Style="{DynamicResource TextBlockDefaultWarning}" TextWrapping="Wrap"/>
                                </StackPanel>

                            </Grid>
                        </StackPanel>
                    </hc:TransitioningContentControl>


                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="_outputMapingView">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OOTBStage}" Value="1">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <hc:TransitioningContentControl TransitionMode="Bottom2TopWithFade">
                        <local:DeviceOutputMapingView Margin="40" Width="500" Height="500">

                        </local:DeviceOutputMapingView>

                    </hc:TransitioningContentControl>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="_lightingModeSelectionView">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OOTBStage}" Value="2">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button hc:BorderElement.CornerRadius="8" Height="auto"  Padding="0" Grid.Column="0"  BorderBrush="Transparent"  Style="{StaticResource ButtonDefault}">
                        <Border Margin="1"  CornerRadius="7" Background="{StaticResource RegionBrush}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Path Stretch="Uniform" Margin="10" Data="{Binding CurrentSelectedLightingMode.Geometry,Converter={converters:StaticResourceConverter}}" 
                                      Width="35" 
                                      Height="35" 
                                      Fill="{StaticResource PrimaryBrush}"/>
                                <TextBlock Style="{StaticResource TextBlockTitleBold}" Margin="5,0,10,0" Grid.Column="1" Text="{Binding CurrentSelectedLightingMode.Name}" />




                                <!--<Popup   AllowsTransparency="True" Grid.Column="2" Grid.ColumnSpan="2" HorizontalOffset="15" x:Name="PopupMode" VerticalOffset="6" StaysOpen="False">
                                    <hc:TransitioningContentControl  TransitionMode="Top2Bottom">
                                        <Border  BorderThickness="1" BorderBrush="{DynamicResource DarkMaskBrush}" Effect="{DynamicResource EffectShadow3}"  Margin="15,0,15,15" Background="{StaticResource RegionBrush}" CornerRadius="7">
                                            <ListBox SelectedItem="{Binding CurrentSelectedLightingMode}" SelectedIndex="{Binding CurrentOutput.OutputSelectedMode}" SelectionChanged="NewModeSelected"  x:Name="lightingmode_selection"  
                                                 ItemContainerStyle="{StaticResource _listBoxGeneralModeSelectionStyle}"  
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 ItemsSource="{Binding AvailableLightingMode}"
                                                 Style="{StaticResource StackPanelVerticalListBox}">

                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel>

                                                        </StackPanel>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>

                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{StaticResource TextBlockDefault}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>

                                            </ListBox>
                                        </Border>
                                    </hc:TransitioningContentControl>

                                </Popup>-->
                            </Grid>
                        </Border>
                    </Button>
                </Grid>
            </DataTemplate>
            <Style x:Key="_ootbContent" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                        <Setter Property="ContentTemplate" Value="{StaticResource _welcomeView}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding OOTBStage}" Value="1">
                        <Setter Property="ContentTemplate" Value="{StaticResource _outputMapingView}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding OOTBStage}" Value="2">
                        <Setter Property="ContentTemplate" Value="{StaticResource _lightingModeSelectionView}" />
                    </DataTrigger>

                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="10,0,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <TextBlock  VerticalAlignment="Top" Margin="20,0,20,20">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockLarge}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                                <Setter Property="Text" Value="Thank you"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="1">
                                <Setter Property="Text" Value="Cấu hình LED"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="2">
                                <Setter Property="Text" Value="Hiệu ứng"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="3">
                                <Setter Property="Text" Value="Hoàn tất"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>

            </TextBlock>
        </Grid>
        <Grid Grid.Row="1">

            <ContentControl Content="{Binding .,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource _ootbContent}"  >
            </ContentControl>

        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Margin="10"  Grid.Column="2" CommandParameter="done">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                                <Setter Property="Command" Value="{Binding NextOOTBCommand}"/>
                                <Setter Property="Content" Value="Next"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="1">
                                <Setter Property="Command" Value="{Binding NextOOTBCommand}"/>
                                <Setter Property="Content" Value="Next"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="2">
                                <Setter Property="Command" Value="{Binding FinishOOTBCommand}"/>
                                <Setter Property="Content" Value="Finish"/>
                            </DataTrigger>
                            <!--<DataTrigger Binding="{Binding OOTBStage}" Value="3">
                                <Setter Property="Command" Value="{Binding FinishOOTBCommand}"/>
                                <Setter Property="Content" Value="Finish"/>
                            </DataTrigger>-->
                        </Style.Triggers>
                    </Style>
                    
                </Button.Style>

            </Button>
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                            <CheckBox x:Name="askAgain" Content="Không hỏi lại lần nữa" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,5" IsChecked="False"/>
            </Grid>
           
            <Button CommandParameter="back" Background="Transparent" Margin="10" Grid.Column="1">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="0">
                                <Setter Property="Command" Value="{Binding SkipOOTBCommand}"/>
                                <Setter Property="Content" Value="Skip"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="1">
                                <Setter Property="Command" Value="{Binding PrevioustOOTBCommand}"/>
                                <Setter Property="Content" Value="Back"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="2">
                                <Setter Property="Command" Value="{Binding PrevioustOOTBCommand}"/>
                                <Setter Property="Content" Value="Back"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OOTBStage}" Value="3">
                                <Setter Property="Command" Value="{Binding PrevioustOOTBCommand}"/>
                                <Setter Property="Content" Value="Back"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </Button.Style>
            </Button>

        </Grid>


    </Grid>
</hc:Window>