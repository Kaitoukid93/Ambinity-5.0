<UserControl x:Class="adrilight.View.AllDeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:adrilight.View"
             xmlns:deviceSettings="clr-namespace:adrilight"
             Background="{DynamicResource RegionBrush}"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:converters="clr-namespace:adrilight.Converter"
             mc:Ignorable="d" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             
        TextElement.FontWeight="Regular"
        
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"         
             Name="alldevice"
       
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
            <converters:Inverseboolvisibility x:Key="InverseBoolToVisConverter"/>
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Gold"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="BlueViolet" Opacity="25"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="BlueViolet" Opacity="25"/>
           
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="20"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
            <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
             
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <!--<Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu >
                            <MenuItem  Header="Share">
                            </MenuItem>
                            <MenuItem  Header="Delete" Command="{Binding PlacementTarget.Tag.LaunchDeleteSelectedDeviceWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource delete}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>

                    </Setter.Value>
                </Setter>-->



                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Margin="8" CornerRadius="15" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                   
                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="4"/>-->
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                   
                                    <!--<Setter Property="BorderThickness" TargetName="Bd" Value="6"/>-->
                                    <Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
         

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid Margin="10,10,10,10" >

      
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Grid  Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
               
                <TextBlock
                    Margin="10,10,10,10" 
                    Grid.Row="0" 
                    Grid.Column="0" 
                    Text="DASHBOARD"  
                    
                    VerticalAlignment="Center" 
                    FontWeight="SemiBold"
                    Style="{DynamicResource TextBlockSubTitle}"
                    HorizontalAlignment="Left"/>
                <!--<hc:ButtonGroup Grid.Column="1" Margin="50,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <RadioButton x:Name ="allDevices"  Content="All Devices" IsChecked="True"/>
                    <RadioButton x:Name="allGroups" Content="Groups"/>

                </hc:ButtonGroup>-->
            </Grid>
           
            <TextBlock 
                Margin="10,0,0,20" 
                Grid.Row="1" 
                Grid.Column="0" 
                Text="Tất cả các thiết bị đã từng được thêm sẽ xuất hiện ở đây. Click vào từng thẻ để điều chỉnh" 
                Style="{DynamicResource TextBlockDefaultSecLight}"
                VerticalAlignment="Top" 
                HorizontalAlignment="Left" 
                />
        </Grid>
        


        <Grid x:Name="parrentGrid" Grid.Row="1" >





          <!-- all devices-->
            <ListView  Margin="0" 
                       
                       Name="itm" 
                       ItemsSource="{Binding AvailableDevices,UpdateSourceTrigger=PropertyChanged}"                        
                       IsTabStop="False"
                       ItemContainerStyle="{StaticResource ListViewContainerStyle}"
                       BorderThickness="0" 
                       Tag="{Binding}"
                       HorizontalAlignment="Left">

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Margin="0" 
                            SnapsToDevicePixels="False">
                            <hc:ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                <ItemsPresenter />
                            </hc:ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListView.Template>


                <ListView.ItemTemplate>
                    <DataTemplate >
                        <Grid 
                              x:Name="dev" 
                                    
                              Width="230" 
                              Height="260" >

                            <Button Visibility="{Binding IsDummy,Converter={StaticResource boolToVisibilityConvert}}" Command="{Binding Path=DataContext.ShowAddNewCommand, ElementName=itm}" hc:BorderElement.CornerRadius="15" Width="230" Height="260" Margin="0" hc:IconElement.Geometry="{DynamicResource AddGeometry}" hc:IconElement.Height="50" hc:IconElement.Width="50" Style="{DynamicResource ButtonDashedPrimary}">
                                
                            </Button>

                            <Border  Visibility="{Binding IsDummy,Converter={StaticResource InverseBoolToVisConverter}}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                CornerRadius="15" 
                                Background="{DynamicResource DarkOpacityBrush}">
                                <!--<Border.Style>
                                    <Style TargetType="Border"  >
                                        <Setter Property="BorderBrush" Value="#FF898989"></Setter>
                                        <Setter Property="BorderThickness" Value="2"></Setter>
                                        --><!--<Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#7F326CF3"></Setter>
                                                <Setter Property="BorderThickness" Value="6"></Setter>
                                            </Trigger>
                                        </Style.Triggers>--><!--
                                    </Style>
                                </Border.Style>-->
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction 
                                            Command="{Binding Path=DataContext.SelectCardCommand, ElementName=itm}" 
                                            CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid Margin="20">
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectCardCommand, ElementName=itm}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                 
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                        
                                    </Grid.RowDefinitions>
                                    <!--on off button and loading-->
                                    <Grid VerticalAlignment="Top" HorizontalAlignment="Right">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <hc:LoadingCircle Visibility="{Binding IsLoading, Converter={StaticResource boolToVisibilityConvert},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="24" Height="24" Margin="10,0"/>
                                        <ToggleButton Grid.Column="1"
                                        IsChecked="{Binding IsEnabled}" 
                                        BorderThickness="0"                                     
                                        Margin="0,0,0,0" 
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"                                      
                                        Grid.Row="0"
                                        Style="{DynamicResource ToggleButtonSwitchSmallerElipse}">
                                        </ToggleButton>
                                    </Grid>
                                   
                                    <!--delete device button-->
                                    
                                    <!--Icon-->
                                    <Border Padding="5" HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="0,0,0,0" Width="71" Height="71" CornerRadius="7" >
                                        <Border.Background>
                                            <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                                        </Border.Background>
                                        <Path Data="{Binding Geometry, Converter={converters:StaticResourceConverter}}" Width="35" Height="35" Fill="{DynamicResource PrimaryBrush}" Stretch="Uniform" />
                                    </Border>
                                    

                                    <!--device information-->
                                    
                                        <!--Big icon-->
                                       
                                        <StackPanel  
                                            Margin="0,40,0,20"
                                            Grid.Row="1" 
                                            >
                                            <hc:RunningBlock 
                                                Margin="5,10,10,0"
                                                BorderThickness="0" 
                                                Padding="0"  
                                                Duration="0:0:9" 
                                                Height="32" 
                                                HorizontalAlignment="Left" 
                                                AutoRun="True"  Width="150" 
                                                Runaway="False" 
                                                VerticalAlignment="Stretch" >
                                                <hc:RunningBlock.Content>
                                                    <TextBlock  Text="{Binding DeviceName}" 
                                                                FlowDirection="RightToLeft"
                                                                FontWeight="SemiBold"
                                                                Style="{DynamicResource TextBlockTitle}"
                                                                />
                                                </hc:RunningBlock.Content>
                                                <!--<hc:RunningBlock.Background>
                                                    <SolidColorBrush 
                                                        Color="White" 
                                                        Opacity="0.25" />
                                                </hc:RunningBlock.Background>-->

                                            </hc:RunningBlock>
                                            <TextBlock Margin="5" HorizontalAlignment="Left" Style="{DynamicResource TextBlockDefaultSecLight}"  Text="{Binding DeviceType}" />
                                        <TextBlock Margin="5" HorizontalAlignment="Left">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource TextBlockDefault}" TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsTransferActive}" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource DangerBrush}"/>
                                                            <Setter Property="Text" Value="Disconnected"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsTransferActive}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                                            <Setter Property="Text" Value="Connected"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                          
                                            
                                        </StackPanel>
                                    
                                    <!--<ListBox Grid.Row="2" Visibility="{Binding IsHUB,Converter={StaticResource boolToVisibilityConvert}}">
                                        <ListBox.Resources>
                                            <CollectionViewSource x:Key="allDevice" Source="{Binding ChildCard}" />
                                        </ListBox.Resources>
                                        <ListBox.ItemsSource>
                                            <CompositeCollection>
                                                <CollectionContainer Collection="{Binding Source={StaticResource allDevice}}" />

                                                <ListBoxItem Foreground="Red" Width="30" Height="30">
                                                    <materialDesign:PackIcon Kind="AddBox"></materialDesign:PackIcon>
                                                </ListBoxItem>
                                            </CompositeCollection>
                                        </ListBox.ItemsSource>

                                         Here you can customize everything you want 
                                    </ListBox>-->
                                </Grid>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <!--<ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>-->
            </ListView>

            <!-- all groups-->
            <!--<ListView  Margin="0,15,0,15" 
                       Name="groups" 
                       ItemsSource="{Binding Groups,UpdateSourceTrigger=PropertyChanged}"                        
                       IsTabStop="False"
                       ItemContainerStyle="{StaticResource ListViewContainerStyle}"
                       BorderThickness="0" 
                       Tag="{Binding}"
                       Visibility="{Binding ElementName=allGroups,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}"
                       Background="White">

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Width="900"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="False">
                            <hc:ScrollViewer>
                                <ItemsPresenter />
                            </hc:ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListView.Template>


                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid IsEnabled="{Binding IsConnected,Mode=TwoWay}" 
                              x:Name="dev" 
                              Visibility="{Binding IsVissible,Converter={StaticResource boolToVisibilityConvert}}"  
                              Margin="20" 
                              Width="230" 
                              Height="245" >



                            <Border 
                                Margin="-6"   
                                CornerRadius="30" 
                                Background="Transparent">
                                <Border.Style>
                                    <Style TargetType="Border"  >
                                        <Setter Property="BorderBrush" Value="#FF898989"></Setter>
                                        <Setter Property="BorderThickness" Value="2"></Setter>
                                        --><!--<Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#7F326CF3"></Setter>
                                                <Setter Property="BorderThickness" Value="6"></Setter>
                                            </Trigger>
                                        </Style.Triggers>--><!--
                                    </Style>
                                </Border.Style>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction 
                                            Command="{Binding Path=DataContext.SelectGroupCommand, ElementName=itm}" 
                                            CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    --><!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectCardCommand, ElementName=itm}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>--><!--
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="58*"/>
                                        <ColumnDefinition Width="15*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="22*"/>
                                        <RowDefinition Height="64*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    --><!--on off button--><!--
                                    <ToggleButton 
                                        IsChecked="{Binding LEDOn}" 
                                        Grid.Column="1" 
                                        BorderBrush="#FF326CF3" 
                                        BorderThickness="1"
                                        Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                                        ToolTip="Bật/Tắt"
                                        Width="32" 
                                        Height="32" 
                                        Foreground="#FF326CF3" 
                                        Background="#3F326CF3" 
                                        HorizontalAlignment="Right" 
                                        Margin="0,0,15,0">
                                        <materialDesign:PackIcon
                                        Kind="Power"
                                        Height="26"
                                        Width="26" />
                                    </ToggleButton>
                                    --><!--delete device button--><!--
                                    <Button 
                                        BorderBrush="{x:Null}" 
                                        BorderThickness="1"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        ToolTip="Xóa Thiết bị" 
                                        Command="{Binding Path=DataContext.DeleteGroupCommand, ElementName=itm}" 
                                        CommandParameter="{Binding}"
                                        Grid.Column="0"
                                        Width="32" 
                                        Height="32" 
                                        Margin="0,0,5,0" 
                                        Padding="0" 
                                        Background="#33FD7E35" 
                                        materialDesign:ButtonAssist.CornerRadius="7" 
                                        Foreground="#FFFD7E35" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Right">
                                        <materialDesign:PackIcon
                                          Kind="Close"
                                          Height="26"
                                          Width="26" />
                                    </Button>
                                    --><!--color dot--><!--
                                    <Rectangle 
                                        Margin="0,0,20,20" 
                                        Grid.Column="1" 
                                        Grid.Row="1" 
                                        Fill="Black"
                                        Width="19" 
                                        Height="19" 
                                        RadiusX="10" 
                                        RadiusY="10" 
                                        VerticalAlignment="Bottom" 
                                        HorizontalAlignment="Right"/>
                                    --><!--device information--><!--
                                    <Grid Grid.Row="1" Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="13*"/>
                                            <RowDefinition Height="51*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel  
                                            Margin="20,0,0,0" 
                                            Grid.Row="1" 
                                            Grid.ColumnSpan="1">
                                            <hc:RunningBlock 
                                                BorderThickness="0" 
                                                Padding="0"  
                                                Duration="0:0:9" 
                                                Height="32" 
                                                HorizontalAlignment="Left" 
                                                AutoRun="True"  Width="150" 
                                                Runaway="False" 
                                                VerticalAlignment="Stretch" >
                                                <hc:RunningBlock.Content>
                                                    <TextBlock  Text="{Binding DeviceName}" 
                                                                FlowDirection="RightToLeft"
                                                                FontSize="20" 
                                                                FontWeight="DemiBold"/>
                                                </hc:RunningBlock.Content>
                                                <hc:RunningBlock.Background>
                                                    <SolidColorBrush 
                                                        Color="White" 
                                                        Opacity="0.25" />
                                                </hc:RunningBlock.Background>

                                            </hc:RunningBlock>
                                            <TextBlock Padding="3" Text="{Binding DeviceType}" FontSize="14"/>
                                            <TextBlock Padding="3" Text="{Binding DevicePort}"/>
                                            <TextBlock Padding="3" Text="{Binding DeviceID, StringFormat=Device ID : {0}}"/>
                                            <TextBlock Padding="3" Text="{Binding Brightness,StringFormat=Độ sáng : {0}%}"/>
                                        </StackPanel>
                                    </Grid>
                                    --><!--<ListBox Grid.Row="2" Visibility="{Binding IsHUB,Converter={StaticResource boolToVisibilityConvert}}">
                                        <ListBox.Resources>
                                            <CollectionViewSource x:Key="allDevice" Source="{Binding ChildCard}" />
                                        </ListBox.Resources>
                                        <ListBox.ItemsSource>
                                            <CompositeCollection>
                                                <CollectionContainer Collection="{Binding Source={StaticResource allDevice}}" />

                                                <ListBoxItem Foreground="Red" Width="30" Height="30">
                                                    <materialDesign:PackIcon Kind="AddBox"></materialDesign:PackIcon>
                                                </ListBoxItem>
                                            </CompositeCollection>
                                        </ListBox.ItemsSource>

                                         Here you can customize everything you want 
                                    </ListBox>--><!--
                                </Grid>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                --><!--<ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>--><!--
            </ListView>-->
        </Grid>

    </Grid>

</UserControl>
