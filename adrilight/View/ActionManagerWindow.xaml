<hc:Window x:Class="adrilight.View.ActionManagerWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
           xmlns:local ="clr-namespace:adrilight.View"
           xmlns:converters="clr-namespace:adrilight.Converter"
           xmlns:ut ="clr-namespace:adrilight.Util"
           xmlns:parameters ="clr-namespace:adrilight.Util.ModeParameters"
           xmlns:System="clr-namespace:System;assembly=mscorlib"
           mc:Ignorable="d"
           Background="{DynamicResource RegionBrush}"
           d:DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}"
           DataContext="{Binding Source={StaticResource Locator}, Path=MainViewViewModel}" 
           ResizeMode="NoResize"
           x:Name="window"
           SizeToContent="Height"
           MinHeight="300"
           MaxHeight="800"
           Width="500" 
           WindowStartupLocation="CenterOwner" 
           Left="0" Top="0">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="ControlStyle.xaml">
                <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                    <SolidColorBrush x:Key="DefaultBackgroundColor" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                        <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
                    <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>
                    <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">

                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="0"/>
                        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
                        <Setter Property="Background" Value="{StaticResource RegionBrush}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="4"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Width" Value="auto"/>
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>

                        <!--<Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu >
                            <MenuItem  Header="Share">
                            </MenuItem>
                            <MenuItem  Header="Delete" Command="{Binding PlacementTarget.Tag.LaunchDeleteSelectedDeviceWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource delete}" Fill="{StaticResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>

                    </Setter.Value>
                </Setter>-->

                        

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Margin="2" CornerRadius="7" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource HoverBrush}"/>
                                            <!--<Setter Property="BorderThickness" TargetName="Bd" Value="4"/>-->
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                            <!--<Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->
                                        </MultiTrigger>


                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>

                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                            <!--<Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>

                                            <!--<Setter Property="BorderThickness" TargetName="Bd" Value="6"/>-->
                                            <!--<Setter Property="Effect" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>-->
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
   
        <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
           
        </Grid.RowDefinitions>
        
            
        
            
            <TextBlock Text="{Binding CurrentSelectedAutomation.Name}" Style="{StaticResource TextBlockLarge}">
                
            </TextBlock>
        <ScrollViewer  Grid.Row="1">
            <Grid>
           
                <StackPanel>
                
           
            <GroupBox   VerticalAlignment="Center"   hc:TitleElement.TitleWidth="150" Margin="10" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Top">
                
            
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock FontWeight="SemiBold" Text="CHUỖI HÀNH ĐỘNG"/>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>

                <ListView MaxHeight="300" Margin="0,10,0,10" HorizontalAlignment="Center"  SelectedItem="{Binding CurrentSelectedAction}" Background="Transparent" BorderThickness="0" ItemsSource="{Binding CurrentSelectedAutomation.Actions}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewContainerStyle}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.Template>
                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                            <Border Margin="0" 
                            SnapsToDevicePixels="False">
                                <hc:ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                    <ItemsPresenter />
                                </hc:ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListView.Template>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border Effect="{DynamicResource EffectShadow1}" Height="auto" Width="450" CornerRadius="5" Background="{DynamicResource MainContentBackgroundBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--icon-->
                                    <Grid Grid.Column="0">
                                                <Path HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{DynamicResource PrimaryBrush}" Width="25" Height="25" Margin="12,12" Data="{DynamicResource auto}" Stretch="Uniform" >

                                        </Path>
                                    </Grid>
                                    <!--Action-->
                                            <hc:TransitioningContentControl Grid.Column="1">
                                                <Grid>
                                                    <WrapPanel VerticalAlignment="Center" Margin="5" Orientation="Horizontal">
                                                        <Button hc:BorderElement.CornerRadius="2" Command="{Binding Path=DataContext.OpenTargetActionSelectionWindowCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding .}"  HorizontalAlignment="Center" Height="auto" Width="auto" VerticalAlignment="Top" Margin="5" FontSize="15" FontWeight="SemiBold" Content="{Binding ActionType.Name}" Padding="5,3" Foreground="{DynamicResource PrimaryBrush}" BorderThickness="0">
                                                            <Button.Background>
                                                                <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                                                            </Button.Background>
                                                        </Button>
                                                        <Button CommandParameter="{Binding .}" Command="{Binding Path=DataContext.OpenTargetParamSelectionWindowCommand, RelativeSource={RelativeSource AncestorType=ListView}}" HorizontalAlignment="Center" Height="auto" Width="auto" VerticalAlignment="Top" hc:BorderElement.CornerRadius="2" Margin="5" FontSize="15" FontWeight="SemiBold" Content="{Binding ActionParameter.Name}" Padding="5,3" Foreground="{DynamicResource PrimaryBrush}" BorderThickness="0">
                                                            <Button.Background>
                                                                <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                                                            </Button.Background>
                                                        </Button>
                                                        <TextBlock Visibility="{Binding ActionType.IsTargetDeviceDisplayed,Converter={StaticResource boolToVisibilityConvert}}" Margin="7" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding ActionType.LinkText}" Style="{DynamicResource TextBlockSubTitle}">

                                                        </TextBlock>

                                                        <Button Visibility="{Binding ActionType.IsTargetDeviceDisplayed,Converter={StaticResource boolToVisibilityConvert}}" CommandParameter="{Binding .}" Command="{Binding Path=DataContext.OpenTargetDeviceSelectionWindowCommand, RelativeSource={RelativeSource AncestorType=ListView}}" FontSize="15" FontWeight="SemiBold" HorizontalAlignment="Center" Height="auto" Width="auto" VerticalAlignment="Top" hc:BorderElement.CornerRadius="2" Margin="5" Content="{Binding TargetDeviceName,TargetNullValue='Chọn thiết bị'}" Padding="5,3" Foreground="{DynamicResource PrimaryBrush}" BorderThickness="0">
                                                            <Button.Background>
                                                                <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                                                            </Button.Background>
                                                        </Button>
                                                        <TextBlock Visibility="{Binding ActionType.IsValueDisplayed,Converter={StaticResource boolToVisibilityConvert}}" Margin="7" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding ActionType.ToResultText}" Style="{DynamicResource TextBlockSubTitle}">

                                                        </TextBlock>
                                                        <Button MinWidth="32" MinHeight="25" Visibility="{Binding ActionType.IsValueDisplayed,Converter={StaticResource boolToVisibilityConvert}}" CommandParameter="{Binding .}" Command="{Binding Path=DataContext.OpenAutomationValuePickerWindowCommand, RelativeSource={RelativeSource AncestorType=ListView}}" FontSize="15" FontWeight="SemiBold" HorizontalAlignment="Center" Height="auto" Width="auto" VerticalAlignment="Top" hc:BorderElement.CornerRadius="2" Margin="5"  Padding="5,3"  BorderThickness="0">
                                                            <Button.Style>
                                                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                                                                    <Setter Property="Background" Value="{DynamicResource DefaultBackgroundColor }">

                                                                    </Setter>
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                                                                    <!--<Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ActionParameter.Type}" Value="color">
                                                                            <Setter Property="Foreground" Value="{Binding Path=ActionParameter.Value,Converter={StaticResource ColorToBrushConverter}}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>-->
                                                                </Style>
                                                             
                                                            </Button.Style>
                                                            <Grid>
                                                                <Grid.Resources>
                                                                    <DataTemplate DataType="{x:Type ut:ModeParameterEnum}">
                                                                        <TextBlock Text="{Binding .}"/>
                                                                    </DataTemplate>
                                                                    <DataTemplate DataType="{x:Type ut:ColorCard}">
                                                                        <Grid>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                
                                                                           
                                                                            <Border CornerRadius="2" Width="20" Height="20">
                                                                                        <Border.Background>
                                                                                            <LinearGradientBrush StartPoint="0,1" EndPoint = "1,0">
                                                                                                <GradientStop Color="{Binding StartColor}" Offset="0.0" />
                                                                                                <GradientStop Color="{Binding StopColor}" Offset="1.0" />
                                                                                            </LinearGradientBrush>
                                                                                        </Border.Background>
                                                                                    </Border>
                                                                                    <TextBlock>
                                                                                        <TextBlock.Text>
                                                                                            <MultiBinding StringFormat=" {0} - {1}">
                                                                                                <Binding Path="StartColor"/>
                                                                                                <Binding Path="StopColor"/>
                                                                                            </MultiBinding>
                                                                                        </TextBlock.Text>
                                                                                    </TextBlock>
                                                                                </StackPanel>
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </Grid.Resources>
                                                                <Grid Grid.Column="1">
                                                                    <ContentControl Content="{Binding Path=ActionParameter.Value}"/>
                                                                </Grid>
                                                            </Grid>
                                                          
                                                        </Button>
                                                    </WrapPanel>


                                                </Grid>
                                            </hc:TransitioningContentControl>
                                    
                                    <!--delete button-->

                                    <Grid Grid.Column="2">
                                                <Button CommandParameter="{Binding .}" Command="{Binding Path=DataContext.DeleteSelectedActionFromListCommand, RelativeSource={RelativeSource AncestorType=ListView}}" BorderThickness="0" HorizontalAlignment="Right" Margin="10" VerticalAlignment="Center" Width="25" Height="25" Style="{DynamicResource ButtonIconCircular}" hc:IconElement.Geometry="{DynamicResource AddGeometry}" Background="{DynamicResource SecondaryRegionBrush}">
                                                    <Button.LayoutTransform>
                                                        <RotateTransform Angle="-45" />
                                                    </Button.LayoutTransform>
                                                </Button>
                                    </Grid>
                                </Grid>
                            </Border>

                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </GroupBox>
                <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                </hc:Divider>
                <GroupBox   VerticalAlignment="Top"   hc:TitleElement.TitleWidth="150" Margin="10" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Left" hc:TitleElement.TitlePlacement="Top">


                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="SemiBold" Text="GỢI Ý HÀNH ĐỘNG"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>

                        <ListView MaxHeight="300" Margin="0,10,0,10" HorizontalAlignment="Center" Background="Transparent" BorderThickness="0" ItemsSource="{Binding AvailableActionsforCurrentDevice}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewContainerStyle}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.Template>
                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                <Border Margin="0" 
                            SnapsToDevicePixels="False">
                                    <hc:ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                        <ItemsPresenter />
                                    </hc:ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border HorizontalAlignment="Left" BorderThickness="1" Height="auto" Width="auto" CornerRadius="5" Background="{DynamicResource MainContentBackgroundBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <!--icon-->
                                        <!--<Grid Grid.Column="0">
                                                <Path HorizontalAlignment="Left" VerticalAlignment="Top" Fill="{DynamicResource PrimaryBrush}" Width="20" Height="20" Margin="12,12" Data="{Binding Geometry, Converter={converters:StaticResourceConverter}}" Stretch="Uniform" >

                                            </Path>
                                        </Grid>-->
                                        <!--Action-->
                                        <Grid  Grid.Column="1">
                                            <TextBlock ToolTip="{Binding Description}" FontWeight="SemiBold" Style="{DynamicResource TextBlockSubTitle}" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Name}">
                                                
                                            </TextBlock>
                                        </Grid>
                                        <!--add button-->

                                        <Grid Grid.Column="2">
                                                <Button Command="{Binding Path=DataContext.AddSelectedActionTypeToListCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding .}" BorderThickness="0" HorizontalAlignment="Right" Margin="10" VerticalAlignment="Top" Width="25" Height="25" Style="{DynamicResource ButtonIconCircular}" hc:IconElement.Geometry="{DynamicResource AddGeometry}" ToolTip="Thêm vào chuỗi hành động" Background="{DynamicResource SecondaryRegionBrush}"/>
                                        </Grid>
                                    </Grid>
                                </Border>

                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </GroupBox>
                    <Grid>
                        <StackPanel Margin="20">
                            <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                            </hc:Divider>
                            <Grid Name="Condition">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <GroupBox   VerticalAlignment="Center"   hc:TitleElement.TitleWidth="150" Header="SPEED" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                    <GroupBox.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock FontWeight="SemiBold" Text="PHÍM TẮT KÍCH HOẠT"/>
                                        </DataTemplate>
                                    </GroupBox.HeaderTemplate>

                                    <Button CommandParameter="{Binding CurrentSelectedAutomation}" Command="{Binding OpenHotKeySelectionWindowCommand}" BorderThickness="0" Margin="0" HorizontalAlignment="Right" Height="50" Padding="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid>
                                                <ListView x:Name="Modifier_display" 
                                                     ItemsSource="{Binding CurrentSelectedAutomation.Modifiers}"
                                                                            
                                                     Background="Transparent"
                                                     BorderThickness="0"
                                                     Style="{StaticResource WrapPanelHorizontalListBox}">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid Margin="3,0,3,0">
                                                                <Border IsHitTestVisible="False" Height="30" MinWidth="30" Background="{DynamicResource PrimaryBrush}" BorderThickness="0" BorderBrush="{StaticResource BorderBrush}" CornerRadius="4">
                                                                    <TextBlock Style="{StaticResource TextBlockDefaultBold}" Foreground="Black" Margin="5" Text="{Binding .}"/>
                                                                </Border>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>

                                                </ListView>

                                            </Grid>
                                            <Grid Grid.Column="1">

                                                <Border IsHitTestVisible="False" Height="30" MinWidth="30" Margin="3,0,3,0" Background="{DynamicResource PrimaryBrush}" BorderThickness="0" BorderBrush="{StaticResource BorderBrush}" CornerRadius="4">
                                                    <TextBlock Style="{StaticResource TextBlockDefaultBold}" Foreground="Black" Margin="5" Text="{Binding CurrentSelectedAutomation.StandardKey.Name}"/>
                                                </Border>

                                            </Grid>
                                            <Grid Grid.Column="2">
                                                <Path Fill="{DynamicResource PrimaryTextBrush}" Width="20" Height="20" Margin="10,5" Data="{DynamicResource edit}" Stretch="Uniform" >

                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </Button>


                                </GroupBox>
                                <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Phím tắt dùng để thực hiện cùng lúc các hành động bên trên"/>
                            </Grid>
                            <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                            </hc:Divider>

                            <Grid Name="Systemtray">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <GroupBox   VerticalAlignment="Center"   hc:TitleElement.TitleWidth="150" Header="SPEED" Margin="5" Style="{StaticResource GroupBoxOriginal}" HorizontalAlignment="Stretch" hc:TitleElement.TitlePlacement="Left">
                                    <GroupBox.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock FontWeight="SemiBold" Text="THÊM VÀO SYSTEM TRAY"/>
                                        </DataTemplate>
                                    </GroupBox.HeaderTemplate>


                                    <ToggleButton HorizontalAlignment="Right" IsChecked="{Binding GeneralSettings.Autostart}" Style="{StaticResource ToggleButtonSwitchSmallerElipse}">

                                    </ToggleButton>


                                </GroupBox>
                                <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextBlockDefaultSecLight}" Grid.Row="1" Text="Phím tắt dùng để thực hiện cùng lúc các hành động bên trên"/>
                            </Grid>
                            <hc:Divider  LineStroke="{StaticResource SecondaryRegionBrush}" Margin="5,10,5,10">

                            </hc:Divider>

                        </StackPanel>

                    </Grid>
            
            </StackPanel>
            
        </Grid>
        </ScrollViewer>

        <Grid Grid.Row="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Button Click="Button_Click" Command="{Binding SaveCurrentSelectedAutomationCommand}" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="2" Content="Save"/>
                <Button Click="Button_Click" Background="Transparent" Margin="10" Style="{StaticResource ButtonPrimary}" Grid.Column="1" Content="Cancel"/>
            </Grid>
        




        
    </Grid>
   
</hc:Window>